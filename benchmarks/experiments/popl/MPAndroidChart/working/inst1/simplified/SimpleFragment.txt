Parsing files...
Merge Instance for method (Ident "SimpleFragment",Ident "generateScatterData",[PrimType IntT,PrimType IntT,PrimType IntT])
protected ScatterData generateScatterData (int dataSets, int range, int count)
{
  ArrayList<ScatterDataSet> sets = new ArrayList<ScatterDataSet>();
  <?HOLE?>
  for (int i = 0 ; i < dataSets ; i++)
  {
    ArrayList<Entry> entries = new ArrayList<Entry>();
    for (int j = 0 ; j < count ; j++)
    {
      <?HOLE?>
    }
    ScatterDataSet ds = new ScatterDataSet(entries, getLabel(i));
    sets.add(ds);
  }
  <?HOLE?>
  d.setValueTypeface(tf);
  return d;
}
Edit Base:
Hole 1:
[]: ScatterShape[] shapes = ScatterChart.getAllPossibleShapes();
Hole 2:
[SLoop,SLoop]: entries.add(new Entry(range, j));
Hole 3:
[]: ScatterData d = new ScatterData(ChartData.generateXVals(0, count), sets);

Edit A:
Hole 1:
[]: ScatterShape[] shapes = ScatterChart.getAllPossibleShapes();
Hole 2:
[SLoop,SLoop]: entries.add(new Entry(0, j, range));
Hole 3:
[]: ScatterData d = new ScatterData(sets);

Edit B:
Hole 1:
[]: ScatterChart.ScatterShape[] shapes = ScatterChart.ScatterShape.getAllDefaultShapes();
Hole 2:
[SLoop,SLoop]: entries.add(new Entry(range, j));
Hole 3:
[]: ScatterData d = new ScatterData(ChartData.generateXVals(0, count), sets);

Edit M:
Hole 1:
[]: ScatterChart.ScatterShape[] shapes = ScatterChart.ScatterShape.getAllDefaultShapes();
Hole 2:
[SLoop,SLoop]: entries.add(new Entry(0, j, range));
Hole 3:
[]: ScatterData d = new ScatterData(sets);


