Merge Instance for method (Ident "ServerPropertiesTests",Ident "testTomcatBinding",[])
@Test
 public void testTomcatBinding () throws Exception
{
  Map<String, String> map = new HashMap<String, String>();
  map.put("server.tomcat.accesslog.pattern", "%h %t '%r' %s %b");
  map.put("server.tomcat.accesslog.prefix", "foo");
  <?HOLE?>
  map.put("server.tomcat.accesslog.rename-on-rotate", "true");
  <?HOLE?>
  map.put("server.tomcat.accesslog.suffix", "-bar.log");
  map.put("server.tomcat.protocol_header", "X-Forwarded-Protocol");
  map.put("server.tomcat.remote_ip_header", "Remote-Ip");
  map.put("server.tomcat.internal_proxies", "10\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}");
  map.put("server.tomcat.background_processor_delay", "10");
  bindProperties(map);
  ServerProperties.Tomcat tomcat = this.properties.getTomcat();
  assertThat(tomcat.getAccesslog().getPattern()).isEqualTo("%h %t '%r' %s %b");
  assertThat(tomcat.getAccesslog().getPrefix()).isEqualTo("foo");
  <?HOLE?>
  assertThat(tomcat.getAccesslog().isRenameOnRotate()).isTrue();
  <?HOLE?>
  assertThat(tomcat.getAccesslog().getSuffix()).isEqualTo("-bar.log");
  assertThat(tomcat.getRemoteIpHeader()).isEqualTo("Remote-Ip");
  assertThat(tomcat.getProtocolHeader()).isEqualTo("X-Forwarded-Protocol");
  assertThat(tomcat.getInternalProxies()).isEqualTo("10\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}");
  assertThat(tomcat.getBackgroundProcessorDelay()).isEqualTo(10);
}
Edit Base:
Hole 1:
[]: <SKIP>
Hole 2:
[]: <SKIP>
Hole 3:
[]: <SKIP>
Hole 4:
[]: <SKIP>

Edit A:
Hole 1:
[]: map.put("server.tomcat.accesslog.rotate", "false");
Hole 2:
[]: <SKIP>
Hole 3:
[]: assertThat(tomcat.getAccesslog().isRotate()).isFalse();
Hole 4:
[]: <SKIP>

Edit B:
Hole 1:
[]: <SKIP>
Hole 2:
[]: map.put("server.tomcat.accesslog.request-attributes-enabled", "true");
Hole 3:
[]: <SKIP>
Hole 4:
[]: assertThat(tomcat.getAccesslog().isRequestAttributesEnabled()).isTrue();

Edit M:
Hole 1:
[]: map.put("server.tomcat.accesslog.rotate", "false");
Hole 2:
[]: map.put("server.tomcat.accesslog.request-attributes-enabled", "true");
Hole 3:
[]: assertThat(tomcat.getAccesslog().isRotate()).isFalse();
Hole 4:
[]: assertThat(tomcat.getAccesslog().isRequestAttributesEnabled()).isTrue();

