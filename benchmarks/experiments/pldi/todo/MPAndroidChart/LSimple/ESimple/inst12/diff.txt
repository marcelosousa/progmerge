Merge Instance for method (Ident "LineChartTime",Ident "onCreate",[RefType (ClassRefType (ClassType [(Ident "Bundle",[])]))])
@Override
 protected void onCreate (Bundle savedInstanceState)
{
  super.onCreate(savedInstanceState);
  getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
  <?HOLE?>
  tvX = (TextView) findViewById(R.id.tvXMax);
  <?HOLE?>
  mSeekBarX = (SeekBar) findViewById(R.id.seekBar1);
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  mSeekBarX.setOnSeekBarChangeListener(this);
  mChart = (LineChart) findViewById(R.id.chart1);
  <?HOLE?>
  mChart.setDescription("");
  mChart.setNoDataTextDescription("You need to provide data for the chart.");
  mChart.setTouchEnabled(true);
  mChart.setDragDecelerationFrictionCoef(0.9F);
  mChart.setDragEnabled(true);
  mChart.setScaleEnabled(true);
  mChart.setDrawGridBackground(false);
  mChart.setHighlightPerDragEnabled(true);
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  mChart.invalidate();
  <?HOLE?>
  Legend l = mChart.getLegend();
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  XAxis xAxis = mChart.getXAxis();
  <?HOLE?>
  xAxis.setTypeface(tf);
  <?HOLE?>
  xAxis.setTextColor(Color.WHITE);
  xAxis.setDrawAxisLine(false);
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  YAxis leftAxis = mChart.getAxisLeft();
  <?HOLE?>
  leftAxis.setTypeface(tf);
  leftAxis.setTextColor(ColorTemplate.getHoloBlue());
  <?HOLE?>
  <?HOLE?>
  leftAxis.setDrawGridLines(true);
  leftAxis.setGranularityEnabled(true);
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  YAxis rightAxis = mChart.getAxisRight();
  rightAxis.setEnabled(false);
}
Edit Base:
Hole 1:
[]: setContentView(R.layout.activity_linechart);
Hole 2:
[]: tvY = (TextView) findViewById(R.id.tvYMax);
Hole 3:
[]: mSeekBarY = (SeekBar) findViewById(R.id.seekBar2);
Hole 4:
[]: mSeekBarX.setProgress(45);
Hole 5:
[]: mSeekBarY.setProgress(100);
Hole 6:
[]: mSeekBarY.setOnSeekBarChangeListener(this);
Hole 7:
[]: mChart.setLogEnabled(true);
Hole 8:
[]: mChart.setPinchZoom(true);
Hole 9:
[]: mChart.setBackgroundColor(Color.LTGRAY);
Hole 10:
[]: setData(20, 30);
Hole 11:
[]: Typeface tf = Typeface.createFromAsset(getAssets(), "OpenSans-Regular.ttf");
Hole 12:
[]: l.setForm(LegendForm.LINE);
Hole 13:
[]: l.setTypeface(tf);
Hole 14:
[]: l.setTextSize(11.0F);
Hole 15:
[]: l.setTextColor(Color.WHITE);
Hole 16:
[]: l.setPosition(LegendPosition.BELOW_CHART_LEFT);
Hole 17:
[]: <SKIP>
Hole 18:
[]: xAxis.setTextSize(12.0F);
Hole 19:
[]: xAxis.setAxisMinValue(5000);
Hole 20:
[]: xAxis.setAxisMaxValue(30000);
Hole 21:
[]: <SKIP>
Hole 22:
[]: <SKIP>
Hole 23:
[]: <SKIP>
Hole 24:
[]: <SKIP>
Hole 25:
[]: leftAxis.setAxisMaxValue(200.0F);
Hole 26:
[]: leftAxis.setAxisMinValue(0.0F);
Hole 27:
[]: <SKIP>
Hole 28:
[]: <SKIP>
Hole 29:
[]: <SKIP>
Hole 30:
[]: <SKIP>

Edit A:
Hole 1:
[]: setContentView(R.layout.activity_linechart_time);
Hole 2:
[]: <SKIP>
Hole 3:
[]: mSeekBarX.setProgress(100);
Hole 4:
[]: tvX.setText("100");
Hole 5:
[]: <SKIP>
Hole 6:
[]: <SKIP>
Hole 7:
[]: mChart.setHardwareAccelerationEnabled(true);
Hole 8:
[]: mChart.setBackgroundColor(Color.WHITE);
Hole 9:
[]: mChart.setViewPortOffsets(0.0F, 0.0F, 0.0F, 0.0F);
Hole 10:
[]: setData(100, 30);
Hole 11:
[]: Typeface tf = Typeface.createFromAsset(getAssets(), "OpenSans-Light.ttf");
Hole 12:
[]: l.setEnabled(false);
Hole 13:
[]: <SKIP>
Hole 14:
[]: <SKIP>
Hole 15:
[]: <SKIP>
Hole 16:
[]: <SKIP>
Hole 17:
[]: xAxis.setPosition(XAxis.XAxisPosition.TOP_INSIDE);
Hole 18:
[]: xAxis.setTextSize(10.0F);
Hole 19:
[]: xAxis.setDrawGridLines(true);
Hole 20:
[]: xAxis.setTextColor(Color.rgb(255, 192, 56));
Hole 21:
[]: xAxis.setCenterAxisLabels(true);
Hole 22:
[]: xAxis.setGranularity(60000L);
Hole 23:
[]: xAxis.setValueFormatter(new AxisValueFormatter()
                        {
                          private SimpleDateFormat mFormat = new SimpleDateFormat("dd MMM HH:mm");
                          @Override
                          public String getFormattedValue (float value, AxisBase axis)
                          {
                            return mFormat.format(new Date(((long) value)));
                          }
                          @Override
                          public int getDecimalDigits ()
                          {
                            return 0;
                          }
                        });
Hole 24:
[]: leftAxis.setPosition(YAxis.YAxisLabelPosition.INSIDE_CHART);
Hole 25:
[]: <SKIP>
Hole 26:
[]: <SKIP>
Hole 27:
[]: leftAxis.setAxisMinValue(0.0F);
Hole 28:
[]: leftAxis.setAxisMaxValue(170.0F);
Hole 29:
[]: leftAxis.setYOffset((-9.0F));
Hole 30:
[]: leftAxis.setTextColor(Color.rgb(255, 192, 56));

Edit B:
Hole 1:
[]: setContentView(R.layout.activity_linechart_time);
Hole 2:
[]: <SKIP>
Hole 3:
[]: mSeekBarX.setProgress(100);
Hole 4:
[]: tvX.setText("100");
Hole 5:
[]: <SKIP>
Hole 6:
[]: <SKIP>
Hole 7:
[]: <SKIP>
Hole 8:
[]: mChart.setBackgroundColor(Color.WHITE);
Hole 9:
[]: mChart.setViewPortOffsets(0.0F, 0.0F, 0.0F, 0.0F);
Hole 10:
[]: setData(100, 30);
Hole 11:
[]: Typeface tf = Typeface.createFromAsset(getAssets(), "OpenSans-Light.ttf");
Hole 12:
[]: l.setEnabled(false);
Hole 13:
[]: <SKIP>
Hole 14:
[]: <SKIP>
Hole 15:
[]: <SKIP>
Hole 16:
[]: <SKIP>
Hole 17:
[]: xAxis.setPosition(XAxis.XAxisPosition.TOP_INSIDE);
Hole 18:
[]: xAxis.setTextSize(10.0F);
Hole 19:
[]: xAxis.setDrawGridLines(true);
Hole 20:
[]: xAxis.setTextColor(Color.rgb(255, 192, 56));
Hole 21:
[]: xAxis.setCenterAxisLabels(true);
Hole 22:
[]: xAxis.setValueFormatter(new AxisValueFormatter()
                        {
                          private SimpleDateFormat mFormat = new SimpleDateFormat("dd MMM HH:mm");
                          @Override
                          public String getFormattedValue (float value, AxisBase axis)
                          {
                            return mFormat.format(new Date(((long) value)));
                          }
                          @Override
                          public int getDecimalDigits ()
                          {
                            return 0;
                          }
                        });
Hole 23:
[]: <SKIP>
Hole 24:
[]: leftAxis.setPosition(YAxis.YAxisLabelPosition.INSIDE_CHART);
Hole 25:
[]: <SKIP>
Hole 26:
[]: <SKIP>
Hole 27:
[]: leftAxis.setAxisMinValue(0.0F);
Hole 28:
[]: leftAxis.setAxisMaxValue(170.0F);
Hole 29:
[]: leftAxis.setYOffset((-9.0F));
Hole 30:
[]: leftAxis.setTextColor(Color.rgb(255, 192, 56));

Edit M:
Hole 1:
[]: setContentView(R.layout.activity_linechart_time);
Hole 2:
[]: <SKIP>
Hole 3:
[]: mSeekBarX.setProgress(100);
Hole 4:
[]: tvX.setText("100");
Hole 5:
[]: <SKIP>
Hole 6:
[]: <SKIP>
Hole 7:
[]: <SKIP>
Hole 8:
[]: mChart.setBackgroundColor(Color.WHITE);
Hole 9:
[]: mChart.setViewPortOffsets(0.0F, 0.0F, 0.0F, 0.0F);
Hole 10:
[]: setData(100, 30);
Hole 11:
[]: Typeface tf = Typeface.createFromAsset(getAssets(), "OpenSans-Light.ttf");
Hole 12:
[]: l.setEnabled(false);
Hole 13:
[]: <SKIP>
Hole 14:
[]: <SKIP>
Hole 15:
[]: <SKIP>
Hole 16:
[]: <SKIP>
Hole 17:
[]: xAxis.setPosition(XAxis.XAxisPosition.TOP_INSIDE);
Hole 18:
[]: xAxis.setTextSize(10.0F);
Hole 19:
[]: xAxis.setDrawGridLines(true);
Hole 20:
[]: xAxis.setTextColor(Color.rgb(255, 192, 56));
Hole 21:
[]: xAxis.setCenterAxisLabels(true);
Hole 22:
[]: xAxis.setGranularity(60000L);
Hole 23:
[]: xAxis.setValueFormatter(new AxisValueFormatter()
                        {
                          private SimpleDateFormat mFormat = new SimpleDateFormat("dd MMM HH:mm");
                          @Override
                          public String getFormattedValue (float value, AxisBase axis)
                          {
                            return mFormat.format(new Date(((long) value)));
                          }
                          @Override
                          public int getDecimalDigits ()
                          {
                            return 0;
                          }
                        });
Hole 24:
[]: leftAxis.setPosition(YAxis.YAxisLabelPosition.INSIDE_CHART);
Hole 25:
[]: <SKIP>
Hole 26:
[]: <SKIP>
Hole 27:
[]: leftAxis.setAxisMinValue(0.0F);
Hole 28:
[]: leftAxis.setAxisMaxValue(170.0F);
Hole 29:
[]: leftAxis.setYOffset((-9.0F));
Hole 30:
[]: leftAxis.setTextColor(Color.rgb(255, 192, 56));

