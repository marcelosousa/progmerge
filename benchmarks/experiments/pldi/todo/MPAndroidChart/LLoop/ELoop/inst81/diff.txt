Merge Instance for method (Ident "BarChartActivityMultiDataset",Ident "onProgressChanged",[RefType (ClassRefType (ClassType [(Ident "SeekBar",[])])),PrimType IntT,PrimType BooleanT])
@Override
 public void onProgressChanged (SeekBar seekBar, int progress, boolean fromUser)
{
  tvX.setText(("" + mSeekBarX.getProgress() * 3));
  tvY.setText(("" + mSeekBarY.getProgress()));
  <?HOLE?>
  for (int i = 0 ; i < mSeekBarX.getProgress() ; i++)
  {
    <?HOLE?>
    <?HOLE?>
  }
  ArrayList<BarEntry> yVals1 = new ArrayList<BarEntry>();
  ArrayList<BarEntry> yVals2 = new ArrayList<BarEntry>();
  ArrayList<BarEntry> yVals3 = new ArrayList<BarEntry>();
  float mult = mSeekBarY.getProgress() * 1000.0F;
  for (int i = 0 ; i < mSeekBarX.getProgress() ; i++)
  {
    float val = (float) (Math.random() * mult) + 3;
    yVals1.add(new BarEntry(val, i));
  }
  for (int i = 0 ; i < mSeekBarX.getProgress() ; i++)
  {
    float val = (float) (Math.random() * mult) + 3;
    yVals2.add(new BarEntry(val, i));
  }
  for (int i = 0 ; i < mSeekBarX.getProgress() ; i++)
  {
    float val = (float) (Math.random() * mult) + 3;
    yVals3.add(new BarEntry(val, i));
  }
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
}
Edit Base:
Hole 1:
[]: ArrayList<String> xVals = new ArrayList<String>();
Hole 2:
[SLoop]: xVals.add((i + 1990 + ""));
Hole 3:
[SLoop]: <SKIP>
Hole 4:
[]: BarDataSet set1 = new BarDataSet(yVals1, "Company A");
Hole 5:
[]: set1.setColor(Color.rgb(104, 241, 175));
Hole 6:
[]: BarDataSet set2 = new BarDataSet(yVals2, "Company B");
Hole 7:
[]: set2.setColor(Color.rgb(164, 228, 251));
Hole 8:
[]: BarDataSet set3 = new BarDataSet(yVals3, "Company C");
Hole 9:
[]: set3.setColor(Color.rgb(242, 247, 158));
Hole 10:
[]: ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();
Hole 11:
[]: dataSets.add(set1);
Hole 12:
[]: dataSets.add(set2);
Hole 13:
[]: dataSets.add(set3);
Hole 14:
[]: BarData data = new BarData(xVals, dataSets);
Hole 15:
[]: data.setGroupSpace(80.0F);
Hole 16:
[]: data.setValueTypeface(tf);
Hole 17:
[]: mChart.setData(data);
Hole 18:
[]: mChart.invalidate();

Edit A:
Hole 1:
[]: ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();
Hole 2:
[SLoop]: XAxisValue value = new XAxisValue(i, i + 1990 + "");
Hole 3:
[SLoop]: xVals.add(value);
Hole 4:
[]: BarDataSet set1 = new BarDataSet(yVals1, "Company A");
Hole 5:
[]: set1.setColor(Color.rgb(104, 241, 175));
Hole 6:
[]: BarDataSet set2 = new BarDataSet(yVals2, "Company B");
Hole 7:
[]: set2.setColor(Color.rgb(164, 228, 251));
Hole 8:
[]: BarDataSet set3 = new BarDataSet(yVals3, "Company C");
Hole 9:
[]: set3.setColor(Color.rgb(242, 247, 158));
Hole 10:
[]: ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();
Hole 11:
[]: dataSets.add(set1);
Hole 12:
[]: dataSets.add(set2);
Hole 13:
[]: dataSets.add(set3);
Hole 14:
[]: BarData data = new BarData(xVals, dataSets);
Hole 15:
[]: data.setGroupSpace(80.0F);
Hole 16:
[]: data.setValueTypeface(tf);
Hole 17:
[]: mChart.setData(data);
Hole 18:
[]: mChart.invalidate();

Edit B:
Hole 1:
[]: ArrayList<String> xVals = new ArrayList<String>();
Hole 2:
[SLoop]: xVals.add((i + 1990 + ""));
Hole 3:
[SLoop]: <SKIP>
Hole 4:
[]: BarDataSet set1, set2, set3;
Hole 5:
[]: if ((mChart.getData() != null && mChart.getData().getDataSetCount()) > 0)
{
  set1 = (BarDataSet) mChart.getData().getDataSetByIndex(0);
  set2 = (BarDataSet) mChart.getData().getDataSetByIndex(1);
  set3 = (BarDataSet) mChart.getData().getDataSetByIndex(2);
  set1.setYVals(yVals1);
  set2.setYVals(yVals2);
  set3.setYVals(yVals3);
  mChart.notifyDataSetChanged();
}
else
{
  set1 = new BarDataSet(yVals1, "Company A");
  set1.setColor(Color.rgb(104, 241, 175));
  set2 = new BarDataSet(yVals2, "Company B");
  set2.setColor(Color.rgb(164, 228, 251));
  set3 = new BarDataSet(yVals3, "Company C");
  set3.setColor(Color.rgb(242, 247, 158));
  ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();
  dataSets.add(set1);
  dataSets.add(set2);
  dataSets.add(set3);
  BarData data = new BarData(xVals, dataSets);
  data.setGroupSpace(80.0F);
  data.setValueTypeface(tf);
  mChart.setData(data);
  mChart.invalidate();
}
Hole 6:
[]: <SKIP>
Hole 7:
[]: <SKIP>
Hole 8:
[]: <SKIP>
Hole 9:
[]: <SKIP>
Hole 10:
[]: <SKIP>
Hole 11:
[]: <SKIP>
Hole 12:
[]: <SKIP>
Hole 13:
[]: <SKIP>
Hole 14:
[]: <SKIP>
Hole 15:
[]: <SKIP>
Hole 16:
[]: <SKIP>
Hole 17:
[]: <SKIP>
Hole 18:
[]: <SKIP>

Edit M:
Hole 1:
[]: ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();
Hole 2:
[SLoop]: XAxisValue value = new XAxisValue(i, i + 1990 + "");
Hole 3:
[SLoop]: xVals.add(value);
Hole 4:
[]: BarDataSet set1, set2, set3;
Hole 5:
[]: if ((mChart.getData() != null && mChart.getData().getDataSetCount()) > 0)
{
  set1 = (BarDataSet) mChart.getData().getDataSetByIndex(0);
  set2 = (BarDataSet) mChart.getData().getDataSetByIndex(1);
  set3 = (BarDataSet) mChart.getData().getDataSetByIndex(2);
  set1.setYVals(yVals1);
  set2.setYVals(yVals2);
  set3.setYVals(yVals3);
  mChart.notifyDataSetChanged();
}
else
{
  set1 = new BarDataSet(yVals1, "Company A");
  set1.setColor(Color.rgb(104, 241, 175));
  set2 = new BarDataSet(yVals2, "Company B");
  set2.setColor(Color.rgb(164, 228, 251));
  set3 = new BarDataSet(yVals3, "Company C");
  set3.setColor(Color.rgb(242, 247, 158));
  ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();
  dataSets.add(set1);
  dataSets.add(set2);
  dataSets.add(set3);
  BarData data = new BarData(xVals, dataSets);
  data.setGroupSpace(80.0F);
  data.setValueTypeface(tf);
  mChart.setData(data);
  mChart.invalidate();
}
Hole 6:
[]: <SKIP>
Hole 7:
[]: <SKIP>
Hole 8:
[]: <SKIP>
Hole 9:
[]: <SKIP>
Hole 10:
[]: <SKIP>
Hole 11:
[]: <SKIP>
Hole 12:
[]: <SKIP>
Hole 13:
[]: <SKIP>
Hole 14:
[]: <SKIP>
Hole 15:
[]: <SKIP>
Hole 16:
[]: <SKIP>
Hole 17:
[]: <SKIP>
Hole 18:
[]: <SKIP>

