Parsing files...
Parsing o...
Parsing a...
Parsing b...
Parsing m...
verify: (Ident "DescriptorResolver",Ident "resolvePrimaryConstructorParameterToAProperty",[RefType (ClassRefType (ClassType [(Ident "ClassDescriptor",[])])),RefType (ClassRefType (ClassType [(Ident "JetScope",[])])),RefType (ClassRefType (ClassType [(Ident "JetParameter",[])]))])
[(Ident "annotationResolver",[RefType (ClassRefType (ClassType [(Ident "AnnotationResolver",[])]))]),(Ident "semanticServices",[RefType (ClassRefType (ClassType [(Ident "JetSemanticServices",[])]))]),(Ident "trace",[RefType (ClassRefType (ClassType [(Ident "BindingTrace",[])]))]),(Ident "typeResolver",[RefType (ClassRefType (ClassType [(Ident "TypeResolver",[])]))]),(Ident "typeResolverNotCheckingBounds",[RefType (ClassRefType (ClassType [(Ident "TypeResolver",[])]))])]
analyzer: press any key to continue...
analyse: dependence analysis
analyseBlock:
JetType type = resolveParameterType(scope, parameter);
String name = parameter.getName();
boolean isMutable = parameter.isMutable();
JetModifierList modifierList = parameter.getModifierList();
if (modifierList != null)
{
  ASTNode abstractNode = modifierList.getModifierNode(JetTokens.ABSTRACT_KEYWORD);
  if (abstractNode != null)
  {
    trace.report(ABSTRACT_PROPERTY_IN_PRIMARY_CONSTRUCTOR_PARAMETERS.on(parameter, abstractNode));
  }
  else
    ;
}
else
  ;

analyseBlock: 
MethodBody (Just (Block [LocalVars [] (RefType (ClassRefType (ClassType [(Ident "JetType",[])]))) [VarDecl (VarId (Ident "type")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "resolveParameterType"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "parameter"])]))))],LocalVars [] (RefType (ClassRefType (ClassType [(Ident "String",[])]))) [VarDecl (VarId (Ident "name")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "parameter",Ident "getName"]) []))))],LocalVars [] (PrimType BooleanT) [VarDecl (VarId (Ident "isMutable")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "parameter",Ident "isMutable"]) []))))],LocalVars [] (RefType (ClassRefType (ClassType [(Ident "JetModifierList",[])]))) [VarDecl (VarId (Ident "modifierList")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []))))],BlockStmt (IfThenElse (BinOp (ExpName (Name [Ident "modifierList"])) NotEq (Lit Null)) (StmtBlock (Block [LocalVars [] (RefType (ClassRefType (ClassType [(Ident "ASTNode",[])]))) [VarDecl (VarId (Ident "abstractNode")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "modifierList",Ident "getModifierNode"]) [ExpName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"])]))))],BlockStmt (IfThenElse (BinOp (ExpName (Name [Ident "abstractNode"])) NotEq (Lit Null)) (StmtBlock (Block [BlockStmt (ExpStmt (MethodInv (MethodCall (Name [Ident "trace",Ident "report"]) [MethodInv (MethodCall (Name [Ident "ABSTRACT_PROPERTY_IN_PRIMARY_CONSTRUCTOR_PARAMETERS",Ident "on"]) [ExpName (Name [Ident "parameter"]),ExpName (Name [Ident "abstractNode"])])])))])) Empty)])) Empty),BlockStmt (Return Nothing)]))
analyseBlock: CFG
Graph {entry_node = 1, graph = fromList [(1,[(1,2)]),(2,[(2,3)]),(3,[(3,4)]),(4,[(4,5)]),(5,[(6,8),(5,7)]),(6,[(17,-1)]),(7,[(9,10)]),(8,[(16,17)]),(10,[(11,13),(10,12)]),(11,[(7,6)]),(12,[(14,15)]),(13,[(15,16)]),(15,[(12,11)]),(16,[(13,11)]),(17,[(8,6)])], edge_table = fromList [(1,EdgeInfo {edge_tags = [], edge_code = ExpStmt (Assign (NameLhs (Name [Ident "type"])) EqualA (MethodInv (MethodCall (Name [Ident "resolveParameterType"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "parameter"])])))}),(2,EdgeInfo {edge_tags = [], edge_code = ExpStmt (Assign (NameLhs (Name [Ident "name"])) EqualA (MethodInv (MethodCall (Name [Ident "parameter",Ident "getName"]) [])))}),(3,EdgeInfo {edge_tags = [], edge_code = ExpStmt (Assign (NameLhs (Name [Ident "isMutable"])) EqualA (MethodInv (MethodCall (Name [Ident "parameter",Ident "isMutable"]) [])))}),(4,EdgeInfo {edge_tags = [], edge_code = ExpStmt (Assign (NameLhs (Name [Ident "modifierList"])) EqualA (MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])))}),(5,EdgeInfo {edge_tags = [CondTag], edge_code = Assume (BinOp (ExpName (Name [Ident "modifierList"])) NotEq (Lit Null))}),(6,EdgeInfo {edge_tags = [CondTag], edge_code = Assume (PreNot (BinOp (ExpName (Name [Ident "modifierList"])) NotEq (Lit Null)))}),(7,EdgeInfo {edge_tags = [IfJoin], edge_code = Skip}),(8,EdgeInfo {edge_tags = [IfJoin], edge_code = Skip}),(9,EdgeInfo {edge_tags = [], edge_code = ExpStmt (Assign (NameLhs (Name [Ident "abstractNode"])) EqualA (MethodInv (MethodCall (Name [Ident "modifierList",Ident "getModifierNode"]) [ExpName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"])])))}),(10,EdgeInfo {edge_tags = [CondTag], edge_code = Assume (BinOp (ExpName (Name [Ident "abstractNode"])) NotEq (Lit Null))}),(11,EdgeInfo {edge_tags = [CondTag], edge_code = Assume (PreNot (BinOp (ExpName (Name [Ident "abstractNode"])) NotEq (Lit Null)))}),(12,EdgeInfo {edge_tags = [IfJoin], edge_code = Skip}),(13,EdgeInfo {edge_tags = [IfJoin], edge_code = Skip}),(14,EdgeInfo {edge_tags = [], edge_code = ExpStmt (MethodInv (MethodCall (Name [Ident "trace",Ident "report"]) [MethodInv (MethodCall (Name [Ident "ABSTRACT_PROPERTY_IN_PRIMARY_CONSTRUCTOR_PARAMETERS",Ident "on"]) [ExpName (Name [Ident "parameter"]),ExpName (Name [Ident "abstractNode"])])]))}),(15,EdgeInfo {edge_tags = [], edge_code = Empty}),(16,EdgeInfo {edge_tags = [], edge_code = Empty}),(17,EdgeInfo {edge_tags = [Exit], edge_code = Return Nothing})], node_table = fromList []}
analyseBlock:
(Both,SField (Ident "trace")) -> [SField (Ident "trace"),SName (Name [Ident "ABSTRACT_PROPERTY_IN_PRIMARY_CONSTRUCTOR_PARAMETERS"]),SName (Name [Ident "parameter"]),SName (Name [Ident "abstractNode"]),SName (Name [Ident "modifierList"])]
(None,SName (Name [Ident "abstractNode"])) -> [SName (Name [Ident "modifierList"]),SName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"]),SField (Ident "trace"),SName (Name [Ident "ABSTRACT_PROPERTY_IN_PRIMARY_CONSTRUCTOR_PARAMETERS"]),SName (Name [Ident "parameter"]),SName (Name [Ident "abstractNode"])]
(None,SName (Name [Ident "isMutable"])) -> [SName (Name [Ident "parameter"])]
(None,SName (Name [Ident "modifierList"])) -> [SName (Name [Ident "parameter"]),SName (Name [Ident "modifierList"]),SName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"])]
(None,SName (Name [Ident "name"])) -> [SName (Name [Ident "parameter"])]
(None,SName (Name [Ident "parameter"])) -> [SName (Name [Ident "resolveParameterType"]),SName (Name [Ident "scope"]),SName (Name [Ident "parameter"]),SField (Ident "trace"),SName (Name [Ident "ABSTRACT_PROPERTY_IN_PRIMARY_CONSTRUCTOR_PARAMETERS"]),SName (Name [Ident "abstractNode"]),SName (Name [Ident "modifierList"])]
(None,SName (Name [Ident "resolveParameterType"])) -> [SName (Name [Ident "resolveParameterType"]),SName (Name [Ident "scope"]),SName (Name [Ident "parameter"])]
(None,SName (Name [Ident "scope"])) -> [SName (Name [Ident "resolveParameterType"]),SName (Name [Ident "scope"]),SName (Name [Ident "parameter"])]
(None,SName (Name [Ident "type"])) -> [SName (Name [Ident "resolveParameterType"]),SName (Name [Ident "scope"]),SName (Name [Ident "parameter"])]

analyseBlock: Sound to use dependence info
encodeExp: FieldAccess (PrimaryFieldAccess This (Ident "trace"))
encodeExp: ExpName (Name [Ident "ABSTRACT_PROPERTY_IN_PRIMARY_CONSTRUCTOR_PARAMETERS"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "abstractNode"])
encodeExp: ExpName (Name [Ident "modifierList"])
encodeExp: FieldAccess (PrimaryFieldAccess This (Ident "trace"))
encodeExp: ExpName (Name [Ident "ABSTRACT_PROPERTY_IN_PRIMARY_CONSTRUCTOR_PARAMETERS"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "abstractNode"])
encodeExp: ExpName (Name [Ident "modifierList"])
encodeExp: FieldAccess (PrimaryFieldAccess This (Ident "trace"))
encodeExp: ExpName (Name [Ident "ABSTRACT_PROPERTY_IN_PRIMARY_CONSTRUCTOR_PARAMETERS"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "abstractNode"])
encodeExp: ExpName (Name [Ident "modifierList"])
encodeExp: FieldAccess (PrimaryFieldAccess This (Ident "trace"))
encodeExp: ExpName (Name [Ident "ABSTRACT_PROPERTY_IN_PRIMARY_CONSTRUCTOR_PARAMETERS"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "abstractNode"])
encodeExp: ExpName (Name [Ident "modifierList"])
encodeExp: ExpName (Name [Ident "modifierList"])
encodeExp: ExpName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"])
encodeExp: FieldAccess (PrimaryFieldAccess This (Ident "trace"))
encodeExp: ExpName (Name [Ident "ABSTRACT_PROPERTY_IN_PRIMARY_CONSTRUCTOR_PARAMETERS"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "modifierList"])
encodeExp: ExpName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"])
encodeExp: FieldAccess (PrimaryFieldAccess This (Ident "trace"))
encodeExp: ExpName (Name [Ident "ABSTRACT_PROPERTY_IN_PRIMARY_CONSTRUCTOR_PARAMETERS"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "modifierList"])
encodeExp: ExpName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"])
encodeExp: FieldAccess (PrimaryFieldAccess This (Ident "trace"))
encodeExp: ExpName (Name [Ident "ABSTRACT_PROPERTY_IN_PRIMARY_CONSTRUCTOR_PARAMETERS"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "modifierList"])
encodeExp: ExpName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"])
encodeExp: FieldAccess (PrimaryFieldAccess This (Ident "trace"))
encodeExp: ExpName (Name [Ident "ABSTRACT_PROPERTY_IN_PRIMARY_CONSTRUCTOR_PARAMETERS"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "resolveParameterType"])
encodeExp: ExpName (Name [Ident "scope"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: FieldAccess (PrimaryFieldAccess This (Ident "trace"))
encodeExp: ExpName (Name [Ident "ABSTRACT_PROPERTY_IN_PRIMARY_CONSTRUCTOR_PARAMETERS"])
encodeExp: ExpName (Name [Ident "abstractNode"])
encodeExp: ExpName (Name [Ident "modifierList"])
encodeExp: ExpName (Name [Ident "resolveParameterType"])
encodeExp: ExpName (Name [Ident "scope"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: FieldAccess (PrimaryFieldAccess This (Ident "trace"))
encodeExp: ExpName (Name [Ident "ABSTRACT_PROPERTY_IN_PRIMARY_CONSTRUCTOR_PARAMETERS"])
encodeExp: ExpName (Name [Ident "abstractNode"])
encodeExp: ExpName (Name [Ident "modifierList"])
encodeExp: ExpName (Name [Ident "resolveParameterType"])
encodeExp: ExpName (Name [Ident "scope"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: FieldAccess (PrimaryFieldAccess This (Ident "trace"))
encodeExp: ExpName (Name [Ident "ABSTRACT_PROPERTY_IN_PRIMARY_CONSTRUCTOR_PARAMETERS"])
encodeExp: ExpName (Name [Ident "abstractNode"])
encodeExp: ExpName (Name [Ident "modifierList"])
encodeExp: ExpName (Name [Ident "resolveParameterType"])
encodeExp: ExpName (Name [Ident "scope"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: FieldAccess (PrimaryFieldAccess This (Ident "trace"))
encodeExp: ExpName (Name [Ident "ABSTRACT_PROPERTY_IN_PRIMARY_CONSTRUCTOR_PARAMETERS"])
encodeExp: ExpName (Name [Ident "abstractNode"])
encodeExp: ExpName (Name [Ident "modifierList"])
encodeExp: ExpName (Name [Ident "scope"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "scope"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "scope"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "scope"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "resolveParameterType"])
encodeExp: ExpName (Name [Ident "scope"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "resolveParameterType"])
encodeExp: ExpName (Name [Ident "scope"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "resolveParameterType"])
encodeExp: ExpName (Name [Ident "scope"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "resolveParameterType"])
encodeExp: ExpName (Name [Ident "scope"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "resolveParameterType"])
encodeExp: ExpName (Name [Ident "scope"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "resolveParameterType"])
encodeExp: ExpName (Name [Ident "scope"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "resolveParameterType"])
encodeExp: ExpName (Name [Ident "scope"])
encodeExp: ExpName (Name [Ident "parameter"])
encodeExp: ExpName (Name [Ident "resolveParameterType"])
encodeExp: ExpName (Name [Ident "scope"])
encodeExp: ExpName (Name [Ident "parameter"])
analyzer: press any key to continue...
analyse: dependence analysis
==================================
Statement of versions [1,2,3,4]
<?HOLE?>
BlockStmt Hole
popEdits: vId = 1, |Edit| = fromList [(1,[AnnLocalVars [1] [] (RefType (ClassRefType (ClassType [(Ident "PropertyDescriptor",[])]))) [VarDecl (VarId (Ident "propertyDescriptor")) (Just (InitExp (InstanceCreation [] (ClassType [(Ident "PropertyDescriptor",[])]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))] Nothing)))],AnnLocalVars [1] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [1] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnBlockStmt (AnnExpStmt [1] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [1]),AnnBlockStmt (AnnSkip [1])]),(2,[AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertyDescriptor",[])]))) [VarDecl (VarId (Ident "propertyDescriptor")) (Just (InitExp (InstanceCreation [] (ClassType [(Ident "PropertyDescriptor",[])]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))] Nothing)))],AnnBlockStmt (AnnSkip [2]),AnnBlockStmt (AnnSkip [2]),AnnBlockStmt (AnnExpStmt [2] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]]),(3,[AnnLocalVars [3] [] (RefType (ClassRefType (ClassType [(Ident "PropertyDescriptor",[])]))) [VarDecl (VarId (Ident "propertyDescriptor")) (Just (InitExp (InstanceCreation [] (ClassType [(Ident "PropertyDescriptor",[])]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))] Nothing)))],AnnLocalVars [3] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [3] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnBlockStmt (AnnExpStmt [3] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [3]),AnnBlockStmt (AnnSkip [3])]),(4,[AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertyDescriptor",[])]))) [VarDecl (VarId (Ident "propertyDescriptor")) (Just (InitExp (InstanceCreation [] (ClassType [(Ident "PropertyDescriptor",[])]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))] Nothing)))],AnnBlockStmt (AnnSkip [4]),AnnBlockStmt (AnnSkip [4]),AnnBlockStmt (AnnExpStmt [4] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]])]
popEdits: vId = 2, |Edit| = fromList [(1,[AnnLocalVars [1] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [1] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnBlockStmt (AnnExpStmt [1] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [1]),AnnBlockStmt (AnnSkip [1])]),(2,[AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertyDescriptor",[])]))) [VarDecl (VarId (Ident "propertyDescriptor")) (Just (InitExp (InstanceCreation [] (ClassType [(Ident "PropertyDescriptor",[])]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))] Nothing)))],AnnBlockStmt (AnnSkip [2]),AnnBlockStmt (AnnSkip [2]),AnnBlockStmt (AnnExpStmt [2] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]]),(3,[AnnLocalVars [3] [] (RefType (ClassRefType (ClassType [(Ident "PropertyDescriptor",[])]))) [VarDecl (VarId (Ident "propertyDescriptor")) (Just (InitExp (InstanceCreation [] (ClassType [(Ident "PropertyDescriptor",[])]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))] Nothing)))],AnnLocalVars [3] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [3] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnBlockStmt (AnnExpStmt [3] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [3]),AnnBlockStmt (AnnSkip [3])]),(4,[AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertyDescriptor",[])]))) [VarDecl (VarId (Ident "propertyDescriptor")) (Just (InitExp (InstanceCreation [] (ClassType [(Ident "PropertyDescriptor",[])]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))] Nothing)))],AnnBlockStmt (AnnSkip [4]),AnnBlockStmt (AnnSkip [4]),AnnBlockStmt (AnnExpStmt [4] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]])]
popEdits: vId = 3, |Edit| = fromList [(1,[AnnLocalVars [1] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [1] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnBlockStmt (AnnExpStmt [1] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [1]),AnnBlockStmt (AnnSkip [1])]),(2,[AnnBlockStmt (AnnSkip [2]),AnnBlockStmt (AnnSkip [2]),AnnBlockStmt (AnnExpStmt [2] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]]),(3,[AnnLocalVars [3] [] (RefType (ClassRefType (ClassType [(Ident "PropertyDescriptor",[])]))) [VarDecl (VarId (Ident "propertyDescriptor")) (Just (InitExp (InstanceCreation [] (ClassType [(Ident "PropertyDescriptor",[])]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))] Nothing)))],AnnLocalVars [3] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [3] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnBlockStmt (AnnExpStmt [3] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [3]),AnnBlockStmt (AnnSkip [3])]),(4,[AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertyDescriptor",[])]))) [VarDecl (VarId (Ident "propertyDescriptor")) (Just (InitExp (InstanceCreation [] (ClassType [(Ident "PropertyDescriptor",[])]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))] Nothing)))],AnnBlockStmt (AnnSkip [4]),AnnBlockStmt (AnnSkip [4]),AnnBlockStmt (AnnExpStmt [4] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]])]
popEdits: vId = 4, |Edit| = fromList [(1,[AnnLocalVars [1] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [1] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnBlockStmt (AnnExpStmt [1] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [1]),AnnBlockStmt (AnnSkip [1])]),(2,[AnnBlockStmt (AnnSkip [2]),AnnBlockStmt (AnnSkip [2]),AnnBlockStmt (AnnExpStmt [2] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]]),(3,[AnnLocalVars [3] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [3] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnBlockStmt (AnnExpStmt [3] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [3]),AnnBlockStmt (AnnSkip [3])]),(4,[AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertyDescriptor",[])]))) [VarDecl (VarId (Ident "propertyDescriptor")) (Just (InitExp (InstanceCreation [] (ClassType [(Ident "PropertyDescriptor",[])]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))] Nothing)))],AnnBlockStmt (AnnSkip [4]),AnnBlockStmt (AnnSkip [4]),AnnBlockStmt (AnnExpStmt [4] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]])]
analyzer: press any key to continue...
==================================
Statement of versions [4]
PropertyDescriptor propertyDescriptor = new PropertyDescriptor(classDescriptor, annotationResolver.resolveAnnotations(scope, modifierList), resolveModalityFromModifiers(parameter.getModifierList(), Modality.FINAL), resolveVisibilityFromModifiers(parameter.getModifierList()), isMutable, name == null ? "<no name>" : name);
LocalVars [] (RefType (ClassRefType (ClassType [(Ident "PropertyDescriptor",[])]))) [VarDecl (VarId (Ident "propertyDescriptor")) (Just (InitExp (InstanceCreation [] (ClassType [(Ident "PropertyDescriptor",[])]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))] Nothing)))]
encodeVarDecl: VarDecl (VarId (Ident "propertyDescriptor")) (Just (InitExp (InstanceCreation [] (ClassType [(Ident "PropertyDescriptor",[])]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))] Nothing)))
encodeExp: InstanceCreation [] (ClassType [(Ident "PropertyDescriptor",[])]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))] Nothing
encodeCall: MethodCall (Name [Ident "NewPropertyDescriptor"]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))]
encodeExp: ExpName (Name [Ident "classDescriptor"])
encodeExp: MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])])
encodeCall: MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]
encodeExp: ExpName (Name [Ident "scope"])
encodeExp: ExpName (Name [Ident "modifierList"])
encCall: [Ident "annotationResolver",Ident "resolveAnnotations"]
encCall: [Ident "resolveAnnotations"]
encCall: Found methods []
encCall: Adding method with deps: 
encCall: (declare-fun resolveAnnotations!133 (Int Int Int) Int)
encodeExp: MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])])
encodeCall: MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]
encodeExp: MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])
encodeCall: MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []
encCall: [Ident "parameter",Ident "getModifierList"]
encCall: [Ident "getModifierList"]
encCall: Found methods []
encCall: Adding method with deps: 
encCall: (declare-fun getModifierList!134 (Int) Int)
encodeExp: ExpName (Name [Ident "Modality",Ident "FINAL"])
encCall: [Ident "resolveModalityFromModifiers"]
encCall: Found methods [MethodDecl [Annotation (MarkerAnnotation {annName = Name [Ident "NotNull"]}),Static] [] (Just (RefType (ClassRefType (ClassType [(Ident "Modality",[])])))) (Ident "resolveModalityFromModifiers") [FormalParam [Annotation (MarkerAnnotation {annName = Name [Ident "Nullable"]})] (RefType (ClassRefType (ClassType [(Ident "JetModifierList",[])]))) False (VarId (Ident "modifierList")),FormalParam [Annotation (MarkerAnnotation {annName = Name [Ident "NotNull"]})] (RefType (ClassRefType (ClassType [(Ident "Modality",[])]))) False (VarId (Ident "defaultModality"))] [] (MethodBody (Just (Block [BlockStmt (IfThen (BinOp (ExpName (Name [Ident "modifierList"])) Equal (Lit Null)) (Return (Just (ExpName (Name [Ident "defaultModality"]))))),LocalVars [] (PrimType BooleanT) [VarDecl (VarId (Ident "hasAbstractModifier")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "modifierList",Ident "hasModifier"]) [ExpName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"])]))))],LocalVars [] (PrimType BooleanT) [VarDecl (VarId (Ident "hasOverrideModifier")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "modifierList",Ident "hasModifier"]) [ExpName (Name [Ident "JetTokens",Ident "OVERRIDE_KEYWORD"])]))))],BlockStmt (IfThen (MethodInv (MethodCall (Name [Ident "modifierList",Ident "hasModifier"]) [ExpName (Name [Ident "JetTokens",Ident "OPEN_KEYWORD"])])) (StmtBlock (Block [BlockStmt (IfThen (BinOp (BinOp (ExpName (Name [Ident "hasAbstractModifier"])) COr (ExpName (Name [Ident "defaultModality"]))) Equal (ExpName (Name [Ident "Modality",Ident "ABSTRACT"]))) (StmtBlock (Block [BlockStmt (Return (Just (ExpName (Name [Ident "Modality",Ident "ABSTRACT"]))))]))),BlockStmt (Return (Just (ExpName (Name [Ident "Modality",Ident "OPEN"]))))]))),BlockStmt (IfThen (ExpName (Name [Ident "hasAbstractModifier"])) (StmtBlock (Block [BlockStmt (Return (Just (ExpName (Name [Ident "Modality",Ident "ABSTRACT"]))))]))),LocalVars [] (PrimType BooleanT) [VarDecl (VarId (Ident "hasFinalModifier")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "modifierList",Ident "hasModifier"]) [ExpName (Name [Ident "JetTokens",Ident "FINAL_KEYWORD"])]))))],BlockStmt (IfThen (BinOp (BinOp (ExpName (Name [Ident "hasOverrideModifier"])) CAnd (PreNot (ExpName (Name [Ident "hasFinalModifier"])))) CAnd (PreNot (BinOp (ExpName (Name [Ident "defaultModality"])) Equal (ExpName (Name [Ident "Modality",Ident "ABSTRACT"]))))) (StmtBlock (Block [BlockStmt (Return (Just (ExpName (Name [Ident "Modality",Ident "OPEN"]))))]))),BlockStmt (IfThen (ExpName (Name [Ident "hasFinalModifier"])) (StmtBlock (Block [BlockStmt (Return (Just (ExpName (Name [Ident "Modality",Ident "FINAL"]))))]))),BlockStmt (Return (Just (ExpName (Name [Ident "defaultModality"]))))])))]
incLoc
encCall: Adding method with deps: (Output,SName (Name [Ident "Modality",Ident "ABSTRACT"])) -> []
(Output,SName (Name [Ident "Modality",Ident "FINAL"])) -> []
(Output,SName (Name [Ident "Modality",Ident "OPEN"])) -> []
(Output,SName (Name [Ident "defaultModality"])) -> []
(None,SName (Name [Ident "hasAbstractModifier"])) -> [SName (Name [Ident "modifierList"]),SName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"])]
(None,SName (Name [Ident "hasFinalModifier"])) -> [SName (Name [Ident "modifierList"]),SName (Name [Ident "JetTokens",Ident "FINAL_KEYWORD"])]
(None,SName (Name [Ident "hasOverrideModifier"])) -> [SName (Name [Ident "modifierList"]),SName (Name [Ident "JetTokens",Ident "OVERRIDE_KEYWORD"])]
(None,SName (Name [Ident "modifierList"])) -> [SName (Name [Ident "modifierList"]),SName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"]),SName (Name [Ident "JetTokens",Ident "OVERRIDE_KEYWORD"]),SName (Name [Ident "JetTokens",Ident "FINAL_KEYWORD"]),SName (Name [Ident "JetTokens",Ident "OPEN_KEYWORD"])]

encCall: (declare-fun resolveModalityFromModifiers!136 (Int Int) Int)
encodeExp: MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])])
encodeCall: MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]
encodeExp: MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])
encodeCall: MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []
encCall: [Ident "parameter",Ident "getModifierList"]
encCall: [Ident "getModifierList"]
encCall: Found methods []
encCall: Found getModifierList in function map with dep = 
encCall: (declare-fun getModifierList!134 (Int) Int)
encCall: [Ident "resolveVisibilityFromModifiers"]
encCall: Found methods [MethodDecl [Annotation (MarkerAnnotation {annName = Name [Ident "NotNull"]}),Static] [] (Just (RefType (ClassRefType (ClassType [(Ident "Visibility",[])])))) (Ident "resolveVisibilityFromModifiers") [FormalParam [Annotation (MarkerAnnotation {annName = Name [Ident "Nullable"]})] (RefType (ClassRefType (ClassType [(Ident "JetModifierList",[])]))) False (VarId (Ident "modifierList"))] [] (MethodBody (Just (Block [BlockStmt (Return (Just (MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [ExpName (Name [Ident "modifierList"]),ExpName (Name [Ident "Visibility",Ident "INTERNAL"])]))))])))]
incLoc
encCall: Adding method with deps: (Output,SName (Name [Ident "Visibility",Ident "INTERNAL"])) -> []
(Output,SName (Name [Ident "modifierList"])) -> []
(Output,SName (Name [Ident "resolveVisibilityFromModifiers"])) -> []

encCall: (declare-fun resolveVisibilityFromModifiers!137 (Int) Int)
encodeExp: ExpName (Name [Ident "isMutable"])
encodeExp: Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))
encodeExp: MethodInv (MethodCall (Name [Ident "wiz_cond"]) [BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null),Lit (String "<no name>"),ExpName (Name [Ident "name"])])
encodeCall: MethodCall (Name [Ident "wiz_cond"]) [BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null),Lit (String "<no name>"),ExpName (Name [Ident "name"])]
encodeExp: BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)
encodeExp: ExpName (Name [Ident "name"])
encodeExp: Lit Null
encodeExp: Lit (String "<no name>")
encodeExp: ExpName (Name [Ident "name"])
encCall: [Ident "wiz_cond"]
encCall: Found methods []
encCall: Adding method with deps: 
encCall: (declare-fun wiz_cond!139 (Bool Int Int) Int)
encCall: [Ident "NewPropertyDescriptor"]
encCall: Found methods []
encCall: Adding method with deps: 
encCall: (declare-fun NewPropertyDescriptor!140 (Int Int Int Int Int Int) Int)
analyzer: press any key to continue...
==================================
Statement of versions [3]
PropertyDescriptor propertyDescriptor = new PropertyDescriptor(classDescriptor, annotationResolver.resolveAnnotations(scope, modifierList), resolveModalityFromModifiers(parameter.getModifierList(), Modality.FINAL), resolveVisibilityFromModifiers(parameter.getModifierList()), isMutable, name == null ? "<no name>" : name);
LocalVars [] (RefType (ClassRefType (ClassType [(Ident "PropertyDescriptor",[])]))) [VarDecl (VarId (Ident "propertyDescriptor")) (Just (InitExp (InstanceCreation [] (ClassType [(Ident "PropertyDescriptor",[])]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))] Nothing)))]
encodeVarDecl: VarDecl (VarId (Ident "propertyDescriptor")) (Just (InitExp (InstanceCreation [] (ClassType [(Ident "PropertyDescriptor",[])]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))] Nothing)))
encodeExp: InstanceCreation [] (ClassType [(Ident "PropertyDescriptor",[])]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))] Nothing
encodeCall: MethodCall (Name [Ident "NewPropertyDescriptor"]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))]
encodeExp: ExpName (Name [Ident "classDescriptor"])
encodeExp: MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])])
encodeCall: MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]
encodeExp: ExpName (Name [Ident "scope"])
encodeExp: ExpName (Name [Ident "modifierList"])
encCall: [Ident "annotationResolver",Ident "resolveAnnotations"]
encCall: [Ident "resolveAnnotations"]
encCall: Found methods []
encCall: Found resolveAnnotations in function map with dep = 
encCall: (declare-fun resolveAnnotations!133 (Int Int Int) Int)
encodeExp: MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])])
encodeCall: MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]
encodeExp: MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])
encodeCall: MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []
encCall: [Ident "parameter",Ident "getModifierList"]
encCall: [Ident "getModifierList"]
encCall: Found methods []
encCall: Found getModifierList in function map with dep = 
encCall: (declare-fun getModifierList!134 (Int) Int)
encodeExp: ExpName (Name [Ident "Modality",Ident "FINAL"])
encCall: [Ident "resolveModalityFromModifiers"]
encCall: Found methods [MethodDecl [Annotation (MarkerAnnotation {annName = Name [Ident "NotNull"]}),Static] [] (Just (RefType (ClassRefType (ClassType [(Ident "Modality",[])])))) (Ident "resolveModalityFromModifiers") [FormalParam [Annotation (MarkerAnnotation {annName = Name [Ident "Nullable"]})] (RefType (ClassRefType (ClassType [(Ident "JetModifierList",[])]))) False (VarId (Ident "modifierList")),FormalParam [Annotation (MarkerAnnotation {annName = Name [Ident "NotNull"]})] (RefType (ClassRefType (ClassType [(Ident "Modality",[])]))) False (VarId (Ident "defaultModality"))] [] (MethodBody (Just (Block [BlockStmt (IfThen (BinOp (ExpName (Name [Ident "modifierList"])) Equal (Lit Null)) (Return (Just (ExpName (Name [Ident "defaultModality"]))))),LocalVars [] (PrimType BooleanT) [VarDecl (VarId (Ident "hasAbstractModifier")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "modifierList",Ident "hasModifier"]) [ExpName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"])]))))],LocalVars [] (PrimType BooleanT) [VarDecl (VarId (Ident "hasOverrideModifier")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "modifierList",Ident "hasModifier"]) [ExpName (Name [Ident "JetTokens",Ident "OVERRIDE_KEYWORD"])]))))],BlockStmt (IfThen (MethodInv (MethodCall (Name [Ident "modifierList",Ident "hasModifier"]) [ExpName (Name [Ident "JetTokens",Ident "OPEN_KEYWORD"])])) (StmtBlock (Block [BlockStmt (IfThen (BinOp (BinOp (ExpName (Name [Ident "hasAbstractModifier"])) COr (ExpName (Name [Ident "defaultModality"]))) Equal (ExpName (Name [Ident "Modality",Ident "ABSTRACT"]))) (StmtBlock (Block [BlockStmt (Return (Just (ExpName (Name [Ident "Modality",Ident "ABSTRACT"]))))]))),BlockStmt (Return (Just (ExpName (Name [Ident "Modality",Ident "OPEN"]))))]))),BlockStmt (IfThen (ExpName (Name [Ident "hasAbstractModifier"])) (StmtBlock (Block [BlockStmt (Return (Just (ExpName (Name [Ident "Modality",Ident "ABSTRACT"]))))]))),LocalVars [] (PrimType BooleanT) [VarDecl (VarId (Ident "hasFinalModifier")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "modifierList",Ident "hasModifier"]) [ExpName (Name [Ident "JetTokens",Ident "FINAL_KEYWORD"])]))))],BlockStmt (IfThen (BinOp (BinOp (ExpName (Name [Ident "hasOverrideModifier"])) CAnd (PreNot (ExpName (Name [Ident "hasFinalModifier"])))) CAnd (PreNot (BinOp (ExpName (Name [Ident "defaultModality"])) Equal (ExpName (Name [Ident "Modality",Ident "ABSTRACT"]))))) (StmtBlock (Block [BlockStmt (Return (Just (ExpName (Name [Ident "Modality",Ident "OPEN"]))))]))),BlockStmt (IfThen (ExpName (Name [Ident "hasFinalModifier"])) (StmtBlock (Block [BlockStmt (Return (Just (ExpName (Name [Ident "Modality",Ident "FINAL"]))))]))),BlockStmt (Return (Just (ExpName (Name [Ident "defaultModality"]))))])))]
incLoc
encCall: Found resolveModalityFromModifiers in function map with dep = (Output,SName (Name [Ident "Modality",Ident "ABSTRACT"])) -> []
(Output,SName (Name [Ident "Modality",Ident "FINAL"])) -> []
(Output,SName (Name [Ident "Modality",Ident "OPEN"])) -> []
(Output,SName (Name [Ident "defaultModality"])) -> []
(None,SName (Name [Ident "hasAbstractModifier"])) -> [SName (Name [Ident "modifierList"]),SName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"])]
(None,SName (Name [Ident "hasFinalModifier"])) -> [SName (Name [Ident "modifierList"]),SName (Name [Ident "JetTokens",Ident "FINAL_KEYWORD"])]
(None,SName (Name [Ident "hasOverrideModifier"])) -> [SName (Name [Ident "modifierList"]),SName (Name [Ident "JetTokens",Ident "OVERRIDE_KEYWORD"])]
(None,SName (Name [Ident "modifierList"])) -> [SName (Name [Ident "modifierList"]),SName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"]),SName (Name [Ident "JetTokens",Ident "OVERRIDE_KEYWORD"]),SName (Name [Ident "JetTokens",Ident "FINAL_KEYWORD"]),SName (Name [Ident "JetTokens",Ident "OPEN_KEYWORD"])]

encCall: (declare-fun resolveModalityFromModifiers!136 (Int Int) Int)
encodeExp: MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])])
encodeCall: MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]
encodeExp: MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])
encodeCall: MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []
encCall: [Ident "parameter",Ident "getModifierList"]
encCall: [Ident "getModifierList"]
encCall: Found methods []
encCall: Found getModifierList in function map with dep = 
encCall: (declare-fun getModifierList!134 (Int) Int)
encCall: [Ident "resolveVisibilityFromModifiers"]
encCall: Found methods [MethodDecl [Annotation (MarkerAnnotation {annName = Name [Ident "NotNull"]}),Static] [] (Just (RefType (ClassRefType (ClassType [(Ident "Visibility",[])])))) (Ident "resolveVisibilityFromModifiers") [FormalParam [Annotation (MarkerAnnotation {annName = Name [Ident "Nullable"]})] (RefType (ClassRefType (ClassType [(Ident "JetModifierList",[])]))) False (VarId (Ident "modifierList"))] [] (MethodBody (Just (Block [BlockStmt (Return (Just (MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [ExpName (Name [Ident "modifierList"]),ExpName (Name [Ident "Visibility",Ident "INTERNAL"])]))))])))]
incLoc
encCall: Found resolveVisibilityFromModifiers in function map with dep = (Output,SName (Name [Ident "Visibility",Ident "INTERNAL"])) -> []
(Output,SName (Name [Ident "modifierList"])) -> []
(Output,SName (Name [Ident "resolveVisibilityFromModifiers"])) -> []

encCall: (declare-fun resolveVisibilityFromModifiers!137 (Int) Int)
encodeExp: ExpName (Name [Ident "isMutable"])
encodeExp: Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))
encodeExp: MethodInv (MethodCall (Name [Ident "wiz_cond"]) [BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null),Lit (String "<no name>"),ExpName (Name [Ident "name"])])
encodeCall: MethodCall (Name [Ident "wiz_cond"]) [BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null),Lit (String "<no name>"),ExpName (Name [Ident "name"])]
encodeExp: BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)
encodeExp: ExpName (Name [Ident "name"])
encodeExp: Lit Null
encodeExp: Lit (String "<no name>")
encodeExp: ExpName (Name [Ident "name"])
encCall: [Ident "wiz_cond"]
encCall: Found methods []
encCall: Found wiz_cond in function map with dep = 
encCall: (declare-fun wiz_cond!139 (Bool Int Int) Int)
encCall: [Ident "NewPropertyDescriptor"]
encCall: Found methods []
encCall: Found NewPropertyDescriptor in function map with dep = 
encCall: (declare-fun NewPropertyDescriptor!140 (Int Int Int Int Int Int) Int)
analyzer: press any key to continue...
==================================
Statement of versions [2]
PropertyDescriptor propertyDescriptor = new PropertyDescriptor(classDescriptor, annotationResolver.resolveAnnotations(scope, modifierList), resolveModalityFromModifiers(parameter.getModifierList(), Modality.FINAL), resolveVisibilityFromModifiers(parameter.getModifierList()), isMutable, DescriptorUtils.getExpectedThisObjectIfNeeded(classDescriptor), name == null ? "<no name>" : name);
LocalVars [] (RefType (ClassRefType (ClassType [(Ident "PropertyDescriptor",[])]))) [VarDecl (VarId (Ident "propertyDescriptor")) (Just (InitExp (InstanceCreation [] (ClassType [(Ident "PropertyDescriptor",[])]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))] Nothing)))]
encodeVarDecl: VarDecl (VarId (Ident "propertyDescriptor")) (Just (InitExp (InstanceCreation [] (ClassType [(Ident "PropertyDescriptor",[])]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))] Nothing)))
encodeExp: InstanceCreation [] (ClassType [(Ident "PropertyDescriptor",[])]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))] Nothing
encodeCall: MethodCall (Name [Ident "NewPropertyDescriptor"]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))]
encodeExp: ExpName (Name [Ident "classDescriptor"])
encodeExp: MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])])
encodeCall: MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]
encodeExp: ExpName (Name [Ident "scope"])
encodeExp: ExpName (Name [Ident "modifierList"])
encCall: [Ident "annotationResolver",Ident "resolveAnnotations"]
encCall: [Ident "resolveAnnotations"]
encCall: Found methods []
encCall: Found resolveAnnotations in function map with dep = 
encCall: (declare-fun resolveAnnotations!133 (Int Int Int) Int)
encodeExp: MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])])
encodeCall: MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]
encodeExp: MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])
encodeCall: MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []
encCall: [Ident "parameter",Ident "getModifierList"]
encCall: [Ident "getModifierList"]
encCall: Found methods []
encCall: Found getModifierList in function map with dep = 
encCall: (declare-fun getModifierList!134 (Int) Int)
encodeExp: ExpName (Name [Ident "Modality",Ident "FINAL"])
encCall: [Ident "resolveModalityFromModifiers"]
encCall: Found methods [MethodDecl [Annotation (MarkerAnnotation {annName = Name [Ident "NotNull"]}),Static] [] (Just (RefType (ClassRefType (ClassType [(Ident "Modality",[])])))) (Ident "resolveModalityFromModifiers") [FormalParam [Annotation (MarkerAnnotation {annName = Name [Ident "Nullable"]})] (RefType (ClassRefType (ClassType [(Ident "JetModifierList",[])]))) False (VarId (Ident "modifierList")),FormalParam [Annotation (MarkerAnnotation {annName = Name [Ident "NotNull"]})] (RefType (ClassRefType (ClassType [(Ident "Modality",[])]))) False (VarId (Ident "defaultModality"))] [] (MethodBody (Just (Block [BlockStmt (IfThen (BinOp (ExpName (Name [Ident "modifierList"])) Equal (Lit Null)) (Return (Just (ExpName (Name [Ident "defaultModality"]))))),LocalVars [] (PrimType BooleanT) [VarDecl (VarId (Ident "hasAbstractModifier")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "modifierList",Ident "hasModifier"]) [ExpName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"])]))))],LocalVars [] (PrimType BooleanT) [VarDecl (VarId (Ident "hasOverrideModifier")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "modifierList",Ident "hasModifier"]) [ExpName (Name [Ident "JetTokens",Ident "OVERRIDE_KEYWORD"])]))))],BlockStmt (IfThen (MethodInv (MethodCall (Name [Ident "modifierList",Ident "hasModifier"]) [ExpName (Name [Ident "JetTokens",Ident "OPEN_KEYWORD"])])) (StmtBlock (Block [BlockStmt (IfThen (BinOp (BinOp (ExpName (Name [Ident "hasAbstractModifier"])) COr (ExpName (Name [Ident "defaultModality"]))) Equal (ExpName (Name [Ident "Modality",Ident "ABSTRACT"]))) (StmtBlock (Block [BlockStmt (Return (Just (ExpName (Name [Ident "Modality",Ident "ABSTRACT"]))))]))),BlockStmt (Return (Just (ExpName (Name [Ident "Modality",Ident "OPEN"]))))]))),BlockStmt (IfThen (ExpName (Name [Ident "hasAbstractModifier"])) (StmtBlock (Block [BlockStmt (Return (Just (ExpName (Name [Ident "Modality",Ident "ABSTRACT"]))))]))),LocalVars [] (PrimType BooleanT) [VarDecl (VarId (Ident "hasFinalModifier")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "modifierList",Ident "hasModifier"]) [ExpName (Name [Ident "JetTokens",Ident "FINAL_KEYWORD"])]))))],BlockStmt (IfThen (BinOp (BinOp (ExpName (Name [Ident "hasOverrideModifier"])) CAnd (PreNot (ExpName (Name [Ident "hasFinalModifier"])))) CAnd (PreNot (BinOp (ExpName (Name [Ident "defaultModality"])) Equal (ExpName (Name [Ident "Modality",Ident "ABSTRACT"]))))) (StmtBlock (Block [BlockStmt (Return (Just (ExpName (Name [Ident "Modality",Ident "OPEN"]))))]))),BlockStmt (IfThen (ExpName (Name [Ident "hasFinalModifier"])) (StmtBlock (Block [BlockStmt (Return (Just (ExpName (Name [Ident "Modality",Ident "FINAL"]))))]))),BlockStmt (Return (Just (ExpName (Name [Ident "defaultModality"]))))])))]
incLoc
encCall: Found resolveModalityFromModifiers in function map with dep = (Output,SName (Name [Ident "Modality",Ident "ABSTRACT"])) -> []
(Output,SName (Name [Ident "Modality",Ident "FINAL"])) -> []
(Output,SName (Name [Ident "Modality",Ident "OPEN"])) -> []
(Output,SName (Name [Ident "defaultModality"])) -> []
(None,SName (Name [Ident "hasAbstractModifier"])) -> [SName (Name [Ident "modifierList"]),SName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"])]
(None,SName (Name [Ident "hasFinalModifier"])) -> [SName (Name [Ident "modifierList"]),SName (Name [Ident "JetTokens",Ident "FINAL_KEYWORD"])]
(None,SName (Name [Ident "hasOverrideModifier"])) -> [SName (Name [Ident "modifierList"]),SName (Name [Ident "JetTokens",Ident "OVERRIDE_KEYWORD"])]
(None,SName (Name [Ident "modifierList"])) -> [SName (Name [Ident "modifierList"]),SName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"]),SName (Name [Ident "JetTokens",Ident "OVERRIDE_KEYWORD"]),SName (Name [Ident "JetTokens",Ident "FINAL_KEYWORD"]),SName (Name [Ident "JetTokens",Ident "OPEN_KEYWORD"])]

encCall: (declare-fun resolveModalityFromModifiers!136 (Int Int) Int)
encodeExp: MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])])
encodeCall: MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]
encodeExp: MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])
encodeCall: MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []
encCall: [Ident "parameter",Ident "getModifierList"]
encCall: [Ident "getModifierList"]
encCall: Found methods []
encCall: Found getModifierList in function map with dep = 
encCall: (declare-fun getModifierList!134 (Int) Int)
encCall: [Ident "resolveVisibilityFromModifiers"]
encCall: Found methods [MethodDecl [Annotation (MarkerAnnotation {annName = Name [Ident "NotNull"]}),Static] [] (Just (RefType (ClassRefType (ClassType [(Ident "Visibility",[])])))) (Ident "resolveVisibilityFromModifiers") [FormalParam [Annotation (MarkerAnnotation {annName = Name [Ident "Nullable"]})] (RefType (ClassRefType (ClassType [(Ident "JetModifierList",[])]))) False (VarId (Ident "modifierList"))] [] (MethodBody (Just (Block [BlockStmt (Return (Just (MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [ExpName (Name [Ident "modifierList"]),ExpName (Name [Ident "Visibility",Ident "INTERNAL"])]))))])))]
incLoc
encCall: Found resolveVisibilityFromModifiers in function map with dep = (Output,SName (Name [Ident "Visibility",Ident "INTERNAL"])) -> []
(Output,SName (Name [Ident "modifierList"])) -> []
(Output,SName (Name [Ident "resolveVisibilityFromModifiers"])) -> []

encCall: (declare-fun resolveVisibilityFromModifiers!137 (Int) Int)
encodeExp: ExpName (Name [Ident "isMutable"])
encodeExp: MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])])
encodeCall: MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]
encodeExp: ExpName (Name [Ident "classDescriptor"])
encCall: [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]
encCall: [Ident "getExpectedThisObjectIfNeeded.DescriptorUtils"]
encCall: Found methods []
encCall: Adding method with deps: 
encCall: (declare-fun getExpectedThisObjectIfNeeded.DescriptorUtils!145 (Int) Int)
encodeExp: Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))
encodeExp: MethodInv (MethodCall (Name [Ident "wiz_cond"]) [BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null),Lit (String "<no name>"),ExpName (Name [Ident "name"])])
encodeCall: MethodCall (Name [Ident "wiz_cond"]) [BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null),Lit (String "<no name>"),ExpName (Name [Ident "name"])]
encodeExp: BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)
encodeExp: ExpName (Name [Ident "name"])
encodeExp: Lit Null
encodeExp: Lit (String "<no name>")
encodeExp: ExpName (Name [Ident "name"])
encCall: [Ident "wiz_cond"]
encCall: Found methods []
encCall: Found wiz_cond in function map with dep = 
encCall: (declare-fun wiz_cond!139 (Bool Int Int) Int)
encCall: [Ident "NewPropertyDescriptor"]
encCall: Found methods []
encCall: Adding method with deps: 
encCall: (declare-fun NewPropertyDescriptor!146 (Int Int Int Int Int Int Int) Int)
analyzer: press any key to continue...
==================================
Statement of versions [1]
PropertyDescriptor propertyDescriptor = new PropertyDescriptor(classDescriptor, annotationResolver.resolveAnnotations(scope, modifierList), resolveModalityFromModifiers(parameter.getModifierList(), Modality.FINAL), resolveVisibilityFromModifiers(parameter.getModifierList()), isMutable, DescriptorUtils.getExpectedThisObjectIfNeeded(classDescriptor), name == null ? "<no name>" : name);
LocalVars [] (RefType (ClassRefType (ClassType [(Ident "PropertyDescriptor",[])]))) [VarDecl (VarId (Ident "propertyDescriptor")) (Just (InitExp (InstanceCreation [] (ClassType [(Ident "PropertyDescriptor",[])]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))] Nothing)))]
encodeVarDecl: VarDecl (VarId (Ident "propertyDescriptor")) (Just (InitExp (InstanceCreation [] (ClassType [(Ident "PropertyDescriptor",[])]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))] Nothing)))
encodeExp: InstanceCreation [] (ClassType [(Ident "PropertyDescriptor",[])]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))] Nothing
encodeCall: MethodCall (Name [Ident "NewPropertyDescriptor"]) [ExpName (Name [Ident "classDescriptor"]),MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]),MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]),MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]),ExpName (Name [Ident "isMutable"]),MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]),Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))]
encodeExp: ExpName (Name [Ident "classDescriptor"])
encodeExp: MethodInv (MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])])
encodeCall: MethodCall (Name [Ident "annotationResolver",Ident "resolveAnnotations"]) [ExpName (Name [Ident "scope"]),ExpName (Name [Ident "modifierList"])]
encodeExp: ExpName (Name [Ident "scope"])
encodeExp: ExpName (Name [Ident "modifierList"])
encCall: [Ident "annotationResolver",Ident "resolveAnnotations"]
encCall: [Ident "resolveAnnotations"]
encCall: Found methods []
encCall: Found resolveAnnotations in function map with dep = 
encCall: (declare-fun resolveAnnotations!133 (Int Int Int) Int)
encodeExp: MethodInv (MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])])
encodeCall: MethodCall (Name [Ident "resolveModalityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []),ExpName (Name [Ident "Modality",Ident "FINAL"])]
encodeExp: MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])
encodeCall: MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []
encCall: [Ident "parameter",Ident "getModifierList"]
encCall: [Ident "getModifierList"]
encCall: Found methods []
encCall: Found getModifierList in function map with dep = 
encCall: (declare-fun getModifierList!134 (Int) Int)
encodeExp: ExpName (Name [Ident "Modality",Ident "FINAL"])
encCall: [Ident "resolveModalityFromModifiers"]
encCall: Found methods [MethodDecl [Annotation (MarkerAnnotation {annName = Name [Ident "NotNull"]}),Static] [] (Just (RefType (ClassRefType (ClassType [(Ident "Modality",[])])))) (Ident "resolveModalityFromModifiers") [FormalParam [Annotation (MarkerAnnotation {annName = Name [Ident "Nullable"]})] (RefType (ClassRefType (ClassType [(Ident "JetModifierList",[])]))) False (VarId (Ident "modifierList")),FormalParam [Annotation (MarkerAnnotation {annName = Name [Ident "NotNull"]})] (RefType (ClassRefType (ClassType [(Ident "Modality",[])]))) False (VarId (Ident "defaultModality"))] [] (MethodBody (Just (Block [BlockStmt (IfThen (BinOp (ExpName (Name [Ident "modifierList"])) Equal (Lit Null)) (Return (Just (ExpName (Name [Ident "defaultModality"]))))),LocalVars [] (PrimType BooleanT) [VarDecl (VarId (Ident "hasAbstractModifier")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "modifierList",Ident "hasModifier"]) [ExpName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"])]))))],LocalVars [] (PrimType BooleanT) [VarDecl (VarId (Ident "hasOverrideModifier")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "modifierList",Ident "hasModifier"]) [ExpName (Name [Ident "JetTokens",Ident "OVERRIDE_KEYWORD"])]))))],BlockStmt (IfThen (MethodInv (MethodCall (Name [Ident "modifierList",Ident "hasModifier"]) [ExpName (Name [Ident "JetTokens",Ident "OPEN_KEYWORD"])])) (StmtBlock (Block [BlockStmt (IfThen (BinOp (BinOp (ExpName (Name [Ident "hasAbstractModifier"])) COr (ExpName (Name [Ident "defaultModality"]))) Equal (ExpName (Name [Ident "Modality",Ident "ABSTRACT"]))) (StmtBlock (Block [BlockStmt (Return (Just (ExpName (Name [Ident "Modality",Ident "ABSTRACT"]))))]))),BlockStmt (Return (Just (ExpName (Name [Ident "Modality",Ident "OPEN"]))))]))),BlockStmt (IfThen (ExpName (Name [Ident "hasAbstractModifier"])) (StmtBlock (Block [BlockStmt (Return (Just (ExpName (Name [Ident "Modality",Ident "ABSTRACT"]))))]))),LocalVars [] (PrimType BooleanT) [VarDecl (VarId (Ident "hasFinalModifier")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "modifierList",Ident "hasModifier"]) [ExpName (Name [Ident "JetTokens",Ident "FINAL_KEYWORD"])]))))],BlockStmt (IfThen (BinOp (BinOp (ExpName (Name [Ident "hasOverrideModifier"])) CAnd (PreNot (ExpName (Name [Ident "hasFinalModifier"])))) CAnd (PreNot (BinOp (ExpName (Name [Ident "defaultModality"])) Equal (ExpName (Name [Ident "Modality",Ident "ABSTRACT"]))))) (StmtBlock (Block [BlockStmt (Return (Just (ExpName (Name [Ident "Modality",Ident "OPEN"]))))]))),BlockStmt (IfThen (ExpName (Name [Ident "hasFinalModifier"])) (StmtBlock (Block [BlockStmt (Return (Just (ExpName (Name [Ident "Modality",Ident "FINAL"]))))]))),BlockStmt (Return (Just (ExpName (Name [Ident "defaultModality"]))))])))]
incLoc
encCall: Found resolveModalityFromModifiers in function map with dep = (Output,SName (Name [Ident "Modality",Ident "ABSTRACT"])) -> []
(Output,SName (Name [Ident "Modality",Ident "FINAL"])) -> []
(Output,SName (Name [Ident "Modality",Ident "OPEN"])) -> []
(Output,SName (Name [Ident "defaultModality"])) -> []
(None,SName (Name [Ident "hasAbstractModifier"])) -> [SName (Name [Ident "modifierList"]),SName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"])]
(None,SName (Name [Ident "hasFinalModifier"])) -> [SName (Name [Ident "modifierList"]),SName (Name [Ident "JetTokens",Ident "FINAL_KEYWORD"])]
(None,SName (Name [Ident "hasOverrideModifier"])) -> [SName (Name [Ident "modifierList"]),SName (Name [Ident "JetTokens",Ident "OVERRIDE_KEYWORD"])]
(None,SName (Name [Ident "modifierList"])) -> [SName (Name [Ident "modifierList"]),SName (Name [Ident "JetTokens",Ident "ABSTRACT_KEYWORD"]),SName (Name [Ident "JetTokens",Ident "OVERRIDE_KEYWORD"]),SName (Name [Ident "JetTokens",Ident "FINAL_KEYWORD"]),SName (Name [Ident "JetTokens",Ident "OPEN_KEYWORD"])]

encCall: (declare-fun resolveModalityFromModifiers!136 (Int Int) Int)
encodeExp: MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])])
encodeCall: MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])]
encodeExp: MethodInv (MethodCall (Name [Ident "parameter",Ident "getModifierList"]) [])
encodeCall: MethodCall (Name [Ident "parameter",Ident "getModifierList"]) []
encCall: [Ident "parameter",Ident "getModifierList"]
encCall: [Ident "getModifierList"]
encCall: Found methods []
encCall: Found getModifierList in function map with dep = 
encCall: (declare-fun getModifierList!134 (Int) Int)
encCall: [Ident "resolveVisibilityFromModifiers"]
encCall: Found methods [MethodDecl [Annotation (MarkerAnnotation {annName = Name [Ident "NotNull"]}),Static] [] (Just (RefType (ClassRefType (ClassType [(Ident "Visibility",[])])))) (Ident "resolveVisibilityFromModifiers") [FormalParam [Annotation (MarkerAnnotation {annName = Name [Ident "Nullable"]})] (RefType (ClassRefType (ClassType [(Ident "JetModifierList",[])]))) False (VarId (Ident "modifierList"))] [] (MethodBody (Just (Block [BlockStmt (Return (Just (MethodInv (MethodCall (Name [Ident "resolveVisibilityFromModifiers"]) [ExpName (Name [Ident "modifierList"]),ExpName (Name [Ident "Visibility",Ident "INTERNAL"])]))))])))]
incLoc
encCall: Found resolveVisibilityFromModifiers in function map with dep = (Output,SName (Name [Ident "Visibility",Ident "INTERNAL"])) -> []
(Output,SName (Name [Ident "modifierList"])) -> []
(Output,SName (Name [Ident "resolveVisibilityFromModifiers"])) -> []

encCall: (declare-fun resolveVisibilityFromModifiers!137 (Int) Int)
encodeExp: ExpName (Name [Ident "isMutable"])
encodeExp: MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])])
encodeCall: MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]
encodeExp: ExpName (Name [Ident "classDescriptor"])
encCall: [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]
encCall: [Ident "getExpectedThisObjectIfNeeded.DescriptorUtils"]
encCall: Found methods []
encCall: Found getExpectedThisObjectIfNeeded.DescriptorUtils in function map with dep = 
encCall: (declare-fun getExpectedThisObjectIfNeeded.DescriptorUtils!145 (Int) Int)
encodeExp: Cond (BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)) (Lit (String "<no name>")) (ExpName (Name [Ident "name"]))
encodeExp: MethodInv (MethodCall (Name [Ident "wiz_cond"]) [BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null),Lit (String "<no name>"),ExpName (Name [Ident "name"])])
encodeCall: MethodCall (Name [Ident "wiz_cond"]) [BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null),Lit (String "<no name>"),ExpName (Name [Ident "name"])]
encodeExp: BinOp (ExpName (Name [Ident "name"])) Equal (Lit Null)
encodeExp: ExpName (Name [Ident "name"])
encodeExp: Lit Null
encodeExp: Lit (String "<no name>")
encodeExp: ExpName (Name [Ident "name"])
encCall: [Ident "wiz_cond"]
encCall: Found methods []
encCall: Found wiz_cond in function map with dep = 
encCall: (declare-fun wiz_cond!139 (Bool Int Int) Int)
encCall: [Ident "NewPropertyDescriptor"]
encCall: Found methods []
encCall: Found NewPropertyDescriptor in function map with dep = 
encCall: (declare-fun NewPropertyDescriptor!146 (Int Int Int Int Int Int Int) Int)
analyzer: press any key to continue...
analyse: dependence analysis
==================================
Statement of versions [1,2,3,4]
<?HOLE?>
BlockStmt Hole
popEdits: vId = 1, |Edit| = fromList [(1,[AnnLocalVars [1] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [1] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnBlockStmt (AnnExpStmt [1] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [1]),AnnBlockStmt (AnnSkip [1])]),(2,[AnnBlockStmt (AnnSkip [2]),AnnBlockStmt (AnnSkip [2]),AnnBlockStmt (AnnExpStmt [2] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]]),(3,[AnnLocalVars [3] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [3] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnBlockStmt (AnnExpStmt [3] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [3]),AnnBlockStmt (AnnSkip [3])]),(4,[AnnBlockStmt (AnnSkip [4]),AnnBlockStmt (AnnSkip [4]),AnnBlockStmt (AnnExpStmt [4] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]])]
popEdits: vId = 2, |Edit| = fromList [(1,[AnnLocalVars [1] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnBlockStmt (AnnExpStmt [1] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [1]),AnnBlockStmt (AnnSkip [1])]),(2,[AnnBlockStmt (AnnSkip [2]),AnnBlockStmt (AnnSkip [2]),AnnBlockStmt (AnnExpStmt [2] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]]),(3,[AnnLocalVars [3] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [3] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnBlockStmt (AnnExpStmt [3] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [3]),AnnBlockStmt (AnnSkip [3])]),(4,[AnnBlockStmt (AnnSkip [4]),AnnBlockStmt (AnnSkip [4]),AnnBlockStmt (AnnExpStmt [4] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]])]
popEdits: vId = 3, |Edit| = fromList [(1,[AnnLocalVars [1] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnBlockStmt (AnnExpStmt [1] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [1]),AnnBlockStmt (AnnSkip [1])]),(2,[AnnBlockStmt (AnnSkip [2]),AnnBlockStmt (AnnExpStmt [2] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]]),(3,[AnnLocalVars [3] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [3] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnBlockStmt (AnnExpStmt [3] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [3]),AnnBlockStmt (AnnSkip [3])]),(4,[AnnBlockStmt (AnnSkip [4]),AnnBlockStmt (AnnSkip [4]),AnnBlockStmt (AnnExpStmt [4] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]])]
popEdits: vId = 4, |Edit| = fromList [(1,[AnnLocalVars [1] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnBlockStmt (AnnExpStmt [1] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [1]),AnnBlockStmt (AnnSkip [1])]),(2,[AnnBlockStmt (AnnSkip [2]),AnnBlockStmt (AnnExpStmt [2] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]]),(3,[AnnLocalVars [3] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnBlockStmt (AnnExpStmt [3] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [3]),AnnBlockStmt (AnnSkip [3])]),(4,[AnnBlockStmt (AnnSkip [4]),AnnBlockStmt (AnnSkip [4]),AnnBlockStmt (AnnExpStmt [4] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]])]
analyzer: press any key to continue...
==================================
Statement of versions [4]
<SKIP>
BlockStmt Skip
analyzer: press any key to continue...
==================================
Statement of versions [3]
PropertyGetterDescriptor getter = createDefaultGetter(propertyDescriptor);
LocalVars [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]
encodeVarDecl: VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))
encodeExp: MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])])
encodeCall: MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]
encodeExp: ExpName (Name [Ident "propertyDescriptor"])
encCall: [Ident "createDefaultGetter"]
encCall: Found methods [MethodDecl [Private] [] (Just (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])])))) (Ident "createDefaultGetter") [FormalParam [] (RefType (ClassRefType (ClassType [(Ident "PropertyDescriptor",[])]))) False (VarId (Ident "propertyDescriptor"))] [] (MethodBody (Just (Block [LocalVars [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getterDescriptor")) Nothing],BlockStmt (ExpStmt (Assign (NameLhs (Name [Ident "getterDescriptor"])) EqualA (InstanceCreation [] (ClassType [(Ident "PropertyGetterDescriptor",[])]) [ExpName (Name [Ident "propertyDescriptor"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "AnnotationDescriptor",[])])] (Ident "emptyList") []),MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "getModality"]) []),MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "getVisibility"]) []),Lit (Boolean False),Lit (Boolean True)] Nothing))),BlockStmt (Return (Just (ExpName (Name [Ident "getterDescriptor"]))))])))]
incLoc
encCall: Adding method with deps: (Output,SName (Name [Ident "getterDescriptor"])) -> [SName (Name [Ident "propertyDescriptor"])]

encCall: (declare-fun createDefaultGetter!151 (Int) Int)
analyzer: press any key to continue...
==================================
Statement of versions [2]
<SKIP>
BlockStmt Skip
analyzer: press any key to continue...
==================================
Statement of versions [1]
PropertyGetterDescriptor getter = createDefaultGetter(propertyDescriptor);
LocalVars [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]
encodeVarDecl: VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))
encodeExp: MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])])
encodeCall: MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]
encodeExp: ExpName (Name [Ident "propertyDescriptor"])
encCall: [Ident "createDefaultGetter"]
encCall: Found methods [MethodDecl [Private] [] (Just (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])])))) (Ident "createDefaultGetter") [FormalParam [] (RefType (ClassRefType (ClassType [(Ident "PropertyDescriptor",[])]))) False (VarId (Ident "propertyDescriptor"))] [] (MethodBody (Just (Block [LocalVars [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getterDescriptor")) Nothing],BlockStmt (ExpStmt (Assign (NameLhs (Name [Ident "getterDescriptor"])) EqualA (InstanceCreation [] (ClassType [(Ident "PropertyGetterDescriptor",[])]) [ExpName (Name [Ident "propertyDescriptor"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "AnnotationDescriptor",[])])] (Ident "emptyList") []),MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "getModality"]) []),MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "getVisibility"]) []),Lit (Boolean False),Lit (Boolean True)] Nothing))),BlockStmt (Return (Just (ExpName (Name [Ident "getterDescriptor"]))))])))]
incLoc
encCall: Found createDefaultGetter in function map with dep = (Output,SName (Name [Ident "getterDescriptor"])) -> [SName (Name [Ident "propertyDescriptor"])]

encCall: (declare-fun createDefaultGetter!151 (Int) Int)
analyzer: press any key to continue...
analyse: dependence analysis
==================================
Statement of versions [1,2,3,4]
<?HOLE?>
BlockStmt Hole
popEdits: vId = 1, |Edit| = fromList [(1,[AnnLocalVars [1] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnBlockStmt (AnnExpStmt [1] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [1]),AnnBlockStmt (AnnSkip [1])]),(2,[AnnBlockStmt (AnnSkip [2]),AnnBlockStmt (AnnExpStmt [2] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]]),(3,[AnnLocalVars [3] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnBlockStmt (AnnExpStmt [3] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [3]),AnnBlockStmt (AnnSkip [3])]),(4,[AnnBlockStmt (AnnSkip [4]),AnnBlockStmt (AnnExpStmt [4] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]])]
popEdits: vId = 2, |Edit| = fromList [(1,[AnnBlockStmt (AnnExpStmt [1] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [1]),AnnBlockStmt (AnnSkip [1])]),(2,[AnnBlockStmt (AnnSkip [2]),AnnBlockStmt (AnnExpStmt [2] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]]),(3,[AnnLocalVars [3] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnBlockStmt (AnnExpStmt [3] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [3]),AnnBlockStmt (AnnSkip [3])]),(4,[AnnBlockStmt (AnnSkip [4]),AnnBlockStmt (AnnExpStmt [4] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]])]
popEdits: vId = 3, |Edit| = fromList [(1,[AnnBlockStmt (AnnExpStmt [1] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [1]),AnnBlockStmt (AnnSkip [1])]),(2,[AnnBlockStmt (AnnExpStmt [2] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]]),(3,[AnnLocalVars [3] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnBlockStmt (AnnExpStmt [3] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [3]),AnnBlockStmt (AnnSkip [3])]),(4,[AnnBlockStmt (AnnSkip [4]),AnnBlockStmt (AnnExpStmt [4] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]])]
popEdits: vId = 4, |Edit| = fromList [(1,[AnnBlockStmt (AnnExpStmt [1] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [1]),AnnBlockStmt (AnnSkip [1])]),(2,[AnnBlockStmt (AnnExpStmt [2] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [2] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]]),(3,[AnnBlockStmt (AnnExpStmt [3] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),MethodInv (MethodCall (Name [Ident "DescriptorUtils",Ident "getExpectedThisObjectIfNeeded"]) [ExpName (Name [Ident "classDescriptor"])]),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnBlockStmt (AnnSkip [3]),AnnBlockStmt (AnnSkip [3])]),(4,[AnnBlockStmt (AnnSkip [4]),AnnBlockStmt (AnnExpStmt [4] (MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "setType"]) [ExpName (Name [Ident "inType"]),ExpName (Name [Ident "type"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "TypeParameterDescriptor",[])])] (Ident "emptyList") []),ExpName (Name [Ident "ReceiverDescriptor",Ident "NO_RECEIVER"])]))),AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertyGetterDescriptor",[])]))) [VarDecl (VarId (Ident "getter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultGetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))],AnnLocalVars [4] [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]])]
analyzer: press any key to continue...
==================================
Statement of versions [4]
<SKIP>
BlockStmt Skip
analyzer: press any key to continue...
==================================
Statement of versions [3]
PropertySetterDescriptor setter = createDefaultSetter(propertyDescriptor);
LocalVars [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]
encodeVarDecl: VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))
encodeExp: MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])])
encodeCall: MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]
encodeExp: ExpName (Name [Ident "propertyDescriptor"])
encCall: [Ident "createDefaultSetter"]
encCall: Found methods [MethodDecl [Private] [] (Just (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])])))) (Ident "createDefaultSetter") [FormalParam [] (RefType (ClassRefType (ClassType [(Ident "PropertyDescriptor",[])]))) False (VarId (Ident "propertyDescriptor"))] [] (MethodBody (Just (Block [LocalVars [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setterDescriptor")) Nothing],BlockStmt (ExpStmt (Assign (NameLhs (Name [Ident "setterDescriptor"])) EqualA (InstanceCreation [] (ClassType [(Ident "PropertySetterDescriptor",[])]) [MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "getModality"]) []),MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "getVisibility"]) []),ExpName (Name [Ident "propertyDescriptor"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "AnnotationDescriptor",[])])] (Ident "emptyList") []),Lit (Boolean False),Lit (Boolean True)] Nothing))),BlockStmt (Return (Just (ExpName (Name [Ident "setterDescriptor"]))))])))]
incLoc
encCall: Adding method with deps: (Output,SName (Name [Ident "setterDescriptor"])) -> [SName (Name [Ident "propertyDescriptor"])]

encCall: (declare-fun createDefaultSetter!156 (Int) Int)
analyzer: press any key to continue...
==================================
Statement of versions [2]
<SKIP>
BlockStmt Skip
analyzer: press any key to continue...
==================================
Statement of versions [1]
PropertySetterDescriptor setter = createDefaultSetter(propertyDescriptor);
LocalVars [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))]
encodeVarDecl: VarDecl (VarId (Ident "setter")) (Just (InitExp (MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]))))
encodeExp: MethodInv (MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])])
encodeCall: MethodCall (Name [Ident "createDefaultSetter"]) [ExpName (Name [Ident "propertyDescriptor"])]
encodeExp: ExpName (Name [Ident "propertyDescriptor"])
encCall: [Ident "createDefaultSetter"]
encCall: Found methods [MethodDecl [Private] [] (Just (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])])))) (Ident "createDefaultSetter") [FormalParam [] (RefType (ClassRefType (ClassType [(Ident "PropertyDescriptor",[])]))) False (VarId (Ident "propertyDescriptor"))] [] (MethodBody (Just (Block [LocalVars [] (RefType (ClassRefType (ClassType [(Ident "PropertySetterDescriptor",[])]))) [VarDecl (VarId (Ident "setterDescriptor")) Nothing],BlockStmt (ExpStmt (Assign (NameLhs (Name [Ident "setterDescriptor"])) EqualA (InstanceCreation [] (ClassType [(Ident "PropertySetterDescriptor",[])]) [MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "getModality"]) []),MethodInv (MethodCall (Name [Ident "propertyDescriptor",Ident "getVisibility"]) []),ExpName (Name [Ident "propertyDescriptor"]),MethodInv (TypeMethodCall (Name [Ident "Collections"]) [ClassRefType (ClassType [(Ident "AnnotationDescriptor",[])])] (Ident "emptyList") []),Lit (Boolean False),Lit (Boolean True)] Nothing))),BlockStmt (Return (Just (ExpName (Name [Ident "setterDescriptor"]))))])))]
incLoc
encCall: Found createDefaultSetter in function map with dep = (Output,SName (Name [Ident "setterDescriptor"])) -> [SName (Name [Ident "propertyDescriptor"])]

encCall: (declare-fun createDefaultSetter!156 (Int) Int)
analyzer: press any key to continue...
analyse: dependence analysis
==================================
Statement of versions [1,2,3,4]
JetType inType = isMutable ? type : null;
LocalVars [] (RefType (ClassRefType (ClassType [(Ident "JetType",[])]))) [VarDecl (VarId (Ident "inType")) (Just (InitExp (Cond (ExpName (Name [Ident "isMutable"])) (ExpName (Name [Ident "type"])) (Lit Null))))]
encodeVarDecl: VarDecl (VarId (Ident "inType")) (Just (InitExp (Cond (ExpName (Name [Ident "isMutable"])) (ExpName (Name [Ident "type"])) (Lit Null))))
encodeExp: Cond (ExpName (Name [Ident "isMutable"])) (ExpName (Name [Ident "type"])) (Lit Null)
encodeExp: MethodInv (MethodCall (Name [Ident "wiz_cond"]) [ExpName (Name [Ident "isMutable"]),ExpName (Name [Ident "type"]),Lit Null])
encodeCall: MethodCall (Name [Ident "wiz_cond"]) [ExpName (Name [Ident "isMutable"]),ExpName (Name [Ident "type"]),Lit Null]
encodeExp: ExpName (Name [Ident "isMutable"])
encodeExp: ExpName (Name [Ident "type"])
encodeExp: Lit Null
encCall: [Ident "wiz_cond"]
encCall: Found methods []
encCall: Found wiz_cond in function map with dep = 
encCall: (declare-fun wiz_cond!139 (Bool Int Int) Int)
