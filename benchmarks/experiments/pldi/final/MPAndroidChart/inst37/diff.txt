Parsing files...
Parsing o...
Parsing a...
Parsing b...
Parsing m...
Merge Instance for method (Ident "LineChartRenderer",Ident "drawData",[RefType (ClassRefType (ClassType [(Ident "Canvas",[])]))])
@Override
 public void drawData (Canvas c)
{
  <?HOLE?>
  mPathBitmap.eraseColor(Color.TRANSPARENT);
  LineData lineData = mChart.getLineData();
  for (LineDataSet set : lineData.getDataSets()) {
                                                   if (set.isVisible())
                                                     drawDataSet(c, set);
                                                 }
  c.drawBitmap(mPathBitmap, 0, 0, mRenderPaint);
}
Edit Base:
Hole 1:
[SCond]: if (mPathBitmap == null)
{
  mPathBitmap = Bitmap.createBitmap(((int) mViewPortHandler.getChartWidth()), ((int) mViewPortHandler.getChartHeight()), Bitmap.Config.ARGB_4444);
  mBitmapCanvas = new Canvas(mPathBitmap);
}

Edit A:
Hole 1:
[SCond]: if (((mPathBitmap == null || mPathBitmap.getWidth()) != mViewPortHandler.getChartWidth() || mPathBitmap.getHeight()) != mViewPortHandler.getChartHeight())
{
  mPathBitmap = Bitmap.createBitmap(((int) mViewPortHandler.getChartWidth()), ((int) mViewPortHandler.getChartHeight()), Bitmap.Config.ARGB_4444);
  mBitmapCanvas = new Canvas(mPathBitmap);
}

Edit B:
Hole 1:
[]: if (mPathBitmap == null || (int) mViewPortHandler.getChartHeight() != mPathBitmap.getHeight())
{
  mPathBitmap = Bitmap.createBitmap(((int) mViewPortHandler.getChartWidth()), ((int) mViewPortHandler.getChartHeight()), Bitmap.Config.ARGB_4444);
  mBitmapCanvas = new Canvas(mPathBitmap);
}

Edit M:
Hole 1:
[]: if (mPathBitmap == null || mPathBitmap.getWidth() != (int) mViewPortHandler.getChartWidth() || mPathBitmap.getHeight() != (int) mViewPortHandler.getChartHeight())
{
  mPathBitmap = Bitmap.createBitmap(((int) mViewPortHandler.getChartWidth()), ((int) mViewPortHandler.getChartHeight()), Bitmap.Config.ARGB_4444);
  mBitmapCanvas = new Canvas(mPathBitmap);
}


