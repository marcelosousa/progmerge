Parsing files...
Merge Instance for method (Ident "SpdyServer",Ident "receive",[RefType (ClassRefType (ClassType [(Ident "SpdyStream",[])]))])
@Override
 public void receive (final SpdyStream stream) throws IOException
{
  List<Header> requestHeaders = stream.getRequestHeaders();
  String path = null;
  <?HOLE?>
  if (path == null)
  {
    throw new AssertionError();
  }
  File file = new File(baseDirectory + path);
  if (file.isDirectory())
  {
    serveDirectory(stream, file.list());
  }
  else
    if (file.exists())
    {
      serveFile(stream, file);
    }
    else
    {
      send404(stream, path);
    }
}
Edit Base:
Hole 1:
[SLoop]: for (int i = 0 ; i < requestHeaders.size() ; i++)
{
  if (requestHeaders.get(i).name.equals(Header.TARGET_PATH))
  {
    path = requestHeaders.get(i).value.utf8();
    break;
  }
}

Edit A:
Hole 1:
[SLoop]: for (int i = 0, size = requestHeaders.size() ; i < size ; i++)
{
  if (requestHeaders.get(i).name.equals(Header.TARGET_PATH))
  {
    path = requestHeaders.get(i).value.utf8();
    break;
  }
}

Edit B:
Hole 1:
[]: for (int i = 0 ; i < requestHeaders.size() ; i++)
{
  if (requestHeaders.get(i).name.equals(Header.TARGET_PATH))
  {
    path = requestHeaders.get(i).value.utf8();
    break;
  }
}

Edit M:
Hole 1:
[]: for (int i = 0, size = requestHeaders.size() ; i < size ; i++)
{
  if (requestHeaders.get(i).name.equals(Header.TARGET_PATH))
  {
    path = requestHeaders.get(i).value.utf8();
    break;
  }
}


