Parsing files...
Merge Instance for method (Ident "CubicLineChartActivity",Ident "setData",[PrimType IntT,PrimType FloatT])
private void setData (int count, float range)
{
  <?HOLE?>
  for (int i = 0 ; i < count ; i++)
  {
    <?HOLE?>
  }
  ArrayList<Entry> yVals = new ArrayList<Entry>();
  for (int i = 0 ; i < count ; i++)
  {
    float mult = range + 1;
    float val = (float) (Math.random() * mult) + 20;
    yVals.add(new Entry(val, i));
  }
  LineDataSet set1;
  if ((mChart.getData() != null && mChart.getData().getDataSetCount()) > 0)
  {
    set1 = (LineDataSet) mChart.getData().getDataSetByIndex(0);
    set1.setYVals(yVals);
    mChart.getData().setXVals(xVals);
    <?HOLE?>
    mChart.notifyDataSetChanged();
  }
  else
  {
    set1 = new LineDataSet(yVals, "DataSet 1");
    set1.setDrawCubic(true);
    set1.setCubicIntensity(0.2F);
    set1.setDrawCircles(false);
    set1.setLineWidth(1.8F);
    set1.setCircleRadius(4.0F);
    set1.setCircleColor(Color.WHITE);
    set1.setHighLightColor(Color.rgb(244, 117, 117));
    set1.setColor(Color.WHITE);
    set1.setFillColor(Color.WHITE);
    set1.setFillAlpha(100);
    set1.setDrawHorizontalHighlightIndicator(false);
    set1.setFillFormatter(new FillFormatter()
                          {
                            @Override
                            public float getFillLinePosition (ILineDataSet dataSet, LineDataProvider dataProvider)
                            {
                              return (-10);
                            }
                          });
    LineData data = new LineData(xVals, set1);
    data.setValueTypeface(tf);
    data.setValueTextSize(9.0F);
    data.setDrawValues(false);
    mChart.setData(data);
  }
}
Edit Base:
Hole 1:
[]: ArrayList<String> xVals = new ArrayList<String>();
Hole 2:
[SLoop]: xVals.add((1990 + i + ""));
Hole 3:
[SCond]: <SKIP>

Edit A:
Hole 1:
[]: ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();
Hole 2:
[SLoop]: xVals.add(new XAxisValue((1990 + i), (1990 + i + "")));
Hole 3:
[SCond]: <SKIP>

Edit B:
Hole 1:
[]: ArrayList<String> xVals = new ArrayList<String>();
Hole 2:
[SLoop]: xVals.add((1990 + i + ""));
Hole 3:
[SCond]: mChart.getData().notifyDataChanged();

Edit M:
Hole 1:
[]: ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();
Hole 2:
[SLoop]: xVals.add(new XAxisValue((1990 + i), (1990 + i + "")));
Hole 3:
[SCond]: mChart.getData().notifyDataChanged();


