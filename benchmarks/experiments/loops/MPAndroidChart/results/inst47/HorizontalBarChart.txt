Parsing files...
Merge Instance for method (Ident "HorizontalBarChart",Ident "drawXLabels",[PrimType FloatT])
@Override
 protected void drawXLabels (float yPos)
{
  if (!mDrawXLabels)
    return;
  mXLabelPaint.setTextAlign(Paint.Align.RIGHT);
  float[] position = new float[] {
                                   0.0F,
                                   0.0F,
                                 };
  int step = mData.getDataSetCount();
  <?HOLE?>
}
Edit Base:
Hole 1:
[SLoop]: for (int i = 0 ; i < mData.getXValCount() ; i += mXLabels.mXAxisLabelModulus)
{
  position[1] = ((i * step + i) * mData.getGroupSpace() + mData.getGroupSpace()) / 2.0F;
  if (mXLabels.isCenterXLabelsEnabled())
    position[1] += step / 2.0F;
  mTrans.pointValuesToPixel(position);
  if (((position[1] >= mOffsetTop && position[1]) <= getHeight()) - mOffsetBottom)
  {
    String label = mData.getXVals().get(i);
    mDrawCanvas.drawText(label, (mOffsetLeft - 10), position[1], mXLabelPaint);
  }
}

Edit A:
Hole 1:
[SLoop]: for (int i = 0 ; i < mData.getXValCount() ; i++)
{
  position[1] = ((i * step + i) * mData.getGroupSpace() + mData.getGroupSpace()) / 2.0F;
  if (mXLabels.isCenterXLabelsEnabled())
    position[1] += step / 2.0F;
  mTrans.pointValuesToPixel(position);
  if (((position[1] >= mOffsetTop && position[1]) <= getHeight()) - mOffsetBottom)
  {
    String label = mData.getXVals().get(i);
    mDrawCanvas.drawText(label, (mOffsetLeft - 10), position[1], mXLabelPaint);
  }
}

Edit B:
Hole 1:
[]: for (int i = 0 ; i < mData.getXValCount() ; i += mXLabels.mXAxisLabelModulus)
{
  position[1] = ((i * step + i) * mData.getGroupSpace() + mData.getGroupSpace()) / 2.0F;
  if (mXLabels.isCenterXLabelsEnabled())
    position[1] += step / 2.0F;
  mTrans.pointValuesToPixel(position);
  if (((position[1] >= mOffsetTop && position[1]) <= getHeight()) - mOffsetBottom)
  {
    String label = mData.getXVals().get(i);
    mDrawCanvas.drawText(label, (mOffsetLeft - 10), position[1], mXLabelPaint);
  }
}

Edit M:
Hole 1:
[]: for (int i = 0 ; i < mData.getXValCount() ; i++)
{
  position[1] = ((i * step + i) * mData.getGroupSpace() + mData.getGroupSpace()) / 2.0F;
  if (mXLabels.isCenterXLabelsEnabled())
    position[1] += step / 2.0F;
  mTrans.pointValuesToPixel(position);
  if (((position[1] >= mOffsetTop && position[1]) <= getHeight()) - mOffsetBottom)
  {
    String label = mData.getXVals().get(i);
    mDrawCanvas.drawText(label, (mOffsetLeft - 10), position[1], mXLabelPaint);
  }
}


