Parsing files...
Merge Instance for method (Ident "OnResourceCondition",Ident "getMatchOutcome",[RefType (ClassRefType (ClassType [(Ident "ConditionContext",[])])),RefType (ClassRefType (ClassType [(Ident "AnnotatedTypeMetadata",[])]))])
@Override
 public ConditionOutcome getMatchOutcome (ConditionContext context, AnnotatedTypeMetadata metadata)
{
  MultiValueMap<String, Object> attributes = metadata.getAllAnnotationAttributes(ConditionalOnResource.class.getName(), true);
  if (attributes != null)
  {
    ResourceLoader loader = context.getResourceLoader() == null ? this.defaultResourceLoader : context.getResourceLoader();
    List<String> locations = new ArrayList<String>();
    collectValues(locations, attributes.get("resources"));
    Assert.isTrue((locations.size() > 0), "@ConditionalOnResource annotations must specify at least one resource location");
    for (String location : locations) {
                                        <?HOLE?>
                                      }
  }
  return ConditionOutcome.match();
}
Edit Base:
Hole 1:
[SCond,SLoop,SCond]: if (!loader.getResource(location).exists())
{
  return ConditionOutcome.noMatch(("resource not found: " + location));
}

Edit A:
Hole 1:
[SCond,SLoop,SCond]: if (!loader.getResource(context.getEnvironment().resolvePlaceholders(location)).exists())
{
  return ConditionOutcome.noMatch(("resource not found: " + location));
}

Edit B:
Hole 1:
[SLoop,SCond]: if (!loader.getResource(location).exists())
{
  return ConditionOutcome.noMatch(("resource not found: " + location));
}

Edit M:
Hole 1:
[SLoop,SCond]: if (!loader.getResource(context.getEnvironment().resolvePlaceholders(location)).exists())
{
  return ConditionOutcome.noMatch(("resource not found: " + location));
}


