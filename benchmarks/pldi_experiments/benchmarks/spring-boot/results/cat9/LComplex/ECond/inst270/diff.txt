Merge Instance for method (Ident "ShutdownEndpoint",Ident "invoke",[])
@Override
 public Map<String, Object> invoke ()
{
  if (this.context == null)
  {
    <?HOLE?>
  }
  <?HOLE?>
}
Edit Base:
Hole 1:
[SCond]: return Collections.<String, Object>singletonMap("message", "No context to shutdown.");
Hole 2:
[]: try
{
  return Collections.<String, Object>singletonMap("message", "Shutting down, bye...");
}
finally {
          new Thread(new Runnable()
                     {
                       @Override
                       public void run ()
                       {
                         try
                         {
                           Thread.sleep(500L);
                         }
                         catch (InterruptedException ex)
                         {
                         }
                         ShutdownEndpoint.this.context.close();
                       }
                     }).start();
        }

Edit A:
Hole 1:
[SCond]: return NO_CONTEXT_MESSAGE;
Hole 2:
[]: try
{
  return SHUTDOWN_MESSAGE;
}
finally {
          new Thread(new Runnable()
                     {
                       @Override
                       public void run ()
                       {
                         try
                         {
                           Thread.sleep(500L);
                         }
                         catch (InterruptedException ex)
                         {
                         }
                         ShutdownEndpoint.this.context.close();
                       }
                     }).start();
        }

Edit B:
Hole 1:
[SCond]: return Collections.<String, Object>singletonMap("message", "No context to shutdown.");
Hole 2:
[]: try
{
  return Collections.<String, Object>singletonMap("message", "Shutting down, bye...");
}
finally {
          Thread thread = new Thread(new Runnable()
                                     {
                                       @Override
                                       public void run ()
                                       {
                                         try
                                         {
                                           Thread.sleep(500L);
                                         }
                                         catch (InterruptedException ex)
                                         {
                                         }
                                         ShutdownEndpoint.this.context.close();
                                       }
                                     });
          thread.setContextClassLoader(getClass().getClassLoader());
          thread.start();
        }

Edit M:
Hole 1:
[SCond]: return NO_CONTEXT_MESSAGE;
Hole 2:
[]: try
{
  return SHUTDOWN_MESSAGE;
}
finally {
          Thread thread = new Thread(new Runnable()
                                     {
                                       @Override
                                       public void run ()
                                       {
                                         try
                                         {
                                           Thread.sleep(500L);
                                         }
                                         catch (InterruptedException ex)
                                         {
                                         }
                                         ShutdownEndpoint.this.context.close();
                                       }
                                     });
          thread.setContextClassLoader(getClass().getClassLoader());
          thread.start();
        }

