Merge Instance for method (Ident "JmsHealthIndicatorTests",Ident "jmsBrokerUsesFailover",[])
@Test
 public void jmsBrokerUsesFailover () throws JMSException
{
  ConnectionFactory connectionFactory = mock(ConnectionFactory.class);
  ConnectionMetaData connectionMetaData = mock(ConnectionMetaData.class);
  given(connectionMetaData.getJMSProviderName()).willReturn("JMS test provider");
  Connection connection = mock(Connection.class);
  given(connection.getMetaData()).willReturn(connectionMetaData);
  <?HOLE?>
  given(connectionFactory.createConnection()).willReturn(connection);
  JmsHealthIndicator indicator = new JmsHealthIndicator(connectionFactory);
  Health health = indicator.health();
  <?HOLE?>
  <?HOLE?>
}
Edit Base:
Hole 1:
[]: Mockito.doThrow(new JMSException("Could not start", "123")).when(connection).start();
Hole 2:
[]: assertEquals(Status.DOWN, health.getStatus());
Hole 3:
[]: assertEquals(null, health.getDetails().get("provider"));

Edit A:
Hole 1:
[]: Mockito.doThrow(new JMSException("Could not start", "123")).when(connection).start();
Hole 2:
[]: assertThat(health.getStatus()).isEqualTo(Status.DOWN);
Hole 3:
[]: assertThat(health.getDetails().get("provider")).isNull();

Edit B:
Hole 1:
[]: willThrow(new JMSException("Could not start", "123")).given(connection).start();
Hole 2:
[]: assertEquals(Status.DOWN, health.getStatus());
Hole 3:
[]: assertEquals(null, health.getDetails().get("provider"));

Edit M:
Hole 1:
[]: willThrow(new JMSException("Could not start", "123")).given(connection).start();
Hole 2:
[]: assertThat(health.getStatus()).isEqualTo(Status.DOWN);
Hole 3:
[]: assertThat(health.getDetails().get("provider")).isNull();

