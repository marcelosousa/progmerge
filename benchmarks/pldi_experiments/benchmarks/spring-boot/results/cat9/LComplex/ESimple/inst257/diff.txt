Merge Instance for method (Ident "UndertowEmbeddedServletContainerFactory",Ident "getKeyManagers",[])
private KeyManager[] getKeyManagers ()
{
  <?HOLE?>
}
Edit Base:
Hole 1:
[]: try
{
  Ssl ssl = getSsl();
  String keyStoreType = ssl.getKeyStoreType();
  if (keyStoreType == null)
  {
    keyStoreType = "JKS";
  }
  KeyStore keyStore = KeyStore.getInstance(keyStoreType);
  URL url = ResourceUtils.getURL(ssl.getKeyStore());
  keyStore.load(url.openStream(), ssl.getKeyStorePassword().toCharArray());
  KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());
  char[] keyPassword = ssl.getKeyPassword() != null ? ssl.getKeyPassword().toCharArray() : ssl.getKeyStorePassword().toCharArray();
  keyManagerFactory.init(keyStore, keyPassword);
  return keyManagerFactory.getKeyManagers();
}
catch (Exception ex)
{
  throw new IllegalStateException(ex);
}

Edit A:
Hole 1:
[]: try
{
  KeyStore keyStore = getKeyStore();
  KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());
  Ssl ssl = getSsl();
  String keyPassword = ssl.getKeyPassword();
  if (keyPassword == null)
  {
    keyPassword = ssl.getKeyStorePassword();
  }
  keyManagerFactory.init(keyStore, keyPassword.toCharArray());
  return keyManagerFactory.getKeyManagers();
}
catch (Exception ex)
{
  throw new IllegalStateException(ex);
}

Edit B:
Hole 1:
[]: try
{
  Ssl ssl = getSsl();
  String keyStoreType = ssl.getKeyStoreType();
  if (keyStoreType == null)
  {
    keyStoreType = "JKS";
  }
  KeyStore keyStore = KeyStore.getInstance(keyStoreType);
  URL url = ResourceUtils.getURL(ssl.getKeyStore());
  char[] keyStorePassword = ssl.getKeyStorePassword() != null ? ssl.getKeyStorePassword().toCharArray() : null;
  keyStore.load(url.openStream(), keyStorePassword);
  KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());
  char[] keyPassword = ssl.getKeyPassword() != null ? ssl.getKeyPassword().toCharArray() : keyStorePassword;
  keyManagerFactory.init(keyStore, keyPassword);
  return keyManagerFactory.getKeyManagers();
}
catch (Exception ex)
{
  throw new IllegalStateException(ex);
}

Edit M:
Hole 1:
[]: try
{
  KeyStore keyStore = getKeyStore();
  KeyManagerFactory keyManagerFactory = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());
  Ssl ssl = getSsl();
  char[] keyPassword = ssl.getKeyPassword() != null ? ssl.getKeyPassword().toCharArray() : null;
  if ((keyPassword == null && ssl.getKeyStorePassword()) != null)
  {
    keyPassword = ssl.getKeyStorePassword().toCharArray();
  }
  keyManagerFactory.init(keyStore, keyPassword);
  return keyManagerFactory.getKeyManagers();
}
catch (Exception ex)
{
  throw new IllegalStateException(ex);
}

