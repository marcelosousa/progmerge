Merge Instance for method (Ident "EndpointWebMvcAutoConfiguration",Ident "afterSingletonsInstantiated",[])
@Override
 public void afterSingletonsInstantiated ()
{
  ManagementServerPort managementPort = ManagementServerPort.DIFFERENT;
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
}
Edit Base:
Hole 1:
[]: if (this.applicationContext instanceof WebApplicationContext)
{
  managementPort = ManagementServerPort.get(this.applicationContext.getEnvironment(), this.beanFactory);
}
Hole 2:
[SCond]: if (managementPort == ManagementServerPort.DIFFERENT)
{
  if ((this.applicationContext instanceof EmbeddedWebApplicationContext && ((EmbeddedWebApplicationContext) this.applicationContext).getEmbeddedServletContainer()) != null)
  {
    createChildManagementContext();
  }
  else
  {
    logger.warn(("Could not start embedded management container on " + "different port (management endpoints are still available " + "through JMX)"));
  }
}
Hole 3:
[SCond]: if (managementPort == ManagementServerPort.SAME)
{
  if (new RelaxedPropertyResolver(this.applicationContext.getEnvironment(), "management.ssl.").getProperty("enabled") != null)
  {
    throw new IllegalStateException("Management-specific SSL cannot be configured as the management " + "server is not listening on a separate port");
  }
  if (this.applicationContext.getEnvironment() instanceof ConfigurableEnvironment)
  {
    addLocalManagementPortPropertyAlias(((ConfigurableEnvironment) this.applicationContext.getEnvironment()));
  }
}
Hole 4:
[]: <SKIP>

Edit A:
Hole 1:
[]: Environment environment = this.applicationContext.getEnvironment();
Hole 2:
[SCond]: if (this.applicationContext instanceof WebApplicationContext)
{
  managementPort = ManagementServerPort.get(environment);
}
Hole 3:
[SCond]: if (managementPort == ManagementServerPort.DIFFERENT)
{
  if ((this.applicationContext instanceof ServletWebServerApplicationContext && ((ServletWebServerApplicationContext) this.applicationContext).getWebServer()) != null)
  {
    createChildManagementContext();
  }
  else
  {
    logger.warn(("Could not start management web server on " + "different port (management endpoints are still available " + "through JMX)"));
  }
}
Hole 4:
[]: if (managementPort == ManagementServerPort.SAME)
{
  if (environment.getProperty("management.ssl.enabled") != null)
  {
    throw new IllegalStateException("Management-specific SSL cannot be configured as the management " + "server is not listening on a separate port");
  }
  if (environment instanceof ConfigurableEnvironment)
  {
    addLocalManagementPortPropertyAlias(((ConfigurableEnvironment) environment));
  }
}

Edit B:
Hole 1:
[]: if (this.applicationContext instanceof WebApplicationContext)
{
  managementPort = ManagementServerPort.get(this.applicationContext.getEnvironment(), this.beanFactory);
}
Hole 2:
[]: if (managementPort == ManagementServerPort.DIFFERENT)
{
  if ((this.applicationContext instanceof EmbeddedWebApplicationContext && ((EmbeddedWebApplicationContext) this.applicationContext).getEmbeddedServletContainer()) != null)
  {
    createChildManagementContext();
  }
  else
  {
    logger.warn(("Could not start embedded management container on " + "different port (management endpoints are still available " + "through JMX)"));
  }
}
Hole 3:
[]: if (managementPort == ManagementServerPort.SAME)
{
  if (new RelaxedPropertyResolver(this.applicationContext.getEnvironment(), "management.ssl.").getProperty("enabled", Boolean.class, false))
  {
    throw new IllegalStateException("Management-specific SSL cannot be configured as the management " + "server is not listening on a separate port");
  }
  if (this.applicationContext.getEnvironment() instanceof ConfigurableEnvironment)
  {
    addLocalManagementPortPropertyAlias(((ConfigurableEnvironment) this.applicationContext.getEnvironment()));
  }
}
Hole 4:
[]: <SKIP>

Edit M:
Hole 1:
[]: Environment environment = this.applicationContext.getEnvironment();
Hole 2:
[]: if (this.applicationContext instanceof WebApplicationContext)
{
  managementPort = ManagementServerPort.get(environment);
}
Hole 3:
[]: if (managementPort == ManagementServerPort.DIFFERENT)
{
  if ((this.applicationContext instanceof ServletWebServerApplicationContext && ((ServletWebServerApplicationContext) this.applicationContext).getWebServer()) != null)
  {
    createChildManagementContext();
  }
  else
  {
    logger.warn(("Could not start management web server on " + "different port (management endpoints are still available " + "through JMX)"));
  }
}
Hole 4:
[]: if (managementPort == ManagementServerPort.SAME)
{
  if (environment.getProperty("management.ssl.enabled", Boolean.class, false))
  {
    throw new IllegalStateException("Management-specific SSL cannot be configured as the management " + "server is not listening on a separate port");
  }
  if (environment instanceof ConfigurableEnvironment)
  {
    addLocalManagementPortPropertyAlias(((ConfigurableEnvironment) environment));
  }
}

