Merge Instance for method (Ident "TomcatEmbeddedServletContainerFactory",Ident "prepareContext",[RefType (ClassRefType (ClassType [(Ident "Host",[])])),RefType (ArrayType (RefType (ClassRefType (ClassType [(Ident "ServletContextInitializer",[])]))))])
protected void prepareContext (Host host, ServletContextInitializer[] initializers)
{
  File docBase = getValidDocumentRoot();
  docBase = docBase != null ? docBase : createTempDir("tomcat-docbase");
  TomcatEmbeddedContext context = new TomcatEmbeddedContext();
  context.setName(getContextPath());
  <?HOLE?>
  context.setPath(getContextPath());
  context.setDocBase(docBase.getAbsolutePath());
  context.addLifecycleListener(new FixContextListener());
  context.setParentClassLoader((this.resourceLoader != null ? this.resourceLoader.getClassLoader() : ClassUtils.getDefaultClassLoader()));
  <?HOLE?>
  SkipPatternJarScanner.apply(context, this.tldSkip);
  WebappLoader loader = new WebappLoader(context.getParentClassLoader());
  loader.setLoaderClass(TomcatEmbeddedWebappClassLoader.class.getName());
  loader.setDelegate(true);
  context.setLoader(loader);
  if (isRegisterDefaultServlet())
  {
    addDefaultServlet(context);
  }
  <?HOLE?>
  ServletContextInitializer[] initializersToUse = mergeInitializers(initializers);
  configureContext(context, initializersToUse);
  host.addChild(context);
  postProcessContext(context);
}
Edit Base:
Hole 1:
[]: <SKIP>
Hole 2:
[]: <SKIP>
Hole 3:
[SCond]: if (isRegisterJspServlet() && ClassUtils.isPresent(getJspServletClassName(), getClass().getClassLoader()))
{
  addJspServlet(context);
  addJasperInitializer(context);
  context.addLifecycleListener(new StoreMergedWebXmlListener());
}

Edit A:
Hole 1:
[]: context.setDisplayName(getDisplayName());
Hole 2:
[]: <SKIP>
Hole 3:
[SCond]: if (shouldRegisterJspServlet())
{
  addJspServlet(context);
  addJasperInitializer(context);
  context.addLifecycleListener(new StoreMergedWebXmlListener());
}

Edit B:
Hole 1:
[]: <SKIP>
Hole 2:
[]: try
{
  context.setUseRelativeRedirects(false);
}
catch (NoSuchMethodError ex)
{
}
Hole 3:
[]: if (isRegisterJspServlet() && ClassUtils.isPresent(getJspServletClassName(), getClass().getClassLoader()))
{
  addJspServlet(context);
  addJasperInitializer(context);
  context.addLifecycleListener(new StoreMergedWebXmlListener());
}

Edit M:
Hole 1:
[]: context.setDisplayName(getDisplayName());
Hole 2:
[]: try
{
  context.setUseRelativeRedirects(false);
}
catch (NoSuchMethodError ex)
{
}
Hole 3:
[]: if (shouldRegisterJspServlet())
{
  addJspServlet(context);
  addJasperInitializer(context);
  context.addLifecycleListener(new StoreMergedWebXmlListener());
}

