Merge Instance for method (Ident "LiquibaseEndpointTests",Ident "invokeWithCustomSchema",[])
@Test
 public void invokeWithCustomSchema () throws Exception
{
  <?HOLE?>
  this.context = new AnnotationConfigApplicationContext();
  <?HOLE?>
  <?HOLE?>
  this.context.refresh();
  assertThat(getEndpointBean().invoke()).hasSize(1);
}
Edit Base:
Hole 1:
[]: <SKIP>
Hole 2:
[]: EnvironmentTestUtils.addEnvironment(this.context, "liquibase.default-schema=CUSTOMSCHEMA", "spring.datasource.generate-unique-name=true", "spring.datasource.schema=classpath:/db/create-custom-schema.sql");
Hole 3:
[]: this.context.register(Config.class);

Edit A:
Hole 1:
[]: <SKIP>
Hole 2:
[]: TestPropertyValues.of("liquibase.default-schema=CUSTOMSCHEMA", "spring.datasource.generate-unique-name=true", "spring.datasource.schema=classpath:/db/create-custom-schema.sql").applyTo(this.context);
Hole 3:
[]: this.context.register(Config.class);

Edit B:
Hole 1:
[]: this.context.close();
Hole 2:
[]: EnvironmentTestUtils.addEnvironment(this.context, "liquibase.default-schema=CUSTOMSCHEMA", "spring.datasource.generate-unique-name=true", "spring.datasource.schema=classpath:/db/create-custom-schema.sql");
Hole 3:
[]: this.context.register(CustomSchemaConfig.class);

Edit M:
Hole 1:
[]: this.context.close();
Hole 2:
[]: TestPropertyValues.of("liquibase.default-schema=CUSTOMSCHEMA", "spring.datasource.generate-unique-name=true", "spring.datasource.schema=classpath:/db/create-custom-schema.sql").applyTo(this.context);
Hole 3:
[]: this.context.register(CustomSchemaConfig.class);

