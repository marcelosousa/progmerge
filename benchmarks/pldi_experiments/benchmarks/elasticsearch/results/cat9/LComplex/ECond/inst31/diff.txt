Merge Instance for method (Ident "AExpression",Ident "cast",[RefType (ClassRefType (ClassType [(Ident "Variables",[])]))])
AExpression cast (Variables variables)
{
  final Cast cast = AnalyzerCaster.getLegalCast(location, actual, expected, explicit, internal);
  if (cast == null)
  {
    if ((constant == null || this) instanceof EConstant)
    {
      return this;
    }
    else
    {
      <?HOLE?>
      econstant.analyze(variables);
      if (!expected.equals(econstant.actual))
      {
        <?HOLE?>
      }
      return econstant;
    }
  }
  else
  {
    if (constant == null)
    {
      <?HOLE?>
      ecast.statement = statement;
      ecast.actual = expected;
      ecast.isNull = isNull;
      return ecast;
    }
    else
    {
      if (expected.sort.constant)
      {
        constant = AnalyzerCaster.constCast(location, constant, cast);
        <?HOLE?>
        econstant.analyze(variables);
        if (!expected.equals(econstant.actual))
        {
          <?HOLE?>
        }
        return econstant;
      }
      else
        if (this instanceof EConstant)
        {
          <?HOLE?>
          ecast.actual = expected;
          return ecast;
        }
        else
        {
          <?HOLE?>
          econstant.analyze(variables);
          if (!actual.equals(econstant.actual))
          {
            <?HOLE?>
          }
          <?HOLE?>
          ecast.actual = expected;
          return ecast;
        }
    }
  }
}
Edit Base:
Hole 1:
[SCond,SCond]: final EConstant econstant = new EConstant(line, offset, location, constant);
Hole 2:
[SCond,SCond,SCond]: throw new IllegalStateException(error("Illegal tree structure."));
Hole 3:
[SCond,SCond]: final ECast ecast = new ECast(line, offset, location, this, cast);
Hole 4:
[SCond,SCond,SCond]: final EConstant econstant = new EConstant(line, offset, location, constant);
Hole 5:
[SCond,SCond,SCond,SCond]: throw new IllegalStateException(error("Illegal tree structure."));
Hole 6:
[SCond,SCond,SCond,SCond]: final ECast ecast = new ECast(line, offset, location, this, cast);
Hole 7:
[SCond,SCond,SCond,SCond]: final EConstant econstant = new EConstant(line, offset, location, constant);
Hole 8:
[SCond,SCond,SCond,SCond,SCond]: throw new IllegalStateException(error("Illegal tree structure."));
Hole 9:
[SCond,SCond,SCond,SCond]: final ECast ecast = new ECast(line, offset, location, econstant, cast);

Edit A:
Hole 1:
[SCond,SCond]: EConstant econstant = new EConstant(line, offset, location, constant);
Hole 2:
[SCond,SCond,SCond]: throw new IllegalStateException(error("Illegal tree structure."));
Hole 3:
[SCond,SCond]: ECast ecast = new ECast(line, offset, location, this, cast);
Hole 4:
[SCond,SCond,SCond]: EConstant econstant = new EConstant(line, offset, location, constant);
Hole 5:
[SCond,SCond,SCond,SCond]: throw new IllegalStateException(error("Illegal tree structure."));
Hole 6:
[SCond,SCond,SCond,SCond]: ECast ecast = new ECast(line, offset, location, this, cast);
Hole 7:
[SCond,SCond,SCond,SCond]: EConstant econstant = new EConstant(line, offset, location, constant);
Hole 8:
[SCond,SCond,SCond,SCond,SCond]: throw new IllegalStateException(error("Illegal tree structure."));
Hole 9:
[SCond,SCond,SCond,SCond]: ECast ecast = new ECast(line, offset, location, econstant, cast);

Edit B:
Hole 1:
[SCond,SCond]: final EConstant econstant = new EConstant(location, constant);
Hole 2:
[SCond,SCond,SCond]: throw createError(new IllegalStateException("Illegal tree structure."));
Hole 3:
[SCond,SCond]: final ECast ecast = new ECast(location, this, cast);
Hole 4:
[SCond,SCond,SCond]: final EConstant econstant = new EConstant(location, constant);
Hole 5:
[SCond,SCond,SCond,SCond]: throw createError(new IllegalStateException("Illegal tree structure."));
Hole 6:
[SCond,SCond,SCond,SCond]: final ECast ecast = new ECast(location, this, cast);
Hole 7:
[SCond,SCond,SCond,SCond]: final EConstant econstant = new EConstant(location, constant);
Hole 8:
[SCond,SCond,SCond,SCond,SCond]: throw createError(new IllegalStateException("Illegal tree structure."));
Hole 9:
[SCond,SCond,SCond,SCond]: final ECast ecast = new ECast(location, econstant, cast);

Edit M:
Hole 1:
[SCond,SCond]: EConstant econstant = new EConstant(location, constant);
Hole 2:
[SCond,SCond,SCond]: throw createError(new IllegalStateException("Illegal tree structure."));
Hole 3:
[SCond,SCond]: ECast ecast = new ECast(location, this, cast);
Hole 4:
[SCond,SCond,SCond]: EConstant econstant = new EConstant(location, constant);
Hole 5:
[SCond,SCond,SCond,SCond]: throw createError(new IllegalStateException("Illegal tree structure."));
Hole 6:
[SCond,SCond,SCond,SCond]: ECast ecast = new ECast(location, this, cast);
Hole 7:
[SCond,SCond,SCond,SCond]: EConstant econstant = new EConstant(location, constant);
Hole 8:
[SCond,SCond,SCond,SCond,SCond]: throw createError(new IllegalStateException("Illegal tree structure."));
Hole 9:
[SCond,SCond,SCond,SCond]: ECast ecast = new ECast(location, econstant, cast);

