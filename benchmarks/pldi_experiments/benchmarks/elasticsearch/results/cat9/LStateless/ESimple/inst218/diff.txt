Merge Instance for method (Ident "CommonGramsTokenFilterFactoryTests",Ident "testCommonGramsAnalysis",[])
@Test
 public void testCommonGramsAnalysis () throws IOException
{
  <?HOLE?>
  <?HOLE?>
  {
    AnalysisService analysisService = AnalysisTestsHelper.createAnalysisServiceFromSettings(settings);
    Analyzer analyzer = analysisService.analyzer("commongramsAnalyzer").analyzer();
    String source = "the quick brown is a fox or not";
    String[] expected = new String[] {
                                       "the",
                                       "quick",
                                       "quick_brown",
                                       "brown",
                                       "brown_is",
                                       "is",
                                       "a",
                                       "a_fox",
                                       "fox",
                                       "fox_or",
                                       "or",
                                       "not",
                                     };
    assertTokenStreamContents(analyzer.tokenStream("test", source), expected);
  }
  {
    AnalysisService analysisService = AnalysisTestsHelper.createAnalysisServiceFromSettings(settings);
    Analyzer analyzer = analysisService.analyzer("commongramsAnalyzer_file").analyzer();
    String source = "the quick brown is a fox or not";
    String[] expected = new String[] {
                                       "the",
                                       "quick",
                                       "quick_brown",
                                       "brown",
                                       "brown_is",
                                       "is",
                                       "a",
                                       "a_fox",
                                       "fox",
                                       "fox_or",
                                       "or",
                                       "not",
                                     };
    assertTokenStreamContents(analyzer.tokenStream("test", source), expected);
  }
}
Edit Base:
Hole 1:
[]: Settings settings = Settings.settingsBuilder().loadFromClasspath("org/elasticsearch/index/analysis/commongrams/commongrams.json").put("path.home", createTempDir().toString()).build();
Hole 2:
[]: <SKIP>

Edit A:
Hole 1:
[]: Settings settings = Settings.settingsBuilder().loadFromClasspath("org/elasticsearch/index/analysis/commongrams/commongrams.json").put("path.home", createHome()).build();
Hole 2:
[]: <SKIP>

Edit B:
Hole 1:
[]: String json = "/org/elasticsearch/index/analysis/commongrams/commongrams.json";
Hole 2:
[]: Settings settings = Settings.settingsBuilder().loadFromStream(json, getClass().getResourceAsStream(json)).put("path.home", createTempDir().toString()).build();

Edit M:
Hole 1:
[]: String json = "/org/elasticsearch/index/analysis/commongrams/commongrams.json";
Hole 2:
[]: Settings settings = Settings.settingsBuilder().loadFromStream(json, getClass().getResourceAsStream(json)).put("path.home", createHome()).build();

