Merge Instance for method (Ident "HunspellServiceIT",Ident "testDicWithTwoAffs",[])
public void testDicWithTwoAffs () throws Exception
{
  <?HOLE?>
  Dictionary dictionary = null;
  try
  {
    internalCluster().startNode(settings);
    dictionary = internalCluster().getInstance(HunspellService.class).getDictionary("en_US");
    fail("Multiple affix files didn't throw an error");
  }
  catch (Throwable t)
  {
    assertNull(dictionary);
    assertThat(ExceptionsHelper.unwrap(t, ElasticsearchException.class).toString(), Matchers.containsString("Too many affix files"));
  }
}
Edit Base:
Hole 1:
[]: Settings settings = Settings.settingsBuilder().put("path.conf", getDataPath("/indices/analyze/two_aff_conf_dir")).put(HUNSPELL_LAZY_LOAD, randomBoolean()).build();

Edit A:
Hole 1:
[]: Settings settings = Settings.settingsBuilder().put("path.conf", getDataPath("/indices/analyze/two_aff_conf_dir")).put(HUNSPELL_LAZY_LOAD.getKey(), randomBoolean()).build();

Edit B:
Hole 1:
[]: Settings settings = Settings.settingsBuilder().put(Environment.PATH_CONF_SETTING.getKey(), getDataPath("/indices/analyze/two_aff_conf_dir")).put(HUNSPELL_LAZY_LOAD, randomBoolean()).build();

Edit M:
Hole 1:
[]: Settings settings = Settings.settingsBuilder().put(Environment.PATH_CONF_SETTING.getKey(), getDataPath("/indices/analyze/two_aff_conf_dir")).put(HUNSPELL_LAZY_LOAD.getKey(), randomBoolean()).build();

