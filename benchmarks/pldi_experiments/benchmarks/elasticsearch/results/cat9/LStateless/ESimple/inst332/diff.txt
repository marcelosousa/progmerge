Merge Instance for method (Ident "UpdateMappingTests",Ident "testTimestampParsing",[])
@Test
 public void testTimestampParsing () throws IOException
{
  IndexService indexService = createIndex("test", Settings.settingsBuilder().build());
  XContentBuilder indexMapping = XContentFactory.jsonBuilder();
  boolean enabled = randomBoolean();
  indexMapping.startObject().startObject("type").startObject("_timestamp").field("enabled", enabled).field("store", true).startObject("fielddata").field("format", "doc_values").endObject().endObject().endObject().endObject();
  <?HOLE?>
  assertThat(documentMapper.timestampFieldMapper().enabled(), equalTo(enabled));
  assertTrue(documentMapper.timestampFieldMapper().fieldType().stored());
  <?HOLE?>
  <?HOLE?>
  assertThat(documentMapper.timestampFieldMapper().enabled(), equalTo(enabled));
  <?HOLE?>
  assertTrue(documentMapper.timestampFieldMapper().fieldType().stored());
}
Edit Base:
Hole 1:
[]: DocumentMapper documentMapper = indexService.mapperService().parse("type", new CompressedString(indexMapping.string()), true);
Hole 2:
[]: assertTrue(documentMapper.timestampFieldMapper().hasDocValues());
Hole 3:
[]: documentMapper = indexService.mapperService().parse("type", new CompressedString(documentMapper.mappingSource().string()), true);
Hole 4:
[]: assertTrue(documentMapper.timestampFieldMapper().hasDocValues());

Edit A:
Hole 1:
[]: DocumentMapper documentMapper = indexService.mapperService().parse("type", new CompressedString(indexMapping.string()), true);
Hole 2:
[]: assertTrue(documentMapper.timestampFieldMapper().fieldType().hasDocValues());
Hole 3:
[]: documentMapper = indexService.mapperService().parse("type", new CompressedString(documentMapper.mappingSource().string()), true);
Hole 4:
[]: assertTrue(documentMapper.timestampFieldMapper().fieldType().hasDocValues());

Edit B:
Hole 1:
[]: DocumentMapper documentMapper = indexService.mapperService().parse("type", new CompressedXContent(indexMapping.string()), true);
Hole 2:
[]: assertTrue(documentMapper.timestampFieldMapper().hasDocValues());
Hole 3:
[]: documentMapper = indexService.mapperService().parse("type", new CompressedXContent(documentMapper.mappingSource().string()), true);
Hole 4:
[]: assertTrue(documentMapper.timestampFieldMapper().hasDocValues());

Edit M:
Hole 1:
[]: DocumentMapper documentMapper = indexService.mapperService().parse("type", new CompressedXContent(indexMapping.string()), true);
Hole 2:
[]: assertTrue(documentMapper.timestampFieldMapper().fieldType().hasDocValues());
Hole 3:
[]: documentMapper = indexService.mapperService().parse("type", new CompressedXContent(documentMapper.mappingSource().string()), true);
Hole 4:
[]: assertTrue(documentMapper.timestampFieldMapper().fieldType().hasDocValues());

