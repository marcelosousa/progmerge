Merge Instance for method (Ident "TargetActionTest",Ident "invokesOnBitmapFailedIfTargetIsNotNullWithErrorResourceId",[])
@Test
 public void invokesOnBitmapFailedIfTargetIsNotNullWithErrorResourceId () throws Exception
{
  Drawable errorDrawable = mock(Drawable.class);
  Target target = mockTarget();
  Context context = mock(Context.class);
  <?HOLE?>
  Resources res = mock(Resources.class);
  <?HOLE?>
  when(context.getResources()).thenReturn(res);
  when(res.getDrawable(RESOURCE_ID_1)).thenReturn(errorDrawable);
  request.error();
  verify(target).onBitmapFailed(errorDrawable);
}
Edit Base:
Hole 1:
[]: Picasso picasso = new Picasso(context, mock(Dispatcher.class), Cache.NONE, null, IDENTITY, null, mock(Stats.class), false, false);
Hole 2:
[]: TargetAction request = new TargetAction(picasso, target, null, false, RESOURCE_ID_1, null, URI_KEY_1, null);

Edit A:
Hole 1:
[]: Picasso picasso = new Picasso(context, mock(Dispatcher.class), Cache.NONE, null, IDENTITY, null, mock(Stats.class), false, false);
Hole 2:
[]: TargetAction request = new TargetAction(picasso, target, null, 0, RESOURCE_ID_1, null, URI_KEY_1, null);

Edit B:
Hole 1:
[]: Picasso picasso = new Picasso(context, mock(Dispatcher.class), Cache.NONE, null, IDENTITY, null, mock(Stats.class), ARGB_8888, false, false);
Hole 2:
[]: TargetAction request = new TargetAction(picasso, target, null, false, RESOURCE_ID_1, null, URI_KEY_1, null);

Edit M:
Hole 1:
[]: Picasso picasso = new Picasso(context, mock(Dispatcher.class), Cache.NONE, null, IDENTITY, null, mock(Stats.class), ARGB_8888, false, false);
Hole 2:
[]: TargetAction request = new TargetAction(picasso, target, null, 0, RESOURCE_ID_1, null, URI_KEY_1, null);

