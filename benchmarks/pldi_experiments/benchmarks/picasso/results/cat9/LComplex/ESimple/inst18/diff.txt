Merge Instance for method (Ident "BitmapHunter",Ident "run",[])
@Override
 public void run ()
{
  <?HOLE?>
}
Edit Base:
Hole 1:
[]: try
{
  Thread.currentThread().setName((Utils.THREAD_PREFIX + data.getName()));
  result = hunt();
  if (result == null)
  {
    dispatcher.dispatchFailed(this);
  }
  else
  {
    dispatcher.dispatchComplete(this);
  }
}
catch (IOException e)
{
  exception = e;
  dispatcher.dispatchRetry(this);
}
finally {
          Thread.currentThread().setName(Utils.THREAD_IDLE_NAME);
        }

Edit A:
Hole 1:
[]: try
{
  Thread.currentThread().setName((Utils.THREAD_PREFIX + data.getName()));
  result = hunt();
  if (result == null)
  {
    dispatcher.dispatchFailed(this);
  }
  else
  {
    dispatcher.dispatchComplete(this);
  }
}
catch (IOException e)
{
  exception = e;
  dispatcher.dispatchRetry(this);
}
catch (Exception e)
{
  exception = e;
  dispatcher.dispatchFailed(this);
}
finally {
          Thread.currentThread().setName(Utils.THREAD_IDLE_NAME);
        }

Edit B:
Hole 1:
[]: try
{
  Thread.currentThread().setName((Utils.THREAD_PREFIX + data.getName()));
  result = hunt();
  if (result == null)
  {
    dispatcher.dispatchFailed(this);
  }
  else
  {
    dispatcher.dispatchComplete(this);
  }
}
catch (OutOfMemoryError e)
{
  result = null;
  dispatcher.dispatchFailed(this);
  throw e;
}
catch (IOException e)
{
  exception = e;
  dispatcher.dispatchRetry(this);
}
finally {
          Thread.currentThread().setName(Utils.THREAD_IDLE_NAME);
        }

Edit M:
Hole 1:
[]: try
{
  Thread.currentThread().setName((Utils.THREAD_PREFIX + data.getName()));
  result = hunt();
  if (result == null)
  {
    dispatcher.dispatchFailed(this);
  }
  else
  {
    dispatcher.dispatchComplete(this);
  }
}
catch (OutOfMemoryError e)
{
  result = null;
  dispatcher.dispatchFailed(this);
  throw e;
}
catch (IOException e)
{
  exception = e;
  dispatcher.dispatchRetry(this);
}
catch (Exception e)
{
  exception = e;
  dispatcher.dispatchFailed(this);
}
finally {
          Thread.currentThread().setName(Utils.THREAD_IDLE_NAME);
        }

