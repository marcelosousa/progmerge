Merge Instance for method (Ident "TermsQueryBuilder",Ident "doXContent",[RefType (ClassRefType (ClassType [(Ident "XContentBuilder",[])])),RefType (ClassRefType (ClassType [(Ident "Params",[])]))])
@Override
 public void doXContent (XContentBuilder builder, Params params) throws IOException
{
  <?HOLE?>
  <?HOLE?>
  if (execution != null)
  {
    builder.field("execution", execution);
  }
  <?HOLE?>
  if (queryName != null)
  {
    builder.field("_name", queryName);
  }
  builder.endObject();
}
Edit Base:
Hole 1:
[]: builder.startObject(TermsQueryParser.NAME);
Hole 2:
[]: builder.field(name, values);
Hole 3:
[]: <SKIP>

Edit A:
Hole 1:
[]: builder.startObject(NAME);
Hole 2:
[]: if (values == null)
{
  builder.startObject(name);
  if (lookupIndex != null)
  {
    builder.field("index", lookupIndex);
  }
  builder.field("type", lookupType);
  builder.field("id", lookupId);
  if (lookupRouting != null)
  {
    builder.field("routing", lookupRouting);
  }
  if (lookupCache != null)
  {
    builder.field("cache", lookupCache);
  }
  builder.field("path", lookupPath);
  builder.endObject();
}
else
{
  builder.field(name, values);
}
Hole 3:
[]: <SKIP>

Edit B:
Hole 1:
[]: builder.startObject(TermsQueryParser.NAME);
Hole 2:
[]: builder.field(name, values);
Hole 3:
[]: if (boost != -1)
{
  builder.field("boost", boost);
}

Edit M:
Hole 1:
[]: builder.startObject(NAME);
Hole 2:
[]: if (values == null)
{
  builder.startObject(name);
  if (lookupIndex != null)
  {
    builder.field("index", lookupIndex);
  }
  builder.field("type", lookupType);
  builder.field("id", lookupId);
  if (lookupRouting != null)
  {
    builder.field("routing", lookupRouting);
  }
  if (lookupCache != null)
  {
    builder.field("cache", lookupCache);
  }
  builder.field("path", lookupPath);
  builder.endObject();
}
else
{
  builder.field(name, values);
}
Hole 3:
[]: if (boost != -1)
{
  builder.field("boost", boost);
}

