Merge Instance for method (Ident "IndexTypeMapperTests",Ident "testCustomSettingsBackcompat",[])
public void testCustomSettingsBackcompat () throws Exception
{
  String mapping = XContentFactory.jsonBuilder().startObject().startObject("type").startObject("_index").field("enabled", true).field("store", "yes").endObject().endObject().endObject().string();
  <?HOLE?>
  <?HOLE?>
  IndexFieldMapper indexMapper = docMapper.rootMapper(IndexFieldMapper.class);
  assertThat(indexMapper.enabled(), equalTo(true));
  assertThat(indexMapper.fieldType().stored(), equalTo(true));
  <?HOLE?>
  assertThat(doc.rootDoc().get("_index"), equalTo("test"));
  assertThat(doc.rootDoc().get("field"), equalTo("value"));
}
Edit Base:
Hole 1:
[]: Settings indexSettings = Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.V_1_4_2.id).build();
Hole 2:
[]: DocumentMapper docMapper = createIndex("test", indexSettings).mapperService().documentMapperParser().parse(mapping);
Hole 3:
[]: ParsedDocument doc = docMapper.parse("type", "1", XContentFactory.jsonBuilder().startObject().field("field", "value").endObject().bytes());

Edit A:
Hole 1:
[]: DocumentMapper docMapper = createIndex("test", bwcSettings).mapperService().documentMapperParser().parse(mapping);
Hole 2:
[]: <SKIP>
Hole 3:
[]: ParsedDocument doc = docMapper.parse("type", "1", XContentFactory.jsonBuilder().startObject().field("field", "value").endObject().bytes());

Edit B:
Hole 1:
[]: Settings indexSettings = Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED, Version.V_1_4_2.id).build();
Hole 2:
[]: DocumentMapper docMapper = createIndex("test", indexSettings).mapperService().documentMapperParser().parse(mapping);
Hole 3:
[]: ParsedDocument doc = docMapper.parse("test", "type", "1", XContentFactory.jsonBuilder().startObject().field("field", "value").endObject().bytes());

Edit M:
Hole 1:
[]: DocumentMapper docMapper = createIndex("test", bwcSettings).mapperService().documentMapperParser().parse(mapping);
Hole 2:
[]: <SKIP>
Hole 3:
[]: ParsedDocument doc = docMapper.parse("test", "type", "1", XContentFactory.jsonBuilder().startObject().field("field", "value").endObject().bytes());

