Merge Instance for method (Ident "JarFileTests",Ident "getNestedJarFile",[])
@Test
 public void getNestedJarFile () throws Exception
{
  JarFile nestedJarFile = this.jarFile.getNestedJarFile(this.jarFile.getEntry("nested.jar"));
  Enumeration<java.util.jar.JarEntry> entries = nestedJarFile.entries();
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  InputStream inputStream = nestedJarFile.getInputStream(nestedJarFile.getEntry("3.dat"));
  <?HOLE?>
  <?HOLE?>
  URL url = nestedJarFile.getUrl();
  <?HOLE?>
  JarURLConnection conn = (JarURLConnection) url.openConnection();
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
}
Edit Base:
Hole 1:
[]: assertThat(entries.nextElement().getName(), equalTo("META-INF/"));
Hole 2:
[]: assertThat(entries.nextElement().getName(), equalTo("META-INF/MANIFEST.MF"));
Hole 3:
[]: assertThat(entries.nextElement().getName(), equalTo("3.dat"));
Hole 4:
[]: assertThat(entries.nextElement().getName(), equalTo("4.dat"));
Hole 5:
[]: assertThat(entries.nextElement().getName(), equalTo("\u00e4.dat"));
Hole 6:
[]: assertThat(entries.hasMoreElements(), equalTo(false));
Hole 7:
[]: assertThat(inputStream.read(), equalTo(3));
Hole 8:
[]: assertThat(inputStream.read(), equalTo((-1)));
Hole 9:
[]: assertThat(url.toString(), equalTo(("jar:" + this.rootJarFile.toURI() + "!/nested.jar!/")));
Hole 10:
[]: assertThat(conn.getJarFile(), sameInstance(nestedJarFile));
Hole 11:
[]: assertThat(conn.getJarFileURL().toString(), equalTo(("jar:" + this.rootJarFile.toURI() + "!/nested.jar")));
Hole 12:
[]: <SKIP>
Hole 13:
[]: <SKIP>
Hole 14:
[]: <SKIP>
Hole 15:
[]: <SKIP>

Edit A:
Hole 1:
[]: assertThat(entries.nextElement().getName()).isEqualTo("META-INF/");
Hole 2:
[]: assertThat(entries.nextElement().getName()).isEqualTo("META-INF/MANIFEST.MF");
Hole 3:
[]: assertThat(entries.nextElement().getName()).isEqualTo("3.dat");
Hole 4:
[]: assertThat(entries.nextElement().getName()).isEqualTo("4.dat");
Hole 5:
[]: assertThat(entries.nextElement().getName()).isEqualTo("\u00e4.dat");
Hole 6:
[]: assertThat(entries.hasMoreElements()).isFalse();
Hole 7:
[]: assertThat(inputStream.read()).isEqualTo(3);
Hole 8:
[]: assertThat(inputStream.read()).isEqualTo((-1));
Hole 9:
[]: assertThat(url.toString()).isEqualTo(("jar:" + this.rootJarFile.toURI() + "!/nested.jar!/"));
Hole 10:
[]: assertThat(conn.getJarFile()).isSameAs(nestedJarFile);
Hole 11:
[]: assertThat(conn.getJarFileURL().toString()).isEqualTo(("jar:" + this.rootJarFile.toURI() + "!/nested.jar"));
Hole 12:
[]: <SKIP>
Hole 13:
[]: <SKIP>
Hole 14:
[]: <SKIP>
Hole 15:
[]: <SKIP>

Edit B:
Hole 1:
[]: assertThat(entries.nextElement().getName(), equalTo("META-INF/"));
Hole 2:
[]: assertThat(entries.nextElement().getName(), equalTo("META-INF/MANIFEST.MF"));
Hole 3:
[]: assertThat(entries.nextElement().getName(), equalTo("3.dat"));
Hole 4:
[]: assertThat(entries.nextElement().getName(), equalTo("4.dat"));
Hole 5:
[]: assertThat(entries.nextElement().getName(), equalTo("\u00e4.dat"));
Hole 6:
[]: assertThat(entries.hasMoreElements(), equalTo(false));
Hole 7:
[]: assertThat(inputStream.read(), equalTo(3));
Hole 8:
[]: assertThat(inputStream.read(), equalTo((-1)));
Hole 9:
[]: assertThat(url.toString(), equalTo(("jar:" + this.rootJarFile.toURI() + "!/nested.jar!/")));
Hole 10:
[]: assertThat(conn.getJarFile(), sameInstance(nestedJarFile));
Hole 11:
[]: assertThat(conn.getJarFileURL().toString(), equalTo(("jar:" + this.rootJarFile.toURI() + "!/nested.jar")));
Hole 12:
[]: assertThat(conn.getPermission(), is(instanceOf(FilePermission.class)));
Hole 13:
[]: FilePermission permission = (FilePermission) conn.getPermission();
Hole 14:
[]: assertThat(permission.getActions(), equalTo("read"));
Hole 15:
[]: assertThat(permission.getName(), equalTo(this.rootJarFile.getPath()));

Edit M:
Hole 1:
[]: assertThat(entries.nextElement().getName()).isEqualTo("META-INF/");
Hole 2:
[]: assertThat(entries.nextElement().getName()).isEqualTo("META-INF/MANIFEST.MF");
Hole 3:
[]: assertThat(entries.nextElement().getName()).isEqualTo("3.dat");
Hole 4:
[]: assertThat(entries.nextElement().getName()).isEqualTo("4.dat");
Hole 5:
[]: assertThat(entries.nextElement().getName()).isEqualTo("\u00e4.dat");
Hole 6:
[]: assertThat(entries.hasMoreElements()).isFalse();
Hole 7:
[]: assertThat(inputStream.read()).isEqualTo(3);
Hole 8:
[]: assertThat(inputStream.read()).isEqualTo((-1));
Hole 9:
[]: assertThat(url.toString()).isEqualTo(("jar:" + this.rootJarFile.toURI() + "!/nested.jar!/"));
Hole 10:
[]: assertThat(conn.getJarFile()).isSameAs(nestedJarFile);
Hole 11:
[]: assertThat(conn.getJarFileURL().toString()).isEqualTo(("jar:" + this.rootJarFile.toURI() + "!/nested.jar"));
Hole 12:
[]: assertThat(conn.getPermission()).isInstanceOf(FilePermission.class);
Hole 13:
[]: FilePermission permission = (FilePermission) conn.getPermission();
Hole 14:
[]: assertThat(permission.getActions()).isEqualTo("read");
Hole 15:
[]: assertThat(permission.getName()).isEqualTo(this.rootJarFile.getPath());

