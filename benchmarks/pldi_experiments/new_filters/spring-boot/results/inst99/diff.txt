Merge Instance for method (Ident "LoggingApplicationListenerTests",Ident "applicationFailedEventCleansUpLoggingSystem",[])
@Test
 public void applicationFailedEventCleansUpLoggingSystem ()
{
  System.setProperty(LoggingSystem.SYSTEM_PROPERTY, TestCleanupLoggingSystem.class.getName());
  <?HOLE?>
  TestCleanupLoggingSystem loggingSystem = (TestCleanupLoggingSystem) ReflectionTestUtils.getField(this.initializer, "loggingSystem");
  assertThat(loggingSystem.cleanedUp).isFalse();
  <?HOLE?>
  assertThat(loggingSystem.cleanedUp).isTrue();
}
Edit Base:
Hole 1:
[]: this.initializer.onApplicationEvent(new ApplicationStartedEvent(this.springApplication, new String[0]));
Hole 2:
[]: this.initializer.onApplicationEvent(new ApplicationFailedEvent(this.springApplication, new String[0], new GenericApplicationContext(), new Exception()));

Edit A:
Hole 1:
[]: this.initializer.onApplicationEvent(new ApplicationStartingEvent(this.springApplication, new String[0]));
Hole 2:
[]: this.initializer.onApplicationEvent(new ApplicationFailedEvent(this.springApplication, new String[0], new GenericApplicationContext(), new Exception()));

Edit B:
Hole 1:
[]: multicastEvent(new ApplicationStartedEvent(this.springApplication, new String[0]));
Hole 2:
[]: multicastEvent(new ApplicationFailedEvent(this.springApplication, new String[0], new GenericApplicationContext(), new Exception()));

Edit M:
Hole 1:
[]: multicastEvent(new ApplicationStartingEvent(this.springApplication, new String[0]));
Hole 2:
[]: multicastEvent(new ApplicationFailedEvent(this.springApplication, new String[0], new GenericApplicationContext(), new Exception()));

