Merge Instance for method (Ident "ControlFlowAnalyzer",Ident "process",[])
public void process ()
{
  <?HOLE?>
  <?HOLE?>
  for (Map.Entry<JetDeclaration, ConstructorDescriptor> entry : this.context.getConstructors().entrySet()) {
                                                                                                             JetDeclaration declaration = entry.getKey();
                                                                                                             assert declaration instanceof JetConstructor;
                                                                                                             JetConstructor constructor = (JetConstructor) declaration;
                                                                                                             ConstructorDescriptor descriptor = entry.getValue();
                                                                                                             checkFunction(constructor, descriptor, JetStandardClasses.getUnitType());
                                                                                                           }
  for (JetProperty property : context.getProperties().keySet()) {
                                                                  checkProperty(property);
                                                                }
}
Edit Base:
Hole 1:
[]: <SKIP>
Hole 2:
[]: for (Map.Entry<JetNamedFunction, FunctionDescriptorImpl> entry : context.getFunctions().entrySet()) {
                                                                                                      JetNamedFunction function = entry.getKey();
                                                                                                      FunctionDescriptorImpl functionDescriptor = entry.getValue();
                                                                                                      final JetType expectedReturnType = !function.hasBlockBody() && !function.hasDeclaredReturnType() ? NO_EXPECTED_TYPE : functionDescriptor.getReturnType();
                                                                                                      checkFunction(function, functionDescriptor, expectedReturnType);
                                                                                                    }

Edit A:
Hole 1:
[]: for (Map.Entry<JetClass, MutableClassDescriptor> entry : context.getClasses().entrySet()) {
                                                                                            JetClass aClass = entry.getKey();
                                                                                            MutableClassDescriptor classDescriptor = entry.getValue();
                                                                                            checkClass(aClass, classDescriptor);
                                                                                          }
Hole 2:
[]: for (Map.Entry<JetNamedFunction, FunctionDescriptorImpl> entry : context.getFunctions().entrySet()) {
                                                                                                      JetNamedFunction function = entry.getKey();
                                                                                                      FunctionDescriptorImpl functionDescriptor = entry.getValue();
                                                                                                      final JetType expectedReturnType = !function.hasBlockBody() && !function.hasDeclaredReturnType() ? NO_EXPECTED_TYPE : functionDescriptor.getReturnType();
                                                                                                      checkFunction(function, functionDescriptor, expectedReturnType);
                                                                                                    }

Edit B:
Hole 1:
[]: for (Map.Entry<JetNamedFunction, FunctionDescriptorImpl> entry : context.getFunctions().entrySet()) {
                                                                                                      JetNamedFunction function = entry.getKey();
                                                                                                      FunctionDescriptorImpl functionDescriptor = entry.getValue();
                                                                                                      if (!context.completeAnalysisNeeded(function))
                                                                                                        continue;
                                                                                                      final JetType expectedReturnType = !function.hasBlockBody() && !function.hasDeclaredReturnType() ? NO_EXPECTED_TYPE : functionDescriptor.getReturnType();
                                                                                                      checkFunction(function, functionDescriptor, expectedReturnType);
                                                                                                    }
Hole 2:
[]: <SKIP>

Edit M:
Hole 1:
[]: for (Map.Entry<JetClass, MutableClassDescriptor> entry : context.getClasses().entrySet()) {
                                                                                            JetClass aClass = entry.getKey();
                                                                                            MutableClassDescriptor classDescriptor = entry.getValue();
                                                                                            checkClass(aClass, classDescriptor);
                                                                                          }
Hole 2:
[]: for (Map.Entry<JetNamedFunction, FunctionDescriptorImpl> entry : context.getFunctions().entrySet()) {
                                                                                                      JetNamedFunction function = entry.getKey();
                                                                                                      FunctionDescriptorImpl functionDescriptor = entry.getValue();
                                                                                                      if (!context.completeAnalysisNeeded(function))
                                                                                                        continue;
                                                                                                      final JetType expectedReturnType = !function.hasBlockBody() && !function.hasDeclaredReturnType() ? NO_EXPECTED_TYPE : functionDescriptor.getReturnType();
                                                                                                      checkFunction(function, functionDescriptor, expectedReturnType);
                                                                                                    }

