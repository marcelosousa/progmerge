Parsing files...
Parsing o...
Parsing a...
Parsing b...
Parsing m...
Merge Instance for method (Ident "BarLineChartBase",Ident "getHighlightByTouchPoint",[PrimType FloatT,PrimType FloatT])
public Highlight getHighlightByTouchPoint (float x, float y)
{
  float[] pts = new float[2];
  pts[0] = x;
  pts[1] = y;
  Matrix tmp = new Matrix();
  mMatrixOffset.invert(tmp);
  tmp.mapPoints(pts);
  mMatrixTouch.invert(tmp);
  tmp.mapPoints(pts);
  mMatrixValueToPx.invert(tmp);
  tmp.mapPoints(pts);
  double xTouchVal = pts[0];
  double yTouchVal = pts[1];
  double base = Math.floor(xTouchVal);
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  int xIndex = (int) base;
  int dataSetIndex = 0;
  if ((this instanceof LineChart || this) instanceof ScatterChart)
  {
    if (xTouchVal - base > 0.5)
    {
      xIndex = (int) base + 1;
    }
  }
  <?HOLE?>
  ArrayList<SelInfo> valsAtIndex = getYValsAtIndex(xIndex);
  dataSetIndex = getClosestDataSetIndex(valsAtIndex, ((float) yTouchVal));
  if (dataSetIndex == -1)
    return null;
  <?HOLE?>
}
Edit Base:
Hole 1:
[]: Log.i(LOG_TAG, ("touchindex x: " + xTouchVal + ", touchindex y: " + yTouchVal));
Hole 2:
[]: if ((this instanceof LineChart || this) instanceof ScatterChart && (xTouchVal < 0 || xTouchVal) > mDeltaX)
  return null;
Hole 3:
[SCond]: if (this instanceof BarChart && ((xTouchVal < 0 || xTouchVal) > mDeltaX) + 1)
  return null;
Hole 4:
[]: <SKIP>
Hole 5:
[]: <SKIP>
Hole 6:
[]: <SKIP>
Hole 7:
[]: <SKIP>
Hole 8:
[]: return new Highlight(xIndex, dataSetIndex);

Edit A:
Hole 1:
[]: double touchOffset = mDeltaX * 2.5e-2;
Hole 2:
[]: Log.i(LOG_TAG, ("touchindex x: " + xTouchVal + ", touchindex y: " + yTouchVal + ", offset: " + touchOffset));
Hole 3:
[SCond]: if ((this instanceof LineChart || this) instanceof ScatterChart && ((xTouchVal < -touchOffset || xTouchVal) > mDeltaX) + touchOffset)
  return null;
Hole 4:
[]: if (this instanceof BarChart && (xTouchVal < 0 || xTouchVal) > mDeltaX)
  return null;
Hole 5:
[]: if (base < 0)
  base = 0;
Hole 6:
[]: if (base >= mDeltaX)
  base = mDeltaX - 1;
Hole 7:
[]: <SKIP>
Hole 8:
[]: return new Highlight(xIndex, (float) yTouchVal, dataSetIndex);

Edit B:
Hole 1:
[]: Log.i(LOG_TAG, ("touchindex x: " + xTouchVal + ", touchindex y: " + yTouchVal));
Hole 2:
[]: if ((this instanceof LineChart || this) instanceof ScatterChart && (xTouchVal < 0 || xTouchVal) > mDeltaX)
  return null;
Hole 3:
[]: if (this instanceof BarChart && ((xTouchVal < 0 || xTouchVal) > mDeltaX) + 1)
  return null;
Hole 4:
[]: <SKIP>
Hole 5:
[]: <SKIP>
Hole 6:
[]: <SKIP>
Hole 7:
[]: if (mDataNotSet)
{
  Log.i(LOG_TAG, "no data set");
  return null;
}
Hole 8:
[]: return new Highlight(xIndex, dataSetIndex);

Edit M:
Hole 1:
[]: double touchOffset = mDeltaX * 2.5e-2;
Hole 2:
[]: Log.i(LOG_TAG, ("touchindex x: " + xTouchVal + ", touchindex y: " + yTouchVal + ", offset: " + touchOffset));
Hole 3:
[]: if ((this instanceof LineChart || this) instanceof ScatterChart && ((xTouchVal < -touchOffset || xTouchVal) > mDeltaX) + touchOffset)
  return null;
Hole 4:
[]: if (this instanceof BarChart && (xTouchVal < 0 || xTouchVal) > mDeltaX)
  return null;
Hole 5:
[]: if (base < 0)
  base = 0;
Hole 6:
[]: if (base >= mDeltaX)
  base = mDeltaX - 1;
Hole 7:
[]: if (mDataNotSet)
{
  Log.i(LOG_TAG, "no data set");
  return null;
}
Hole 8:
[]: return new Highlight(xIndex, (float) yTouchVal, dataSetIndex);


