Merge Instance for method (Ident "LineChartActivity2",Ident "setData",[PrimType IntT,PrimType FloatT])
private void setData (int count, float range)
{
  <?HOLE?>
  for (int i = 0 ; i < count ; i++)
  {
    <?HOLE?>
  }
  ArrayList<Entry> yVals1 = new ArrayList<Entry>();
  for (int i = 0 ; i < count ; i++)
  {
    float mult = range / 2.0F;
    float val = (float) (Math.random() * mult) + 50;
    yVals1.add(new Entry(val, i));
  }
  ArrayList<Entry> yVals2 = new ArrayList<Entry>();
  for (int i = 0 ; i < count ; i++)
  {
    float mult = range;
    float val = (float) (Math.random() * mult) + 450;
    yVals2.add(new Entry(val, i));
  }
  LineDataSet set1, set2;
  if ((mChart.getData() != null && mChart.getData().getDataSetCount()) > 0)
  {
    set1 = (LineDataSet) mChart.getData().getDataSetByIndex(0);
    set2 = (LineDataSet) mChart.getData().getDataSetByIndex(1);
    set1.setYVals(yVals1);
    set2.setYVals(yVals2);
    mChart.getData().setXVals(xVals);
    <?HOLE?>
    mChart.notifyDataSetChanged();
  }
  else
  {
    set1 = new LineDataSet(yVals1, "DataSet 1");
    set1.setAxisDependency(AxisDependency.LEFT);
    set1.setColor(ColorTemplate.getHoloBlue());
    set1.setCircleColor(Color.WHITE);
    set1.setLineWidth(2.0F);
    set1.setCircleRadius(3.0F);
    set1.setFillAlpha(65);
    set1.setFillColor(ColorTemplate.getHoloBlue());
    set1.setHighLightColor(Color.rgb(244, 117, 117));
    set1.setDrawCircleHole(false);
    set2 = new LineDataSet(yVals2, "DataSet 2");
    set2.setAxisDependency(AxisDependency.RIGHT);
    set2.setColor(Color.RED);
    set2.setCircleColor(Color.WHITE);
    set2.setLineWidth(2.0F);
    set2.setCircleRadius(3.0F);
    set2.setFillAlpha(65);
    set2.setFillColor(Color.RED);
    set2.setDrawCircleHole(false);
    set2.setHighLightColor(Color.rgb(244, 117, 117));
    ArrayList<ILineDataSet> dataSets = new ArrayList<ILineDataSet>();
    <?HOLE?>
    dataSets.add(set1);
    <?HOLE?>
    LineData data = new LineData(xVals, dataSets);
    data.setValueTextColor(Color.WHITE);
    data.setValueTextSize(9.0F);
    mChart.setData(data);
  }
}
Edit Base:
Hole 1:
[]: ArrayList<String> xVals = new ArrayList<String>();
Hole 2:
[SLoop]: xVals.add(((i) +""));
Hole 3:
[SCond]: <SKIP>
Hole 4:
[SCond]: dataSets.add(set2);
Hole 5:
[SCond]: <SKIP>

Edit A:
Hole 1:
[]: ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();
Hole 2:
[SLoop]: xVals.add(new XAxisValue(i, (i + "")));
Hole 3:
[SCond]: <SKIP>
Hole 4:
[SCond]: dataSets.add(set2);
Hole 5:
[SCond]: <SKIP>

Edit B:
Hole 1:
[]: ArrayList<String> xVals = new ArrayList<String>();
Hole 2:
[SLoop]: xVals.add(((i) +""));
Hole 3:
[SCond]: mChart.getData().notifyDataChanged();
Hole 4:
[SCond]: <SKIP>
Hole 5:
[SCond]: dataSets.add(set2);

Edit M:
Hole 1:
[]: ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();
Hole 2:
[SLoop]: xVals.add(new XAxisValue(i, (i + "")));
Hole 3:
[SCond]: mChart.getData().notifyDataChanged();
Hole 4:
[SCond]: <SKIP>
Hole 5:
[SCond]: dataSets.add(set2);

