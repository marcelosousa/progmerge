Merge Instance for method (Ident "LineChartActivity1",Ident "setData",[PrimType IntT,PrimType FloatT])
private void setData (int count, float range)
{
  <?HOLE?>
  <?HOLE?>
  ArrayList<Entry> yVals = new ArrayList<Entry>();
  for (int i = 0 ; i < count ; i++)
  {
    float mult = range + 1;
    float val = (float) (Math.random() * mult) + 3;
    yVals.add(new Entry(val, i));
    <?HOLE?>
  }
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
  <?HOLE?>
}
Edit Base:
Hole 1:
[]: ArrayList<String> xVals = new ArrayList<String>();
Hole 2:
[]: for (int i = 0 ; i < count ; i++)
{
  xVals.add(((i) +""));
}
Hole 3:
[SLoop]: <SKIP>
Hole 4:
[]: LineDataSet set1 = new LineDataSet(yVals, "DataSet 1");
Hole 5:
[]: set1.enableDashedLine(10.0F, 5.0F, 0.0F);
Hole 6:
[]: set1.enableDashedHighlightLine(10.0F, 5.0F, 0.0F);
Hole 7:
[]: set1.setColor(Color.BLACK);
Hole 8:
[]: set1.setCircleColor(Color.BLACK);
Hole 9:
[]: set1.setLineWidth(1.0F);
Hole 10:
[]: set1.setCircleRadius(3.0F);
Hole 11:
[]: set1.setDrawCircleHole(false);
Hole 12:
[]: set1.setValueTextSize(9.0F);
Hole 13:
[]: set1.setDrawFilled(true);
Hole 14:
[]: if (Utils.getSDKInt() >= 18)
{
  Drawable drawable = ContextCompat.getDrawable(this, R.drawable.fade_red);
  set1.setFillDrawable(drawable);
}
else
{
  set1.setFillColor(Color.BLACK);
}
Hole 15:
[]: ArrayList<ILineDataSet> dataSets = new ArrayList<ILineDataSet>();
Hole 16:
[]: dataSets.add(set1);
Hole 17:
[]: LineData data = new LineData(xVals, dataSets);
Hole 18:
[]: mChart.setData(data);

Edit A:
Hole 1:
[]: ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();
Hole 2:
[]: <SKIP>
Hole 3:
[SLoop]: xVals.add(new XAxisValue(i, (i + "")));
Hole 4:
[]: LineDataSet set1 = new LineDataSet(yVals, "DataSet 1");
Hole 5:
[]: set1.enableDashedLine(10.0F, 5.0F, 0.0F);
Hole 6:
[]: set1.enableDashedHighlightLine(10.0F, 5.0F, 0.0F);
Hole 7:
[]: set1.setColor(Color.BLACK);
Hole 8:
[]: set1.setCircleColor(Color.BLACK);
Hole 9:
[]: set1.setLineWidth(1.0F);
Hole 10:
[]: set1.setCircleRadius(3.0F);
Hole 11:
[]: set1.setDrawCircleHole(false);
Hole 12:
[]: set1.setValueTextSize(9.0F);
Hole 13:
[]: set1.setDrawFilled(true);
Hole 14:
[]: if (Utils.getSDKInt() >= 18)
{
  Drawable drawable = ContextCompat.getDrawable(this, R.drawable.fade_red);
  set1.setFillDrawable(drawable);
}
else
{
  set1.setFillColor(Color.BLACK);
}
Hole 15:
[]: ArrayList<ILineDataSet> dataSets = new ArrayList<ILineDataSet>();
Hole 16:
[]: dataSets.add(set1);
Hole 17:
[]: LineData data = new LineData(xVals, dataSets);
Hole 18:
[]: mChart.setData(data);

Edit B:
Hole 1:
[]: ArrayList<String> xVals = new ArrayList<String>();
Hole 2:
[]: for (int i = 0 ; i < count ; i++)
{
  xVals.add(((i) +""));
}
Hole 3:
[SLoop]: <SKIP>
Hole 4:
[]: LineDataSet set1;
Hole 5:
[]: if ((mChart.getData() != null && mChart.getData().getDataSetCount()) > 0)
{
  set1 = (LineDataSet) mChart.getData().getDataSetByIndex(0);
  set1.setYVals(yVals);
  mChart.notifyDataSetChanged();
}
else
{
  set1 = new LineDataSet(yVals, "DataSet 1");
  set1.enableDashedLine(10.0F, 5.0F, 0.0F);
  set1.enableDashedHighlightLine(10.0F, 5.0F, 0.0F);
  set1.setColor(Color.BLACK);
  set1.setCircleColor(Color.BLACK);
  set1.setLineWidth(1.0F);
  set1.setCircleRadius(3.0F);
  set1.setDrawCircleHole(false);
  set1.setValueTextSize(9.0F);
  set1.setDrawFilled(true);
  if (Utils.getSDKInt() >= 18)
  {
    Drawable drawable = ContextCompat.getDrawable(this, R.drawable.fade_red);
    set1.setFillDrawable(drawable);
  }
  else
  {
    set1.setFillColor(Color.BLACK);
  }
  ArrayList<ILineDataSet> dataSets = new ArrayList<ILineDataSet>();
  dataSets.add(set1);
  LineData data = new LineData(xVals, dataSets);
  mChart.setData(data);
}
Hole 6:
[]: <SKIP>
Hole 7:
[]: <SKIP>
Hole 8:
[]: <SKIP>
Hole 9:
[]: <SKIP>
Hole 10:
[]: <SKIP>
Hole 11:
[]: <SKIP>
Hole 12:
[]: <SKIP>
Hole 13:
[]: <SKIP>
Hole 14:
[]: <SKIP>
Hole 15:
[]: <SKIP>
Hole 16:
[]: <SKIP>
Hole 17:
[]: <SKIP>
Hole 18:
[]: <SKIP>

Edit M:
Hole 1:
[]: ArrayList<XAxisValue> xVals = new ArrayList<XAxisValue>();
Hole 2:
[]: <SKIP>
Hole 3:
[SLoop]: xVals.add(new XAxisValue(i, (i + "")));
Hole 4:
[]: LineDataSet set1;
Hole 5:
[]: if ((mChart.getData() != null && mChart.getData().getDataSetCount()) > 0)
{
  set1 = (LineDataSet) mChart.getData().getDataSetByIndex(0);
  set1.setYVals(yVals);
  mChart.notifyDataSetChanged();
}
else
{
  set1 = new LineDataSet(yVals, "DataSet 1");
  set1.enableDashedLine(10.0F, 5.0F, 0.0F);
  set1.enableDashedHighlightLine(10.0F, 5.0F, 0.0F);
  set1.setColor(Color.BLACK);
  set1.setCircleColor(Color.BLACK);
  set1.setLineWidth(1.0F);
  set1.setCircleRadius(3.0F);
  set1.setDrawCircleHole(false);
  set1.setValueTextSize(9.0F);
  set1.setDrawFilled(true);
  if (Utils.getSDKInt() >= 18)
  {
    Drawable drawable = ContextCompat.getDrawable(this, R.drawable.fade_red);
    set1.setFillDrawable(drawable);
  }
  else
  {
    set1.setFillColor(Color.BLACK);
  }
  ArrayList<ILineDataSet> dataSets = new ArrayList<ILineDataSet>();
  dataSets.add(set1);
  LineData data = new LineData(xVals, dataSets);
  mChart.setData(data);
}
Hole 6:
[]: <SKIP>
Hole 7:
[]: <SKIP>
Hole 8:
[]: <SKIP>
Hole 9:
[]: <SKIP>
Hole 10:
[]: <SKIP>
Hole 11:
[]: <SKIP>
Hole 12:
[]: <SKIP>
Hole 13:
[]: <SKIP>
Hole 14:
[]: <SKIP>
Hole 15:
[]: <SKIP>
Hole 16:
[]: <SKIP>
Hole 17:
[]: <SKIP>
Hole 18:
[]: <SKIP>

