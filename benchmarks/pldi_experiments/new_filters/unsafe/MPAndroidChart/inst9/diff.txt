Parsing files...
Parsing o...
Parsing a...
Parsing b...
Parsing m...
Merge Instance for method (Ident "ScatterChartActivity",Ident "onCreate",[RefType (ClassRefType (ClassType [(Ident "Bundle",[])]))])
@Override
 protected void onCreate (Bundle savedInstanceState)
{
  super.onCreate(savedInstanceState);
  getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
  setContentView(R.layout.activity_scatterchart);
  tvX = (TextView) findViewById(R.id.tvXMax);
  tvY = (TextView) findViewById(R.id.tvYMax);
  mSeekBarX = (SeekBar) findViewById(R.id.seekBar1);
  mSeekBarX.setOnSeekBarChangeListener(this);
  mSeekBarY = (SeekBar) findViewById(R.id.seekBar2);
  mSeekBarY.setOnSeekBarChangeListener(this);
  mChart = (ScatterChart) findViewById(R.id.chart1);
  mChart.setDescription("");
  <?HOLE?>
  <?HOLE?>
  mChart.setOnChartValueSelectedListener(this);
  mChart.setDrawGridBackground(false);
  mChart.setTouchEnabled(true);
  <?HOLE?>
  mChart.setDragEnabled(true);
  mChart.setScaleEnabled(true);
  mChart.setMaxVisibleValueCount(200);
  mChart.setPinchZoom(true);
  mSeekBarX.setProgress(45);
  mSeekBarY.setProgress(100);
  Legend l = mChart.getLegend();
  l.setPosition(LegendPosition.RIGHT_OF_CHART);
  <?HOLE?>
  YAxis yl = mChart.getAxisLeft();
  <?HOLE?>
  yl.setAxisMinValue(0.0F);
  mChart.getAxisRight().setEnabled(false);
  XAxis xl = mChart.getXAxis();
  <?HOLE?>
  xl.setDrawGridLines(false);
}
Edit Base:
Hole 1:
[]: tf = Typeface.createFromAsset(getAssets(), "OpenSans-Regular.ttf");
Hole 2:
[]: <SKIP>
Hole 3:
[]: <SKIP>
Hole 4:
[]: l.setTypeface(tf);
Hole 5:
[]: yl.setTypeface(tf);
Hole 6:
[]: xl.setTypeface(tf);

Edit A:
Hole 1:
[]: <SKIP>
Hole 2:
[]: <SKIP>
Hole 3:
[]: mChart.setMaxHighlightDistance(50.0F);
Hole 4:
[]: l.setTypeface(mTfLight);
Hole 5:
[]: yl.setTypeface(mTfLight);
Hole 6:
[]: xl.setTypeface(mTfLight);

Edit B:
Hole 1:
[]: mChart.addShapeRenderer(new CustomScatterShapeRenderer(), CustomScatterShapeRenderer.IDENTIFIER);
Hole 2:
[]: tf = Typeface.createFromAsset(getAssets(), "OpenSans-Regular.ttf");
Hole 3:
[]: <SKIP>
Hole 4:
[]: l.setTypeface(tf);
Hole 5:
[]: yl.setTypeface(tf);
Hole 6:
[]: xl.setTypeface(tf);

Edit M:
Hole 1:
[]: mChart.addShapeRenderer(new CustomScatterShapeRenderer(), CustomScatterShapeRenderer.IDENTIFIER);
Hole 2:
[]: <SKIP>
Hole 3:
[]: mChart.setMaxHighlightDistance(50.0F);
Hole 4:
[]: l.setTypeface(mTfLight);
Hole 5:
[]: yl.setTypeface(mTfLight);
Hole 6:
[]: xl.setTypeface(mTfLight);


