(set-logic HORN)
(declare-fun Q_n0 (Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_exit (Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n0_1 (Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n1 (Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n1_1 (Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n1_a (Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n2 (Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n2_1 (Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n2_1b (Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n2_a (Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (and (= ro ra) (= ra rb) (= rb rm) (= xo xa) (= xa xb) (= xb xm) (= yo ya) (= ya yb) (= yb ym)) (Q_n0 ro ra rb rm xo xa xb xm yo ya yb ym))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n0 ro ra rb rm xo xa xb xm yo ya yb ym) (Q_n0_1 ro ra rb rm xo xa xb xm yo ya yb ym))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int) (yb1 Int) (ym1 Int)) (=> (and (= ym1 2) (= yb1 2) (Q_n0_1 ro ra rb rm xo xa xb xm yo ya yb ym)) (Q_n1 ro ra rb rm xo xa xb xm yo ya yb1 ym1))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int) (yb1 Int) (ym1 Int)) (=> (and (= ym1 2) (= yb1 2) (Q_n0_1 ro ra rb rm xo xa xb xm yo ya yb ym)) (Q_n2 ro ra rb rm xo xa xb xm yo ya yb1 ym1))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n1 ro ra rb rm xo xa xb xm yo ya yb ym) (Q_n1_a ro ra rb rm xo xa xb xm yo ya yb ym))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int) (ro1 Int) (ra1 Int) (rb1 Int) (rm1 Int)) (=> (and (= rm1 1) (= rb1 1) (= ra1 1) (= ro1 1) (Q_n1_1 ro ra rb rm xo xa xb xm yo ya yb ym)) (Q_exit ro1 ra1 rb1 rm1 xo xa xb xm yo ya yb ym))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (and (= ym 1) (= xb 1) (= xa 1) (= xo 1) (Q_n1_a ro ra rb rm xo xa xb xm yo ya yb ym)) (Q_n1_1 ro ra rb rm xo xa xb xm yo ya yb ym))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n2 ro ra rb rm xo xa xb xm yo ya yb ym) (Q_n2_a ro ra rb rm xo xa xb xm yo ya yb ym))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n2_1 ro ra rb rm xo xa xb xm yo ya yb ym) (Q_n2_1b ro ra rb rm xo xa xb xm yo ya yb ym))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int) (ro1 Int) (ra1 Int) (rb1 Int) (rm1 Int)) (=> (and (= rm1 ym) (= rb1 yb) (= ra1 0) (= ro1 0) (Q_n2_1b ro ra rb rm xo xa xb xm yo ya yb ym)) (Q_exit ro1 ra1 rb1 rm1 xo xa xb xm yo ya yb ym))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (and (not (= ym 1)) (not (= xb 1)) (not (= xa 1)) (not (= xo 1)) (Q_n2_a ro ra rb rm xo xa xb xm yo ya yb ym)) (Q_n2_1 ro ra rb rm xo xa xb xm yo ya yb ym))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_exit ro ra rb rm xo xa xb xm yo ya yb ym) (and (and (or (= ro ra) (= rm ra)) (or (= ro rb) (= rm rb)) (or (not (= ro ra)) (not (= ro rb)) (= rm ro))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo))) (and (or (= yo ya) (= ym ya)) (or (= yo yb) (= ym yb)) (or (not (= yo ya)) (not (= yo yb)) (= ym yo)))))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n1 ro ra rb rm xo xa xb xm yo ya yb ym) (and (and (or (= ro ra) (= rm ra)) (or (= ro rb) (= rm rb)) (or (not (= ro ra)) (not (= ro rb)) (= rm ro))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo))) (and (or (= yo ya) (= ym ya)) (or (= yo yb) (= ym yb)) (or (not (= yo ya)) (not (= yo yb)) (= ym yo)))))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n2 ro ra rb rm xo xa xb xm yo ya yb ym) (and (and (or (= ro ra) (= rm ra)) (or (= ro rb) (= rm rb)) (or (not (= ro ra)) (not (= ro rb)) (= rm ro))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo))) (and (or (= yo ya) (= ym ya)) (or (= yo yb) (= ym yb)) (or (not (= yo ya)) (not (= yo yb)) (= ym yo)))))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n1_1 ro ra rb rm xo xa xb xm yo ya yb ym) (and (and (or (= ro ra) (= rm ra)) (or (= ro rb) (= rm rb)) (or (not (= ro ra)) (not (= ro rb)) (= rm ro))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo))) (and (or (= yo ya) (= ym ya)) (or (= yo yb) (= ym yb)) (or (not (= yo ya)) (not (= yo yb)) (= ym yo)))))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n2_1 ro ra rb rm xo xa xb xm yo ya yb ym) (and (and (or (= ro ra) (= rm ra)) (or (= ro rb) (= rm rb)) (or (not (= ro ra)) (not (= ro rb)) (= rm ro))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo))) (and (or (= yo ya) (= ym ya)) (or (= yo yb) (= ym yb)) (or (not (= yo ya)) (not (= yo yb)) (= ym yo)))))))
(check-sat)
