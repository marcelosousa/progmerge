(set-logic HORN)
(declare-fun Q_n0 (Int Int Int Int) Bool)
(declare-fun Q_exit (Int Int Int Int) Bool)
(declare-fun Q_n0_0a (Int Int Int Int) Bool)
(declare-fun Q_n0_0b (Int Int Int Int) Bool)
(declare-fun Q_n1 (Int Int Int Int) Bool)
(declare-fun Q_n2 (Int Int Int Int) Bool)
(declare-fun Q_n3 (Int Int Int Int) Bool)
(declare-fun Q_n4 (Int Int Int Int) Bool)
(assert (forall ((no Int) (na Int) (nb Int) (nm Int)) (=> (and (= no na) (= na nb) (= nb nm)) (Q_n0 no na nb nm))))
(assert (forall ((no Int) (na Int) (nb Int) (nm Int)) (=> (Q_n0 no na nb nm) true)))
(assert (forall ((no Int) (na Int) (nb Int) (nm Int)) (=> (Q_n0 no na nb nm) (Q_n0_0a no na nb nm))))
(assert (forall ((no Int) (na Int) (nb Int) (nm Int) (no1 Int) (na1 Int) (nm1 Int)) (=> (Q_n0_0a no na nb nm) true)))
(assert (forall ((no Int) (na Int) (nb Int) (nm Int) (no1 Int) (na1 Int) (nm1 Int)) (=> (and (= nm1 0) (= na1 0) (= no1 0) (Q_n0_0a no na nb nm)) (Q_n0_0b no1 na1 nb nm1))))
(assert (forall ((no Int) (na Int) (nb Int) (nm Int) (nb1 Int) (nm1 Int)) (=> (Q_n0_0b no na nb nm) true)))
(assert (forall ((no Int) (na Int) (nb Int) (nm Int) (nb1 Int) (nm1 Int)) (=> (and (= nm1 1) (= nb1 1) (Q_n0_0b no na nb nm)) (Q_n1 no na nb1 nm1))))
(assert (forall ((no Int) (na Int) (nb Int) (nm Int)) (=> (Q_n1 no na nb nm) true)))
(assert (forall ((no Int) (na Int) (nb Int) (nm Int)) (=> (Q_n1 no na nb nm) (Q_n2 no na nb nm))))
(assert (forall ((no Int) (na Int) (nb Int) (nm Int)) (=> (Q_n1 no na nb nm) (Q_n4 no na nb nm))))
(assert (forall ((no Int) (na Int) (nb Int) (nm Int)) (=> (Q_n2 no na nb nm) (= (<= no 10) (<= na 10) (<= nb 10) (<= nm 10)))))
(assert (forall ((no Int) (na Int) (nb Int) (nm Int)) (=> (and (<= nm 10) (<= nb 10) (<= na 10) (<= no 10) (Q_n2 no na nb nm)) (Q_n3 no na nb nm))))
(assert (forall ((no Int) (na Int) (nb Int) (nm Int) (no1 Int) (na1 Int) (nb1 Int) (nm1 Int)) (=> (Q_n3 no na nb nm) true)))
(assert (forall ((no Int) (na Int) (nb Int) (nm Int) (no1 Int) (na1 Int) (nb1 Int) (nm1 Int)) (=> (and (= nm1 (+ nm 1)) (= nb1 (+ nb 1)) (= na1 (+ na 1)) (= no1 (+ no 1)) (Q_n3 no na nb nm)) (Q_n1 no1 na1 nb1 nm1))))
(assert (forall ((no Int) (na Int) (nb Int) (nm Int)) (=> (Q_n4 no na nb nm) (= (> no 10) (> na 10) (> nb 10) (> nm 10)))))
(assert (forall ((no Int) (na Int) (nb Int) (nm Int)) (=> (and (> nm 10) (> nb 10) (> na 10) (> no 10) (Q_n4 no na nb nm)) (Q_exit no na nb nm))))
(assert (forall ((no Int) (na Int) (nb Int) (nm Int)) (=> (Q_exit no na nb nm) (and (and (or (= no na) (= nm na)) (or (= no nb) (= nm nb)) (or (not (= no na)) (not (= no nb)) (= nm no)))))))
(assert (forall ((no Int) (na Int) (nb Int) (nm Int)) (=> (Q_n1 no na nb nm) (and (and (or (= no na) (= nm na)) (or (= no nb) (= nm nb)) (or (not (= no na)) (not (= no nb)) (= nm no)))))))
(check-sat)
