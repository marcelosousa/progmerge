(set-logic HORN)
(declare-fun Q_n0 (Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_exit (Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n0_0a (Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n0_0b (Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n0_1b (Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n0_2b (Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n0_3b (Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n1 (Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n2 (Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n3 (Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n4 (Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int)) (=> (and (= ao aa) (= aa ab) (= ab am) (= no na) (= na nb) (= nb nm)) (Q_n0 ao aa ab am no na nb nm))))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int)) (=> (Q_n0 ao aa ab am no na nb nm) true)))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int)) (=> (Q_n0 ao aa ab am no na nb nm) (Q_n0_0a ao aa ab am no na nb nm))))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int) (aa1 Int) (no1 Int)) (=> (Q_n0_0a ao aa ab am no na nb nm) true)))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int) (aa1 Int) (no1 Int)) (=> (and (= aa1 0) (= no1 0) (Q_n0_0a ao aa ab am no na nb nm)) (Q_n0_0b ao aa1 ab am no1 na nb nm))))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int)) (=> (Q_n0_0b ao aa ab am no na nb nm) true)))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int)) (=> (Q_n0_0b ao aa ab am no na nb nm) (Q_n0_1b ao aa ab am no na nb nm))))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int)) (=> (Q_n0_0b ao aa ab am no na nb nm) (Q_n0_3b ao aa ab am no na nb nm))))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int)) (=> (Q_n0_1b ao aa ab am no na nb nm) (= (< nb 0) (< nm 0)))))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int)) (=> (and (< nm 0) (< nb 0) (Q_n0_1b ao aa ab am no na nb nm)) (Q_n0_2b ao aa ab am no na nb nm))))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int) (nb1 Int) (nm1 Int)) (=> (Q_n0_2b ao aa ab am no na nb nm) true)))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int) (nb1 Int) (nm1 Int)) (=> (and (= nm1 1) (= nb1 1) (Q_n0_2b ao aa ab am no na nb nm)) (Q_n1 ao aa ab am no na nb1 nm1))))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int)) (=> (Q_n0_3b ao aa ab am no na nb nm) (= (>= nb 0) (>= nm 0)))))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int)) (=> (and (>= nm 0) (>= nb 0) (Q_n0_3b ao aa ab am no na nb nm)) (Q_n1 ao aa ab am no na nb nm))))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int)) (=> (Q_n1 ao aa ab am no na nb nm) true)))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int)) (=> (Q_n1 ao aa ab am no na nb nm) (Q_n2 ao aa ab am no na nb nm))))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int)) (=> (Q_n1 ao aa ab am no na nb nm) (Q_n4 ao aa ab am no na nb nm))))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int)) (=> (Q_n2 ao aa ab am no na nb nm) (= (<= no 10) (<= nb 10) (<= nm 10)))))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int)) (=> (and (<= nm 10) (<= nb 10) (<= no 10) (Q_n2 ao aa ab am no na nb nm)) (Q_n3 ao aa ab am no na nb nm))))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int) (no1 Int) (nb1 Int) (nm1 Int)) (=> (Q_n3 ao aa ab am no na nb nm) true)))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int) (no1 Int) (nb1 Int) (nm1 Int)) (=> (and (= nm1 (+ nm 1)) (= nb1 (+ nb 1)) (= no1 (+ no 1)) (Q_n3 ao aa ab am no na nb nm)) (Q_n1 ao aa ab am no1 na nb1 nm1))))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int)) (=> (Q_n4 ao aa ab am no na nb nm) (= (> no 10) (> nb 10) (> nm 10)))))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int)) (=> (and (> nm 10) (> nb 10) (> no 10) (Q_n4 ao aa ab am no na nb nm)) (Q_exit ao aa ab am no na nb nm))))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int)) (=> (Q_exit ao aa ab am no na nb nm) (and (and (or (= ao aa) (= am aa)) (or (= ao ab) (= am ab)) (or (not (= ao aa)) (not (= ao ab)) (= am ao))) (and (or (= no na) (= nm na)) (or (= no nb) (= nm nb)) (or (not (= no na)) (not (= no nb)) (= nm no)))))))
(assert (forall ((ao Int) (aa Int) (ab Int) (am Int) (no Int) (na Int) (nb Int) (nm Int)) (=> (Q_n1 ao aa ab am no na nb nm) (and (and (or (= ao aa) (= am aa)) (or (= ao ab) (= am ab)) (or (not (= ao aa)) (not (= ao ab)) (= am ao))) (and (or (= no na) (= nm na)) (or (= no nb) (= nm nb)) (or (not (= no na)) (not (= no nb)) (= nm no)))))))
(check-sat)
