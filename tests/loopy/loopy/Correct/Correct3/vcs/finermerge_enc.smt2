(set-logic HORN)
(declare-fun Q_n0 ((Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n6 ((Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n00 ((Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n1 ((Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n2 ((Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n3 ((Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n3_1 ((Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n4 ((Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n5 ((Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_na5_1 ((Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_nb3_1b ((Array Int Int) (Array Int Int) (Array Int Int) (Array Int Int) Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (and (forall ((i Int)) (= (select ao i) (select aa i))) (forall ((i Int)) (= (select aa i) (select ab i))) (forall ((i Int)) (= (select ab i) (select am i))) (= io ia) (= ia ib) (= ib im) (= no na) (= na nb) (= nb nm) (= reto reta) (= reta retb) (= retb retm) (= xo xa) (= xa xb) (= xb xm)) (Q_n0 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm))))
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int) (io1 Int) (ia1 Int) (ib1 Int) (im1 Int)) (=> (Q_n0 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm) true)))
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int) (io1 Int) (ia1 Int) (ib1 Int) (im1 Int)) (=> (and (= im1 0) (= ib1 0) (= ia1 0) (= io1 0) (Q_n0 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm)) (Q_n1 ao aa ab am io1 ia1 ib1 im1 no na nb nm reto reta retb retm xo xa xb xm))))
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int) (xo1 Int) (xa1 Int) (xb1 Int) (xm1 Int)) (=> (Q_n00 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm) true)))
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int) (xo1 Int) (xa1 Int) (xb1 Int) (xm1 Int)) (=> (and (= xm1 0) (= xb1 0) (= xa1 0) (= xo1 0) (Q_n00 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm)) (Q_n0 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo1 xa1 xb1 xm1))))
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n1 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm) true)))
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n1 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm) (Q_n2 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm))))
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n1 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm) (Q_n5 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm))))
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n2 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm) (= (< io no) (< ia na) (< ib nb) (< im nm)))))
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (and (< im nm) (< ib nb) (< ia na) (< io no) (Q_n2 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm)) (Q_n3 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm))))
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int) (ao1 (Array Int Int)) (aa1 (Array Int Int)) (ab1 (Array Int Int)) (am1 (Array Int Int))) (=> (Q_n3 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm) true)))
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int) (ao1 (Array Int Int)) (aa1 (Array Int Int)) (ab1 (Array Int Int)) (am1 (Array Int Int))) (=> (and (= (store am im 0) am1) (= (store ab ib 0) ab1) (= (store aa ia 0) aa1) (= (store ao io 0) ao1) (Q_n3 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm)) (Q_n3_1 ao1 aa1 ab1 am1 io ia ib im no na nb nm reto reta retb retm xo xa xb xm))))
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n3_1 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm) true)))
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n3_1 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm) (Q_nb3_1b ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm))))
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int) (io1 Int) (ia1 Int) (ib1 Int) (im1 Int)) (=> (Q_n4 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm) true)))
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int) (io1 Int) (ia1 Int) (ib1 Int) (im1 Int)) (=> (and (= im1 (+ im 1)) (= ib1 (+ ib 1)) (= ia1 (+ ia 1)) (= io1 (+ io 1)) (Q_n4 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm)) (Q_n1 ao aa ab am io1 ia1 ib1 im1 no na nb nm reto reta retb retm xo xa xb xm))))
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n5 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm) true)))
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n5 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm) (Q_na5_1 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm))))
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int) (reta1 Int) (retm1 Int)) (=> (Q_na5_1 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm) true)))
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int) (reta1 Int) (retm1 Int)) (=> (and (= retm1 nm) (= reta1 na) (Q_na5_1 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm)) (Q_n6 ao aa ab am io ia ib im no na nb nm reto reta1 retb retm1 xo xa xb xm))))
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int) (xb1 Int) (xm1 Int)) (=> (Q_nb3_1b ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm) true)))
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int) (xb1 Int) (xm1 Int)) (=> (and (= xm1 (+ xm 2)) (= xb1 (+ xb 2)) (Q_nb3_1b ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm)) (Q_n4 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb1 xm1))))
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n6 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm) (and (and (or (forall ((i Int)) (= (select ao i) (select aa i))) (forall ((i Int)) (= (select am i) (select aa i)))) (or (forall ((i Int)) (= (select ao i) (select ab i))) (forall ((i Int)) (= (select am i) (select ab i)))) (or (not (forall ((i Int)) (= (select ao i) (select aa i)))) (not (forall ((i Int)) (= (select ao i) (select ab i)))) (forall ((i Int)) (= (select am i) (select ao i))))) (and (or (= io ia) (= im ia)) (or (= io ib) (= im ib)) (or (not (= io ia)) (not (= io ib)) (= im io))) (and (or (= no na) (= nm na)) (or (= no nb) (= nm nb)) (or (not (= no na)) (not (= no nb)) (= nm no))) (and (or (= reto reta) (= retm reta)) (or (= reto retb) (= retm retb)) (or (not (= reto reta)) (not (= reto retb)) (= retm reto))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo)))))))
(assert (forall ((ao (Array Int Int)) (aa (Array Int Int)) (ab (Array Int Int)) (am (Array Int Int)) (io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (reto Int) (reta Int) (retb Int) (retm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n4 ao aa ab am io ia ib im no na nb nm reto reta retb retm xo xa xb xm) (and (and (or (forall ((i Int)) (= (select ao i) (select aa i))) (forall ((i Int)) (= (select am i) (select aa i)))) (or (forall ((i Int)) (= (select ao i) (select ab i))) (forall ((i Int)) (= (select am i) (select ab i)))) (or (not (forall ((i Int)) (= (select ao i) (select aa i)))) (not (forall ((i Int)) (= (select ao i) (select ab i)))) (forall ((i Int)) (= (select am i) (select ao i))))) (and (or (= io ia) (= im ia)) (or (= io ib) (= im ib)) (or (not (= io ia)) (not (= io ib)) (= im io))) (and (or (= no na) (= nm na)) (or (= no nb) (= nm nb)) (or (not (= no na)) (not (= no nb)) (= nm no))) (and (or (= reto reta) (= retm reta)) (or (= reto retb) (= retm retb)) (or (not (= reto reta)) (not (= reto retb)) (= retm reto))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo)))))))
(check-sat)
