(set-logic HORN)
(declare-fun Q_n0 (Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n2 (Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n0_0 (Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n0_1 (Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n0_2 (Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n0_3 (Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n1 (Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n1_1 (Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n1_2 (Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n1_3 (Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (and (= ro ra) (= ra rb) (= rb rm) (= xo xa) (= xa xb) (= xb xm)) (Q_n0 ro ra rb rm xo xa xb xm))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n0 ro ra rb rm xo xa xb xm) (Q_n0_0 ro ra rb rm xo xa xb xm))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n0_0 ro ra rb rm xo xa xb xm) (and (and (or (= ro ra) (= rm ra)) (or (= ro rb) (= rm rb)) (or (not (= ro ra)) (not (= ro rb)) (= rm ro))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo)))))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n0_0 ro ra rb rm xo xa xb xm) (Q_n0_1 ro ra rb rm xo xa xb xm))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n0_0 ro ra rb rm xo xa xb xm) (Q_n1_1 ro ra rb rm xo xa xb xm))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n0_1 ro ra rb rm xo xa xb xm) (and (and (or (= ro ra) (= rm ra)) (or (= ro rb) (= rm rb)) (or (not (= ro ra)) (not (= ro rb)) (= rm ro))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo)))))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n1_1 ro ra rb rm xo xa xb xm) (and (and (or (= ro ra) (= rm ra)) (or (= ro rb) (= rm rb)) (or (not (= ro ra)) (not (= ro rb)) (= rm ro))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo)))))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (and (> xm 0) (> xb 0) (> xa 0) (Q_n0_1 ro ra rb rm xo xa xb xm)) (Q_n0_2 ro ra rb rm xo xa xb xm))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n0_2 ro ra rb rm xo xa xb xm) (and (and (or (= ro ra) (= rm ra)) (or (= ro rb) (= rm rb)) (or (not (= ro ra)) (not (= ro rb)) (= rm ro))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo)))))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int) (ra1 Int) (rm1 Int)) (=> (and (= rm1 0) (= ra1 0) (Q_n0_2 ro ra rb rm xo xa xb xm)) (Q_n0_3 ro ra1 rb rm1 xo xa xb xm))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n0_3 ro ra rb rm xo xa xb xm) (and (and (or (= ro ra) (= rm ra)) (or (= ro rb) (= rm rb)) (or (not (= ro ra)) (not (= ro rb)) (= rm ro))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo)))))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int) (rb1 Int) (rm1 Int)) (=> (and (= rm1 1) (= rb1 1) (Q_n0_3 ro ra rb rm xo xa xb xm)) (Q_n1 ro ra rb1 rm1 xo xa xb xm))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n1 ro ra rb rm xo xa xb xm) (and (and (or (= ro ra) (= rm ra)) (or (= ro rb) (= rm rb)) (or (not (= ro ra)) (not (= ro rb)) (= rm ro))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo)))))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n1 ro ra rb rm xo xa xb xm) (Q_n1_3 ro ra rb rm xo xa xb xm))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n1_3 ro ra rb rm xo xa xb xm) (and (and (or (= ro ra) (= rm ra)) (or (= ro rb) (= rm rb)) (or (not (= ro ra)) (not (= ro rb)) (= rm ro))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo)))))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (and (<= xm 0) (<= xb 0) (<= xa 0) (Q_n1_1 ro ra rb rm xo xa xb xm)) (Q_n1_2 ro ra rb rm xo xa xb xm))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n1_2 ro ra rb rm xo xa xb xm) (and (and (or (= ro ra) (= rm ra)) (or (= ro rb) (= rm rb)) (or (not (= ro ra)) (not (= ro rb)) (= rm ro))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo)))))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int) (ra1 Int) (rb1 Int) (rm1 Int)) (=> (and (= rm1 0) (= rb1 0) (= ra1 1) (Q_n1_2 ro ra rb rm xo xa xb xm)) (Q_n1 ro ra1 rb1 rm1 xo xa xb xm))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n1 ro ra rb rm xo xa xb xm) (and (and (or (= ro ra) (= rm ra)) (or (= ro rb) (= rm rb)) (or (not (= ro ra)) (not (= ro rb)) (= rm ro))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo)))))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int) (ro1 Int)) (=> (and (= ro1 1) (Q_n1_3 ro ra rb rm xo xa xb xm)) (Q_n2 ro1 ra rb rm xo xa xb xm))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n2 ro ra rb rm xo xa xb xm) (and (and (or (= ro ra) (= rm ra)) (or (= ro rb) (= rm rb)) (or (not (= ro ra)) (not (= ro rb)) (= rm ro))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo)))))))
(assert (forall ((ro Int) (ra Int) (rb Int) (rm Int) (xo Int) (xa Int) (xb Int) (xm Int)) (=> (Q_n2 ro ra rb rm xo xa xb xm) (and (and (or (= ro ra) (= rm ra)) (or (= ro rb) (= rm rb)) (or (not (= ro ra)) (not (= ro rb)) (= rm ro))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo)))))))
(check-sat)
