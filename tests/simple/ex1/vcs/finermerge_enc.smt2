(set-logic HORN)
(declare-fun Q_n0 (Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_exit (Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n0_a (Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n1 (Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n1_b (Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (and (= xo xa) (= xa xb) (= xb xm) (= yo ya) (= ya yb) (= yb ym)) (Q_n0 xo xa xb xm yo ya yb ym))))
(assert (forall ((xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n0 xo xa xb xm yo ya yb ym) true)))
(assert (forall ((xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n0 xo xa xb xm yo ya yb ym) (Q_n0_a xo xa xb xm yo ya yb ym))))
(assert (forall ((xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int) (xa1 Int) (xm1 Int)) (=> (Q_n0_a xo xa xb xm yo ya yb ym) true)))
(assert (forall ((xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int) (xa1 Int) (xm1 Int)) (=> (and (= xm1 0) (= xa1 0) (Q_n0_a xo xa xb xm yo ya yb ym)) (Q_n1 xo xa1 xb xm1 yo ya yb ym))))
(assert (forall ((xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n1 xo xa xb xm yo ya yb ym) true)))
(assert (forall ((xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n1 xo xa xb xm yo ya yb ym) (Q_n1_b xo xa xb xm yo ya yb ym))))
(assert (forall ((xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int) (yb1 Int) (ym1 Int)) (=> (Q_n1_b xo xa xb xm yo ya yb ym) true)))
(assert (forall ((xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int) (yb1 Int) (ym1 Int)) (=> (and (= ym1 1) (= yb1 1) (Q_n1_b xo xa xb xm yo ya yb ym)) (Q_exit xo xa xb xm yo ya yb1 ym1))))
(assert (forall ((xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_exit xo xa xb xm yo ya yb ym) (and (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo))) (and (or (= yo ya) (= ym ya)) (or (= yo yb) (= ym yb)) (or (not (= yo ya)) (not (= yo yb)) (= ym yo)))))))
(assert (forall ((xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n1 xo xa xb xm yo ya yb ym) (and (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo))) (and (or (= yo ya) (= ym ya)) (or (= yo yb) (= ym yb)) (or (not (= yo ya)) (not (= yo yb)) (= ym yo)))))))
(check-sat)
