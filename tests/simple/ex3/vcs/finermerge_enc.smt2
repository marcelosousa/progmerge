(set-logic HORN)
(declare-fun Q_start (Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_exit (Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n0 (Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n1 (Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n11 (Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n12 (Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n12_a (Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n12_b (Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n2 (Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_n21 (Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun Q_start1 (Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (and (= io ia) (= ia ib) (= ib im) (= no na) (= na nb) (= nb nm) (= xo xa) (= xa xb) (= xb xm) (= yo ya) (= ya yb) (= yb ym)) (Q_start io ia ib im no na nb nm xo xa xb xm yo ya yb ym))))
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n0 io ia ib im no na nb nm xo xa xb xm yo ya yb ym) (Q_n1 io ia ib im no na nb nm xo xa xb xm yo ya yb ym))))
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n0 io ia ib im no na nb nm xo xa xb xm yo ya yb ym) (Q_n2 io ia ib im no na nb nm xo xa xb xm yo ya yb ym))))
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n1 io ia ib im no na nb nm xo xa xb xm yo ya yb ym) (and (and (or (= io ia) (= im ia)) (or (= io ib) (= im ib)) (or (not (= io ia)) (not (= io ib)) (= im io))) (and (or (= no na) (= nm na)) (or (= no nb) (= nm nb)) (or (not (= no na)) (not (= no nb)) (= nm no))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo))) (and (or (= yo ya) (= ym ya)) (or (= yo yb) (= ym yb)) (or (not (= yo ya)) (not (= yo yb)) (= ym yo)))))))
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n2 io ia ib im no na nb nm xo xa xb xm yo ya yb ym) (and (and (or (= io ia) (= im ia)) (or (= io ib) (= im ib)) (or (not (= io ia)) (not (= io ib)) (= im io))) (and (or (= no na) (= nm na)) (or (= no nb) (= nm nb)) (or (not (= no na)) (not (= no nb)) (= nm no))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo))) (and (or (= yo ya) (= ym ya)) (or (= yo yb) (= ym yb)) (or (not (= yo ya)) (not (= yo yb)) (= ym yo)))))))
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (and (< im nm) (< ib nb) (< ia na) (< io no) (Q_n1 io ia ib im no na nb nm xo xa xb xm yo ya yb ym)) (Q_n11 io ia ib im no na nb nm xo xa xb xm yo ya yb ym))))
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n11 io ia ib im no na nb nm xo xa xb xm yo ya yb ym) (and (and (or (= io ia) (= im ia)) (or (= io ib) (= im ib)) (or (not (= io ia)) (not (= io ib)) (= im io))) (and (or (= no na) (= nm na)) (or (= no nb) (= nm nb)) (or (not (= no na)) (not (= no nb)) (= nm no))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo))) (and (or (= yo ya) (= ym ya)) (or (= yo yb) (= ym yb)) (or (not (= yo ya)) (not (= yo yb)) (= ym yo)))))))
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int) (io1 Int) (ia1 Int) (ib1 Int) (im1 Int)) (=> (and (= im1 (+ im 1)) (= ib1 (+ ib 1)) (= ia1 (+ ia 1)) (= io1 (+ io 1)) (Q_n11 io ia ib im no na nb nm xo xa xb xm yo ya yb ym)) (Q_n12 io1 ia1 ib1 im1 no na nb nm xo xa xb xm yo ya yb ym))))
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n12 io ia ib im no na nb nm xo xa xb xm yo ya yb ym) (and (and (or (= io ia) (= im ia)) (or (= io ib) (= im ib)) (or (not (= io ia)) (not (= io ib)) (= im io))) (and (or (= no na) (= nm na)) (or (= no nb) (= nm nb)) (or (not (= no na)) (not (= no nb)) (= nm no))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo))) (and (or (= yo ya) (= ym ya)) (or (= yo yb) (= ym yb)) (or (not (= yo ya)) (not (= yo yb)) (= ym yo)))))))
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n12 io ia ib im no na nb nm xo xa xb xm yo ya yb ym) (Q_n12_a io ia ib im no na nb nm xo xa xb xm yo ya yb ym))))
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n12_a io ia ib im no na nb nm xo xa xb xm yo ya yb ym) (and (and (or (= io ia) (= im ia)) (or (= io ib) (= im ib)) (or (not (= io ia)) (not (= io ib)) (= im io))) (and (or (= no na) (= nm na)) (or (= no nb) (= nm nb)) (or (not (= no na)) (not (= no nb)) (= nm no))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo))) (and (or (= yo ya) (= ym ya)) (or (= yo yb) (= ym yb)) (or (not (= yo ya)) (not (= yo yb)) (= ym yo)))))))
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int) (xa1 Int) (xm1 Int)) (=> (and (= xm1 (+ xm 1)) (= xa1 (+ xa 1)) (Q_n12_a io ia ib im no na nb nm xo xa xb xm yo ya yb ym)) (Q_n12_b io ia ib im no na nb nm xo xa1 xb xm1 yo ya yb ym))))
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n12_b io ia ib im no na nb nm xo xa xb xm yo ya yb ym) (and (and (or (= io ia) (= im ia)) (or (= io ib) (= im ib)) (or (not (= io ia)) (not (= io ib)) (= im io))) (and (or (= no na) (= nm na)) (or (= no nb) (= nm nb)) (or (not (= no na)) (not (= no nb)) (= nm no))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo))) (and (or (= yo ya) (= ym ya)) (or (= yo yb) (= ym yb)) (or (not (= yo ya)) (not (= yo yb)) (= ym yo)))))))
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int) (yb1 Int) (ym1 Int)) (=> (and (= ym1 (+ ym 1)) (= yb1 (+ yb 1)) (Q_n12_b io ia ib im no na nb nm xo xa xb xm yo ya yb ym)) (Q_n0 io ia ib im no na nb nm xo xa xb xm yo ya yb1 ym1))))
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n0 io ia ib im no na nb nm xo xa xb xm yo ya yb ym) (and (and (or (= io ia) (= im ia)) (or (= io ib) (= im ib)) (or (not (= io ia)) (not (= io ib)) (= im io))) (and (or (= no na) (= nm na)) (or (= no nb) (= nm nb)) (or (not (= no na)) (not (= no nb)) (= nm no))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo))) (and (or (= yo ya) (= ym ya)) (or (= yo yb) (= ym yb)) (or (not (= yo ya)) (not (= yo yb)) (= ym yo)))))))
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (and (>= im nm) (>= ib nb) (>= ia na) (>= io no) (Q_n2 io ia ib im no na nb nm xo xa xb xm yo ya yb ym)) (Q_n21 io ia ib im no na nb nm xo xa xb xm yo ya yb ym))))
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n21 io ia ib im no na nb nm xo xa xb xm yo ya yb ym) (and (and (or (= io ia) (= im ia)) (or (= io ib) (= im ib)) (or (not (= io ia)) (not (= io ib)) (= im io))) (and (or (= no na) (= nm na)) (or (= no nb) (= nm nb)) (or (not (= no na)) (not (= no nb)) (= nm no))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo))) (and (or (= yo ya) (= ym ya)) (or (= yo yb) (= ym yb)) (or (not (= yo ya)) (not (= yo yb)) (= ym yo)))))))
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n21 io ia ib im no na nb nm xo xa xb xm yo ya yb ym) (Q_exit io ia ib im no na nb nm xo xa xb xm yo ya yb ym))))
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_exit io ia ib im no na nb nm xo xa xb xm yo ya yb ym) (and (and (or (= io ia) (= im ia)) (or (= io ib) (= im ib)) (or (not (= io ia)) (not (= io ib)) (= im io))) (and (or (= no na) (= nm na)) (or (= no nb) (= nm nb)) (or (not (= no na)) (not (= no nb)) (= nm no))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo))) (and (or (= yo ya) (= ym ya)) (or (= yo yb) (= ym yb)) (or (not (= yo ya)) (not (= yo yb)) (= ym yo)))))))
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int) (xo1 Int) (xa1 Int) (xb1 Int) (xm1 Int)) (=> (and (= xm1 0) (= xb1 0) (= xa1 0) (= xo1 0) (Q_start io ia ib im no na nb nm xo xa xb xm yo ya yb ym)) (Q_start1 io ia ib im no na nb nm xo1 xa1 xb1 xm1 yo ya yb ym))))
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_start1 io ia ib im no na nb nm xo xa xb xm yo ya yb ym) (and (and (or (= io ia) (= im ia)) (or (= io ib) (= im ib)) (or (not (= io ia)) (not (= io ib)) (= im io))) (and (or (= no na) (= nm na)) (or (= no nb) (= nm nb)) (or (not (= no na)) (not (= no nb)) (= nm no))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo))) (and (or (= yo ya) (= ym ya)) (or (= yo yb) (= ym yb)) (or (not (= yo ya)) (not (= yo yb)) (= ym yo)))))))
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int) (yo1 Int) (ya1 Int) (yb1 Int) (ym1 Int)) (=> (and (= ym1 10) (= yb1 10) (= ya1 10) (= yo1 10) (Q_start1 io ia ib im no na nb nm xo xa xb xm yo ya yb ym)) (Q_n0 io ia ib im no na nb nm xo xa xb xm yo1 ya1 yb1 ym1))))
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_n0 io ia ib im no na nb nm xo xa xb xm yo ya yb ym) (and (and (or (= io ia) (= im ia)) (or (= io ib) (= im ib)) (or (not (= io ia)) (not (= io ib)) (= im io))) (and (or (= no na) (= nm na)) (or (= no nb) (= nm nb)) (or (not (= no na)) (not (= no nb)) (= nm no))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo))) (and (or (= yo ya) (= ym ya)) (or (= yo yb) (= ym yb)) (or (not (= yo ya)) (not (= yo yb)) (= ym yo)))))))
(assert (forall ((io Int) (ia Int) (ib Int) (im Int) (no Int) (na Int) (nb Int) (nm Int) (xo Int) (xa Int) (xb Int) (xm Int) (yo Int) (ya Int) (yb Int) (ym Int)) (=> (Q_exit io ia ib im no na nb nm xo xa xb xm yo ya yb ym) (and (and (or (= io ia) (= im ia)) (or (= io ib) (= im ib)) (or (not (= io ia)) (not (= io ib)) (= im io))) (and (or (= no na) (= nm na)) (or (= no nb) (= nm nb)) (or (not (= no na)) (not (= no nb)) (= nm no))) (and (or (= xo xa) (= xm xa)) (or (= xo xb) (= xm xb)) (or (not (= xo xa)) (not (= xo xb)) (= xm xo))) (and (or (= yo ya) (= ym ya)) (or (= yo yb) (= ym yb)) (or (not (= yo ya)) (not (= yo yb)) (= ym yo)))))))
(check-sat)
